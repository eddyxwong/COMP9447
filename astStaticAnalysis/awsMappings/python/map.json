{
    "accessanalyzer.applyarchiverule": "access-analyzer:ApplyArchiveRule",
    "accessanalyzer.cancelpolicygeneration": "access-analyzer:CancelPolicyGeneration",
    "accessanalyzer.createaccesspreview": "access-analyzer:CreateAccessPreview",
    "accessanalyzer.createanalyzer": "access-analyzer:CreateAnalyzer",
    "accessanalyzer.createarchiverule": "access-analyzer:CreateArchiveRule",
    "accessanalyzer.deleteanalyzer": "access-analyzer:DeleteAnalyzer",
    "accessanalyzer.deletearchiverule": "access-analyzer:DeleteArchiveRule",
    "accessanalyzer.getaccesspreview": "access-analyzer:GetAccessPreview",
    "accessanalyzer.getanalyzedresource": "access-analyzer:GetAnalyzedResource",
    "accessanalyzer.getanalyzer": "access-analyzer:GetAnalyzer",
    "accessanalyzer.getarchiverule": "access-analyzer:GetArchiveRule",
    "accessanalyzer.getfinding": "access-analyzer:GetFinding",
    "accessanalyzer.getgeneratedpolicy": "access-analyzer:GetGeneratedPolicy",
    "accessanalyzer.listaccesspreviewfindings": "access-analyzer:ListAccessPreviewFindings",
    "accessanalyzer.listaccesspreviews": "access-analyzer:ListAccessPreviews",
    "accessanalyzer.listanalyzedresources": "access-analyzer:ListAnalyzedResources",
    "accessanalyzer.listanalyzers": "access-analyzer:ListAnalyzers",
    "accessanalyzer.listarchiverules": "access-analyzer:ListArchiveRules",
    "accessanalyzer.listfindings": "access-analyzer:ListFindings",
    "accessanalyzer.listpolicygenerations": "access-analyzer:ListPolicyGenerations",
    "accessanalyzer.listtagsforresource": "access-analyzer:ListTagsForResource",
    "accessanalyzer.startpolicygeneration": "access-analyzer:StartPolicyGeneration",
    "accessanalyzer.startresourcescan": "access-analyzer:StartResourceScan",
    "accessanalyzer.tagresource": "access-analyzer:TagResource",
    "accessanalyzer.untagresource": "access-analyzer:UntagResource",
    "accessanalyzer.updatearchiverule": "access-analyzer:UpdateArchiveRule",
    "accessanalyzer.updatefindings": "access-analyzer:UpdateFindings",
    "accessanalyzer.validatepolicy": "access-analyzer:ValidatePolicy",
    "account.deletealternatecontact": "account:DeleteAlternateContact",
    "account.getalternatecontact": "account:GetAlternateContact",
    "account.putalternatecontact": "account:PutAlternateContact",
    "acm.addtagstocertificate": "acm:AddTagsToCertificate",
    "acm.deletecertificate": "acm:DeleteCertificate",
    "acm.describecertificate": "acm:DescribeCertificate",
    "acm.exportcertificate": "acm:ExportCertificate",
    "acm.getaccountconfiguration": "acm:GetAccountConfiguration",
    "acm.getcertificate": "acm:GetCertificate",
    "acm.importcertificate": "acm:ImportCertificate",
    "acm.listcertificates": "acm:ListCertificates",
    "acm.listtagsforcertificate": "acm:ListTagsForCertificate",
    "acm.putaccountconfiguration": "acm:PutAccountConfiguration",
    "acm.removetagsfromcertificate": "acm:RemoveTagsFromCertificate",
    "acm.renewcertificate": "acm:RenewCertificate",
    "acm.requestcertificate": "acm:RequestCertificate",
    "acm.resendvalidationemail": "acm:ResendValidationEmail",
    "acm.updatecertificateoptions": "acm:UpdateCertificateOptions",
    "acmpca.createcertificateauthority": "acm-pca:CreateCertificateAuthority",
    "acmpca.createcertificateauthorityauditreport": "acm-pca:CreateCertificateAuthorityAuditReport",
    "acmpca.createpermission": "acm-pca:CreatePermission",
    "acmpca.deletecertificateauthority": "acm-pca:DeleteCertificateAuthority",
    "acmpca.deletepermission": "acm-pca:DeletePermission",
    "acmpca.deletepolicy": "acm-pca:DeletePolicy",
    "acmpca.describecertificateauthority": "acm-pca:DescribeCertificateAuthority",
    "acmpca.describecertificateauthorityauditreport": "acm-pca:DescribeCertificateAuthorityAuditReport",
    "acmpca.getcertificate": "acm-pca:GetCertificate",
    "acmpca.getcertificateauthoritycertificate": "acm-pca:GetCertificateAuthorityCertificate",
    "acmpca.getcertificateauthoritycsr": "acm-pca:GetCertificateAuthorityCsr",
    "acmpca.getpolicy": "acm-pca:GetPolicy",
    "acmpca.importcertificateauthoritycertificate": "acm-pca:ImportCertificateAuthorityCertificate",
    "acmpca.issuecertificate": "acm-pca:IssueCertificate",
    "acmpca.listcertificateauthorities": "acm-pca:ListCertificateAuthorities",
    "acmpca.listpermissions": "acm-pca:ListPermissions",
    "acmpca.listtags": "acm-pca:ListTags",
    "acmpca.putpolicy": "acm-pca:PutPolicy",
    "acmpca.restorecertificateauthority": "acm-pca:RestoreCertificateAuthority",
    "acmpca.revokecertificate": "acm-pca:RevokeCertificate",
    "acmpca.tagcertificateauthority": "acm-pca:TagCertificateAuthority",
    "acmpca.untagcertificateauthority": "acm-pca:UntagCertificateAuthority",
    "acmpca.updatecertificateauthority": "acm-pca:UpdateCertificateAuthority",
    "alexaforbusiness.approveskill": "a4b:ApproveSkill",
    "alexaforbusiness.associatecontactwithaddressbook": "a4b:AssociateContactWithAddressBook",
    "alexaforbusiness.associatedevicewithnetworkprofile": "a4b:AssociateDeviceWithNetworkProfile",
    "alexaforbusiness.associatedevicewithroom": "a4b:AssociateDeviceWithRoom",
    "alexaforbusiness.associateskillgroupwithroom": "a4b:AssociateSkillGroupWithRoom",
    "alexaforbusiness.associateskillwithskillgroup": "a4b:AssociateSkillWithSkillGroup",
    "alexaforbusiness.associateskillwithusers": "a4b:AssociateSkillWithUsers",
    "alexaforbusiness.createaddressbook": "a4b:CreateAddressBook",
    "alexaforbusiness.createbusinessreportschedule": "a4b:CreateBusinessReportSchedule",
    "alexaforbusiness.createconferenceprovider": "a4b:CreateConferenceProvider",
    "alexaforbusiness.createcontact": "a4b:CreateContact",
    "alexaforbusiness.creategatewaygroup": "a4b:CreateGatewayGroup",
    "alexaforbusiness.createnetworkprofile": "a4b:CreateNetworkProfile",
    "alexaforbusiness.createprofile": "a4b:CreateProfile",
    "alexaforbusiness.createroom": "a4b:CreateRoom",
    "alexaforbusiness.createskillgroup": "a4b:CreateSkillGroup",
    "alexaforbusiness.createuser": "a4b:CreateUser",
    "alexaforbusiness.deleteaddressbook": "a4b:DeleteAddressBook",
    "alexaforbusiness.deletebusinessreportschedule": "a4b:DeleteBusinessReportSchedule",
    "alexaforbusiness.deleteconferenceprovider": "a4b:DeleteConferenceProvider",
    "alexaforbusiness.deletecontact": "a4b:DeleteContact",
    "alexaforbusiness.deletedevice": "a4b:DeleteDevice",
    "alexaforbusiness.deletedeviceusagedata": "a4b:DeleteDeviceUsageData",
    "alexaforbusiness.deletegatewaygroup": "a4b:DeleteGatewayGroup",
    "alexaforbusiness.deletenetworkprofile": "a4b:DeleteNetworkProfile",
    "alexaforbusiness.deleteprofile": "a4b:DeleteProfile",
    "alexaforbusiness.deleteroom": "a4b:DeleteRoom",
    "alexaforbusiness.deleteroomskillparameter": "a4b:DeleteRoomSkillParameter",
    "alexaforbusiness.deleteskillauthorization": "a4b:DeleteSkillAuthorization",
    "alexaforbusiness.deleteskillgroup": "a4b:DeleteSkillGroup",
    "alexaforbusiness.deleteuser": "a4b:DeleteUser",
    "alexaforbusiness.disassociatecontactfromaddressbook": "a4b:DisassociateContactFromAddressBook",
    "alexaforbusiness.disassociatedevicefromroom": "a4b:DisassociateDeviceFromRoom",
    "alexaforbusiness.disassociateskillfromskillgroup": "a4b:DisassociateSkillFromSkillGroup",
    "alexaforbusiness.disassociateskillfromusers": "a4b:DisassociateSkillFromUsers",
    "alexaforbusiness.disassociateskillgroupfromroom": "a4b:DisassociateSkillGroupFromRoom",
    "alexaforbusiness.forgetsmarthomeappliances": "a4b:ForgetSmartHomeAppliances",
    "alexaforbusiness.getaddressbook": "a4b:GetAddressBook",
    "alexaforbusiness.getconferencepreference": "a4b:GetConferencePreference",
    "alexaforbusiness.getconferenceprovider": "a4b:GetConferenceProvider",
    "alexaforbusiness.getcontact": "a4b:GetContact",
    "alexaforbusiness.getdevice": "a4b:GetDevice",
    "alexaforbusiness.getgateway": "a4b:GetGateway",
    "alexaforbusiness.getgatewaygroup": "a4b:GetGatewayGroup",
    "alexaforbusiness.getinvitationconfiguration": "a4b:GetInvitationConfiguration",
    "alexaforbusiness.getnetworkprofile": "a4b:GetNetworkProfile",
    "alexaforbusiness.getprofile": "a4b:GetProfile",
    "alexaforbusiness.getroom": "a4b:GetRoom",
    "alexaforbusiness.getroomskillparameter": "a4b:GetRoomSkillParameter",
    "alexaforbusiness.getskillgroup": "a4b:GetSkillGroup",
    "alexaforbusiness.listbusinessreportschedules": "a4b:ListBusinessReportSchedules",
    "alexaforbusiness.listconferenceproviders": "a4b:ListConferenceProviders",
    "alexaforbusiness.listdeviceevents": "a4b:ListDeviceEvents",
    "alexaforbusiness.listgatewaygroups": "a4b:ListGatewayGroups",
    "alexaforbusiness.listgateways": "a4b:ListGateways",
    "alexaforbusiness.listskills": "a4b:ListSkills",
    "alexaforbusiness.listskillsstorecategories": "a4b:ListSkillsStoreCategories",
    "alexaforbusiness.listskillsstoreskillsbycategory": "a4b:ListSkillsStoreSkillsByCategory",
    "alexaforbusiness.listsmarthomeappliances": "a4b:ListSmartHomeAppliances",
    "alexaforbusiness.listtags": "a4b:ListTags",
    "alexaforbusiness.putconferencepreference": "a4b:PutConferencePreference",
    "alexaforbusiness.putinvitationconfiguration": "a4b:PutInvitationConfiguration",
    "alexaforbusiness.putroomskillparameter": "a4b:PutRoomSkillParameter",
    "alexaforbusiness.putskillauthorization": "a4b:PutSkillAuthorization",
    "alexaforbusiness.registeravsdevice": "a4b:RegisterAVSDevice",
    "alexaforbusiness.rejectskill": "a4b:RejectSkill",
    "alexaforbusiness.resolveroom": "a4b:ResolveRoom",
    "alexaforbusiness.revokeinvitation": "a4b:RevokeInvitation",
    "alexaforbusiness.searchaddressbooks": "a4b:SearchAddressBooks",
    "alexaforbusiness.searchcontacts": "a4b:SearchContacts",
    "alexaforbusiness.searchdevices": "a4b:SearchDevices",
    "alexaforbusiness.searchnetworkprofiles": "a4b:SearchNetworkProfiles",
    "alexaforbusiness.searchprofiles": "a4b:SearchProfiles",
    "alexaforbusiness.searchrooms": "a4b:SearchRooms",
    "alexaforbusiness.searchskillgroups": "a4b:SearchSkillGroups",
    "alexaforbusiness.searchusers": "a4b:SearchUsers",
    "alexaforbusiness.sendannouncement": "a4b:SendAnnouncement",
    "alexaforbusiness.sendinvitation": "a4b:SendInvitation",
    "alexaforbusiness.startdevicesync": "a4b:StartDeviceSync",
    "alexaforbusiness.startsmarthomeappliancediscovery": "a4b:StartSmartHomeApplianceDiscovery",
    "alexaforbusiness.tagresource": "a4b:TagResource",
    "alexaforbusiness.untagresource": "a4b:UntagResource",
    "alexaforbusiness.updateaddressbook": "a4b:UpdateAddressBook",
    "alexaforbusiness.updatebusinessreportschedule": "a4b:UpdateBusinessReportSchedule",
    "alexaforbusiness.updateconferenceprovider": "a4b:UpdateConferenceProvider",
    "alexaforbusiness.updatecontact": "a4b:UpdateContact",
    "alexaforbusiness.updatedevice": "a4b:UpdateDevice",
    "alexaforbusiness.updategateway": "a4b:UpdateGateway",
    "alexaforbusiness.updategatewaygroup": "a4b:UpdateGatewayGroup",
    "alexaforbusiness.updatenetworkprofile": "a4b:UpdateNetworkProfile",
    "alexaforbusiness.updateprofile": "a4b:UpdateProfile",
    "alexaforbusiness.updateroom": "a4b:UpdateRoom",
    "alexaforbusiness.updateskillgroup": "a4b:UpdateSkillGroup",
    "amp.createalertmanagerdefinition": "aps:CreateAlertManagerDefinition",
    "amp.createrulegroupsnamespace": "aps:CreateRuleGroupsNamespace",
    "amp.createworkspace": "aps:CreateWorkspace",
    "amp.deletealertmanagerdefinition": "aps:DeleteAlertManagerDefinition",
    "amp.deleterulegroupsnamespace": "aps:DeleteRuleGroupsNamespace",
    "amp.deleteworkspace": "aps:DeleteWorkspace",
    "amp.describealertmanagerdefinition": "aps:DescribeAlertManagerDefinition",
    "amp.describerulegroupsnamespace": "aps:DescribeRuleGroupsNamespace",
    "amp.describeworkspace": "aps:DescribeWorkspace",
    "amp.listrulegroupsnamespaces": "aps:ListRuleGroupsNamespaces",
    "amp.listtagsforresource": "aps:ListTagsForResource",
    "amp.listworkspaces": "aps:ListWorkspaces",
    "amp.putalertmanagerdefinition": "aps:PutAlertManagerDefinition",
    "amp.putrulegroupsnamespace": "aps:PutRuleGroupsNamespace",
    "amp.tagresource": "aps:TagResource",
    "amp.untagresource": "aps:UntagResource",
    "amp.updateworkspacealias": "aps:UpdateWorkspaceAlias",
    "amplify.createapp": "amplify:CreateApp",
    "amplify.createbackendenvironment": "amplify:CreateBackendEnvironment",
    "amplify.createbranch": "amplify:CreateBranch",
    "amplify.createdeployment": "amplify:CreateDeployment",
    "amplify.createdomainassociation": "amplify:CreateDomainAssociation",
    "amplify.createwebhook": "amplify:CreateWebHook",
    "amplify.deleteapp": "amplify:DeleteApp",
    "amplify.deletebackendenvironment": "amplify:DeleteBackendEnvironment",
    "amplify.deletebranch": "amplify:DeleteBranch",
    "amplify.deletedomainassociation": "amplify:DeleteDomainAssociation",
    "amplify.deletejob": "amplify:DeleteJob",
    "amplify.deletewebhook": "amplify:DeleteWebHook",
    "amplify.generateaccesslogs": "amplify:GenerateAccessLogs",
    "amplify.getapp": "amplify:GetApp",
    "amplify.getartifacturl": "amplify:GetArtifactUrl",
    "amplify.getbackendenvironment": "amplify:GetBackendEnvironment",
    "amplify.getbranch": "amplify:GetBranch",
    "amplify.getdomainassociation": "amplify:GetDomainAssociation",
    "amplify.getjob": "amplify:GetJob",
    "amplify.getwebhook": "amplify:GetWebHook",
    "amplify.listapps": "amplify:ListApps",
    "amplify.listartifacts": "amplify:ListArtifacts",
    "amplify.listbackendenvironments": "amplify:ListBackendEnvironments",
    "amplify.listbranches": "amplify:ListBranches",
    "amplify.listdomainassociations": "amplify:ListDomainAssociations",
    "amplify.listjobs": "amplify:ListJobs",
    "amplify.listtagsforresource": "amplify:ListTagsForResource",
    "amplify.listwebhooks": "amplify:ListWebHooks",
    "amplify.startdeployment": "amplify:StartDeployment",
    "amplify.startjob": "amplify:StartJob",
    "amplify.stopjob": "amplify:StopJob",
    "amplify.tagresource": "amplify:TagResource",
    "amplify.untagresource": "amplify:UntagResource",
    "amplify.updateapp": "amplify:UpdateApp",
    "amplify.updatebranch": "amplify:UpdateBranch",
    "amplify.updatedomainassociation": "amplify:UpdateDomainAssociation",
    "amplify.updatewebhook": "amplify:UpdateWebHook",
    "amplifybackend.clonebackend": "amplifybackend:CloneBackend",
    "amplifybackend.createbackend": "amplifybackend:CreateBackend",
    "amplifybackend.createbackendapi": "amplifybackend:CreateBackendAPI",
    "amplifybackend.createbackendauth": "amplifybackend:CreateBackendAuth",
    "amplifybackend.createbackendconfig": "amplifybackend:CreateBackendConfig",
    "amplifybackend.createbackendstorage": "amplifybackend:CreateBackendStorage",
    "amplifybackend.createtoken": "amplifybackend:CreateToken",
    "amplifybackend.deletebackend": "amplifybackend:DeleteBackend",
    "amplifybackend.deletebackendapi": "amplifybackend:DeleteBackendAPI",
    "amplifybackend.deletebackendauth": "amplifybackend:DeleteBackendAuth",
    "amplifybackend.deletebackendstorage": "amplifybackend:DeleteBackendStorage",
    "amplifybackend.deletetoken": "amplifybackend:DeleteToken",
    "amplifybackend.generatebackendapimodels": "amplifybackend:GenerateBackendAPIModels",
    "amplifybackend.getbackend": "amplifybackend:GetBackend",
    "amplifybackend.getbackendapi": "amplifybackend:GetBackendAPI",
    "amplifybackend.getbackendapimodels": "amplifybackend:GetBackendAPIModels",
    "amplifybackend.getbackendauth": "amplifybackend:GetBackendAuth",
    "amplifybackend.getbackendjob": "amplifybackend:GetBackendJob",
    "amplifybackend.getbackendstorage": "amplifybackend:GetBackendStorage",
    "amplifybackend.gettoken": "amplifybackend:GetToken",
    "amplifybackend.importbackendauth": "amplifybackend:ImportBackendAuth",
    "amplifybackend.importbackendstorage": "amplifybackend:ImportBackendStorage",
    "amplifybackend.listbackendjobs": "amplifybackend:ListBackendJobs",
    "amplifybackend.lists3buckets": "amplifybackend:ListS3Buckets",
    "amplifybackend.removeallbackends": "amplifybackend:RemoveAllBackends",
    "amplifybackend.removebackendconfig": "amplifybackend:RemoveBackendConfig",
    "amplifybackend.updatebackendapi": "amplifybackend:UpdateBackendAPI",
    "amplifybackend.updatebackendauth": "amplifybackend:UpdateBackendAuth",
    "amplifybackend.updatebackendconfig": "amplifybackend:UpdateBackendConfig",
    "amplifybackend.updatebackendjob": "amplifybackend:UpdateBackendJob",
    "amplifybackend.updatebackendstorage": "amplifybackend:UpdateBackendStorage",
    "amplifyuibuilder.deletecomponent": "amplifyuibuilder:DeleteComponent",
    "amplifyuibuilder.deletetheme": "amplifyuibuilder:DeleteTheme",
    "amplifyuibuilder.exchangecodefortoken": "amplifyuibuilder:ExchangeCodeForToken",
    "amplifyuibuilder.exportcomponents": "amplifyuibuilder:ExportComponents",
    "amplifyuibuilder.exportthemes": "amplifyuibuilder:ExportThemes",
    "amplifyuibuilder.getcomponent": "amplifyuibuilder:GetComponent",
    "amplifyuibuilder.gettheme": "amplifyuibuilder:GetTheme",
    "amplifyuibuilder.listcomponents": "amplifyuibuilder:ListComponents",
    "amplifyuibuilder.listthemes": "amplifyuibuilder:ListThemes",
    "amplifyuibuilder.refreshtoken": "amplifyuibuilder:RefreshToken",
    "amplifyuibuilder.updatecomponent": "amplifyuibuilder:UpdateComponent",
    "apigateway.createapikey": "apigateway:POST",
    "apigateway.createbasepathmapping": "apigateway:POST",
    "apigateway.createdeployment": "apigateway:POST",
    "apigateway.createdocumentationversion": "apigateway:POST",
    "apigateway.createdomainname": "apigateway:POST",
    "apigateway.createmodel": "apigateway:POST",
    "apigateway.createrequestvalidator": "apigateway:POST",
    "apigateway.createresource": "apigateway:POST",
    "apigateway.createrestapi": "apigateway:POST",
    "apigateway.createstage": "apigateway:POST",
    "apigateway.createusageplan": "apigateway:POST",
    "apigateway.createusageplankey": "apigateway:POST",
    "apigateway.createvpclink": "apigateway:POST",
    "apigateway.deleteapikey": "apigateway:DELETE",
    "apigateway.deleteauthorizer": "apigateway:DELETE",
    "apigateway.deletebasepathmapping": "apigateway:DELETE",
    "apigateway.deleteclientcertificate": "apigateway:DELETE",
    "apigateway.deletedeployment": "apigateway:DELETE",
    "apigateway.deletedocumentationpart": "apigateway:DELETE",
    "apigateway.deletedocumentationversion": "apigateway:DELETE",
    "apigateway.deletedomainname": "apigateway:DELETE",
    "apigateway.deletegatewayresponse": "apigateway:DELETE",
    "apigateway.deleteintegration": "apigateway:DELETE",
    "apigateway.deleteintegrationresponse": "apigateway:DELETE",
    "apigateway.deletemethod": "apigateway:DELETE",
    "apigateway.deletemethodresponse": "apigateway:DELETE",
    "apigateway.deletemodel": "apigateway:DELETE",
    "apigateway.deleterequestvalidator": "apigateway:DELETE",
    "apigateway.deleteresource": "apigateway:DELETE",
    "apigateway.deleterestapi": "apigateway:DELETE",
    "apigateway.deletestage": "apigateway:DELETE",
    "apigateway.deleteusageplan": "apigateway:DELETE",
    "apigateway.deleteusageplankey": "apigateway:DELETE",
    "apigateway.deletevpclink": "apigateway:DELETE",
    "apigateway.flushstageauthorizerscache": "apigateway:DELETE",
    "apigateway.flushstagecache": "apigateway:DELETE",
    "apigateway.generateclientcertificate": "apigateway:POST",
    "apigateway.getaccount": "apigateway:GET",
    "apigateway.getapikey": "apigateway:GET",
    "apigateway.getapikeys": "apigateway:GET",
    "apigateway.getauthorizer": "apigateway:GET",
    "apigateway.getauthorizers": "apigateway:GET",
    "apigateway.getbasepathmapping": "apigateway:GET",
    "apigateway.getbasepathmappings": "apigateway:GET",
    "apigateway.getclientcertificate": "apigateway:GET",
    "apigateway.getclientcertificates": "apigateway:GET",
    "apigateway.getdeployment": "apigateway:GET",
    "apigateway.getdeployments": "apigateway:GET",
    "apigateway.getdocumentationpart": "apigateway:GET",
    "apigateway.getdocumentationparts": "apigateway:GET",
    "apigateway.getdocumentationversion": "apigateway:GET",
    "apigateway.getdocumentationversions": "apigateway:GET",
    "apigateway.getdomainname": "apigateway:GET",
    "apigateway.getdomainnames": "apigateway:GET",
    "apigateway.getexport": "apigateway:GET",
    "apigateway.getgatewayresponse": "apigateway:GET",
    "apigateway.getgatewayresponses": "apigateway:GET",
    "apigateway.getintegration": "apigateway:GET",
    "apigateway.getintegrationresponse": "apigateway:GET",
    "apigateway.getmethod": "apigateway:GET",
    "apigateway.getmethodresponse": "apigateway:GET",
    "apigateway.getmodel": "apigateway:GET",
    "apigateway.getmodels": "apigateway:GET",
    "apigateway.getmodeltemplate": "apigateway:GET",
    "apigateway.getrequestvalidator": "apigateway:GET",
    "apigateway.getrequestvalidators": "apigateway:GET",
    "apigateway.getresource": "apigateway:GET",
    "apigateway.getresources": "apigateway:GET",
    "apigateway.getrestapi": "apigateway:GET",
    "apigateway.getrestapis": "apigateway:GET",
    "apigateway.getsdk": "apigateway:GET",
    "apigateway.getsdktype": "apigateway:GET",
    "apigateway.getsdktypes": "apigateway:GET",
    "apigateway.getstage": "apigateway:GET",
    "apigateway.getstages": "apigateway:GET",
    "apigateway.gettags": "apigateway:GET",
    "apigateway.getusage": "apigateway:GET",
    "apigateway.getusageplan": "apigateway:GET",
    "apigateway.getusageplankey": "apigateway:GET",
    "apigateway.getusageplankeys": "apigateway:GET",
    "apigateway.getusageplans": "apigateway:GET",
    "apigateway.getvpclink": "apigateway:GET",
    "apigateway.getvpclinks": "apigateway:GET",
    "apigateway.importapikeys": "apigateway:POST",
    "apigateway.importdocumentationparts": "apigateway:PUT",
    "apigateway.putgatewayresponse": "apigateway:PUT",
    "apigateway.putintegration": "apigateway:PUT",
    "apigateway.putintegrationresponse": "apigateway:PUT",
    "apigateway.putmethod": "apigateway:PUT",
    "apigateway.putmethodresponse": "apigateway:PUT",
    "apigateway.testinvokeauthorizer": "apigateway:POST",
    "apigateway.testinvokemethod": "apigateway:POST",
    "apigateway.untagresource": "apigateway:DELETE",
    "apigateway.updateaccount": "apigateway:PATCH",
    "apigateway.updateapikey": "apigateway:PATCH",
    "apigateway.updateauthorizer": "apigateway:PATCH",
    "apigateway.updatebasepathmapping": "apigateway:PATCH",
    "apigateway.updateclientcertificate": "apigateway:PATCH",
    "apigateway.updatedeployment": "apigateway:PATCH",
    "apigateway.updatedocumentationpart": "apigateway:PATCH",
    "apigateway.updatedocumentationversion": "apigateway:PATCH",
    "apigateway.updatedomainname": "apigateway:PATCH",
    "apigateway.updategatewayresponse": "apigateway:PATCH",
    "apigateway.updateintegration": "apigateway:PATCH",
    "apigateway.updateintegrationresponse": "apigateway:PATCH",
    "apigateway.updatemethod": "apigateway:PATCH",
    "apigateway.updatemethodresponse": "apigateway:PATCH",
    "apigateway.updatemodel": "apigateway:PATCH",
    "apigateway.updaterequestvalidator": "apigateway:PATCH",
    "apigateway.updateresource": "apigateway:PATCH",
    "apigateway.updatestage": "apigateway:PATCH",
    "apigateway.updateusage": "apigateway:PATCH",
    "apigateway.updateusageplan": "apigateway:PATCH",
    "apigateway.updatevpclink": "apigateway:PATCH",
    "apigatewaymanagementapi.deleteconnection": "execute-api:ManageConnections",
    "apigatewaymanagementapi.getconnection": "execute-api:ManageConnections",
    "apigatewaymanagementapi.posttoconnection": "execute-api:ManageConnections",
    "apigatewayv2.createapi": "apigateway:POST",
    "apigatewayv2.createapimapping": "apigateway:POST",
    "apigatewayv2.createdeployment": "apigateway:POST",
    "apigatewayv2.createdomainname": "apigateway:POST",
    "apigatewayv2.createintegration": "apigateway:POST",
    "apigatewayv2.createintegrationresponse": "apigateway:POST",
    "apigatewayv2.createmodel": "apigateway:POST",
    "apigatewayv2.createroute": "apigateway:POST",
    "apigatewayv2.createrouteresponse": "apigateway:POST",
    "apigatewayv2.createstage": "apigateway:POST",
    "apigatewayv2.deleteaccesslogsettings": "apigateway:DELETE",
    "apigatewayv2.deleteapi": "apigateway:DELETE",
    "apigatewayv2.deleteapimapping": "apigateway:DELETE",
    "apigatewayv2.deleteauthorizer": "apigateway:DELETE",
    "apigatewayv2.deletecorsconfiguration": "apigateway:DELETE",
    "apigatewayv2.deletedeployment": "apigateway:DELETE",
    "apigatewayv2.deletedomainname": "apigateway:DELETE",
    "apigatewayv2.deleteintegration": "apigateway:DELETE",
    "apigatewayv2.deleteintegrationresponse": "apigateway:DELETE",
    "apigatewayv2.deletemodel": "apigateway:DELETE",
    "apigatewayv2.deleteroute": "apigateway:DELETE",
    "apigatewayv2.deleterouterequestparameter": "apigateway:DELETE",
    "apigatewayv2.deleterouteresponse": "apigateway:DELETE",
    "apigatewayv2.deleteroutesettings": "apigateway:DELETE",
    "apigatewayv2.deletestage": "apigateway:DELETE",
    "apigatewayv2.deletevpclink": "apigateway:DELETE",
    "apigatewayv2.exportapi": "apigateway:GET",
    "apigatewayv2.getapi": "apigateway:GET",
    "apigatewayv2.getapimapping": "apigateway:GET",
    "apigatewayv2.getapimappings": "apigateway:GET",
    "apigatewayv2.getapis": "apigateway:GET",
    "apigatewayv2.getauthorizer": "apigateway:GET",
    "apigatewayv2.getauthorizers": "apigateway:GET",
    "apigatewayv2.getdeployment": "apigateway:GET",
    "apigatewayv2.getdeployments": "apigateway:GET",
    "apigatewayv2.getdomainname": "apigateway:GET",
    "apigatewayv2.getdomainnames": "apigateway:GET",
    "apigatewayv2.getintegration": "apigateway:GET",
    "apigatewayv2.getintegrationresponse": "apigateway:GET",
    "apigatewayv2.getintegrationresponses": "apigateway:GET",
    "apigatewayv2.getintegrations": "apigateway:GET",
    "apigatewayv2.getmodel": "apigateway:GET",
    "apigatewayv2.getmodels": "apigateway:GET",
    "apigatewayv2.getmodeltemplate": "apigateway:GET",
    "apigatewayv2.getroute": "apigateway:GET",
    "apigatewayv2.getrouteresponse": "apigateway:GET",
    "apigatewayv2.getrouteresponses": "apigateway:GET",
    "apigatewayv2.getroutes": "apigateway:GET",
    "apigatewayv2.getstage": "apigateway:GET",
    "apigatewayv2.getstages": "apigateway:GET",
    "apigatewayv2.gettags": "apigateway:GET",
    "apigatewayv2.getvpclink": "apigateway:GET",
    "apigatewayv2.getvpclinks": "apigateway:GET",
    "apigatewayv2.importapi": "apigateway:PUT",
    "apigatewayv2.reimportapi": "apigateway:PUT",
    "apigatewayv2.resetauthorizerscache": "apigateway:DELETE",
    "apigatewayv2.tagresource": "apigateway:POST",
    "apigatewayv2.untagresource": "apigateway:DELETE",
    "apigatewayv2.updateapi": "apigateway:PATCH",
    "apigatewayv2.updateapimapping": "apigateway:PATCH",
    "apigatewayv2.updateauthorizer": "apigateway:PATCH",
    "apigatewayv2.updatedeployment": "apigateway:PATCH",
    "apigatewayv2.updatedomainname": "apigateway:PATCH",
    "apigatewayv2.updateintegration": "apigateway:PATCH",
    "apigatewayv2.updateintegrationresponse": "apigateway:PATCH",
    "apigatewayv2.updatemodel": "apigateway:PATCH",
    "apigatewayv2.updateroute": "apigateway:PATCH",
    "apigatewayv2.updaterouteresponse": "apigateway:PATCH",
    "apigatewayv2.updatestage": "apigateway:PATCH",
    "apigatewayv2.updatevpclink": "apigateway:PATCH",
    "appconfig.createapplication": "appconfig:CreateApplication",
    "appconfig.createconfigurationprofile": "appconfig:CreateConfigurationProfile",
    "appconfig.createdeploymentstrategy": "appconfig:CreateDeploymentStrategy",
    "appconfig.createenvironment": "appconfig:CreateEnvironment",
    "appconfig.createhostedconfigurationversion": "appconfig:CreateHostedConfigurationVersion",
    "appconfig.deleteapplication": "appconfig:DeleteApplication",
    "appconfig.deleteconfigurationprofile": "appconfig:DeleteConfigurationProfile",
    "appconfig.deletedeploymentstrategy": "appconfig:DeleteDeploymentStrategy",
    "appconfig.deleteenvironment": "appconfig:DeleteEnvironment",
    "appconfig.deletehostedconfigurationversion": "appconfig:DeleteHostedConfigurationVersion",
    "appconfig.getapplication": "appconfig:GetApplication",
    "appconfig.getconfiguration": "appconfig:GetConfiguration",
    "appconfig.getconfigurationprofile": "appconfig:GetConfigurationProfile",
    "appconfig.getdeployment": "appconfig:GetDeployment",
    "appconfig.getdeploymentstrategy": "appconfig:GetDeploymentStrategy",
    "appconfig.getenvironment": "appconfig:GetEnvironment",
    "appconfig.gethostedconfigurationversion": "appconfig:GetHostedConfigurationVersion",
    "appconfig.listapplications": "appconfig:ListApplications",
    "appconfig.listconfigurationprofiles": "appconfig:ListConfigurationProfiles",
    "appconfig.listdeployments": "appconfig:ListDeployments",
    "appconfig.listdeploymentstrategies": "appconfig:ListDeploymentStrategies",
    "appconfig.listenvironments": "appconfig:ListEnvironments",
    "appconfig.listhostedconfigurationversions": "appconfig:ListHostedConfigurationVersions",
    "appconfig.listtagsforresource": "appconfig:ListTagsForResource",
    "appconfig.startdeployment": "appconfig:StartDeployment",
    "appconfig.stopdeployment": "appconfig:StopDeployment",
    "appconfig.tagresource": "appconfig:TagResource",
    "appconfig.untagresource": "appconfig:UntagResource",
    "appconfig.updateapplication": "appconfig:UpdateApplication",
    "appconfig.updateconfigurationprofile": "appconfig:UpdateConfigurationProfile",
    "appconfig.updatedeploymentstrategy": "appconfig:UpdateDeploymentStrategy",
    "appconfig.updateenvironment": "appconfig:UpdateEnvironment",
    "appconfig.validateconfiguration": "appconfig:ValidateConfiguration",
    "appconfigdata.getlatestconfiguration": "appconfig:GetLatestConfiguration",
    "appconfigdata.startconfigurationsession": "appconfig:StartConfigurationSession",
    "appflow.createconnectorprofile": "appflow:CreateConnectorProfile",
    "appflow.createflow": "appflow:CreateFlow",
    "appflow.deleteconnectorprofile": "appflow:DeleteConnectorProfile",
    "appflow.deleteflow": "appflow:DeleteFlow",
    "appflow.describeconnector": "appflow:DescribeConnector",
    "appflow.describeconnectorentity": "appflow:DescribeConnectorEntity",
    "appflow.describeconnectorprofiles": "appflow:DescribeConnectorProfiles",
    "appflow.describeconnectors": "appflow:DescribeConnectors",
    "appflow.describeflow": "appflow:DescribeFlow",
    "appflow.describeflowexecutionrecords": "appflow:DescribeFlowExecutionRecords",
    "appflow.listconnectorentities": "appflow:ListConnectorEntities",
    "appflow.listconnectors": "appflow:ListConnectors",
    "appflow.listflows": "appflow:ListFlows",
    "appflow.listtagsforresource": "appflow:ListTagsForResource",
    "appflow.registerconnector": "appflow:RegisterConnector",
    "appflow.startflow": "appflow:StartFlow",
    "appflow.stopflow": "appflow:StopFlow",
    "appflow.tagresource": "appflow:TagResource",
    "appflow.unregisterconnector": "appflow:UnRegisterConnector",
    "appflow.untagresource": "appflow:UntagResource",
    "appflow.updateconnectorprofile": "appflow:UpdateConnectorProfile",
    "appflow.updateflow": "appflow:UpdateFlow",
    "appintegrations.createdataintegration": "app-integrations:CreateDataIntegration",
    "appintegrations.createeventintegration": "app-integrations:CreateEventIntegration",
    "appintegrations.deletedataintegration": "app-integrations:DeleteDataIntegration",
    "appintegrations.deleteeventintegration": "app-integrations:DeleteEventIntegration",
    "appintegrations.getdataintegration": "app-integrations:GetDataIntegration",
    "appintegrations.geteventintegration": "app-integrations:GetEventIntegration",
    "appintegrations.listdataintegrationassociations": "app-integrations:ListDataIntegrationAssociations",
    "appintegrations.listdataintegrations": "app-integrations:ListDataIntegrations",
    "appintegrations.listeventintegrationassociations": "app-integrations:ListEventIntegrationAssociations",
    "appintegrations.listeventintegrations": "app-integrations:ListEventIntegrations",
    "appintegrations.listtagsforresource": "app-integrations:ListTagsForResource",
    "appintegrations.tagresource": "app-integrations:TagResource",
    "appintegrations.untagresource": "app-integrations:UntagResource",
    "appintegrations.updatedataintegration": "app-integrations:UpdateDataIntegration",
    "appintegrations.updateeventintegration": "app-integrations:UpdateEventIntegration",
    "applicationautoscaling.deletescalingpolicy": "application-autoscaling:DeleteScalingPolicy",
    "applicationautoscaling.deletescheduledaction": "application-autoscaling:DeleteScheduledAction",
    "applicationautoscaling.deregisterscalabletarget": "application-autoscaling:DeregisterScalableTarget",
    "applicationautoscaling.describescalabletargets": "application-autoscaling:DescribeScalableTargets",
    "applicationautoscaling.describescalingactivities": "application-autoscaling:DescribeScalingActivities",
    "applicationautoscaling.describescalingpolicies": "application-autoscaling:DescribeScalingPolicies",
    "applicationautoscaling.describescheduledactions": "application-autoscaling:DescribeScheduledActions",
    "applicationautoscaling.putscalingpolicy": "application-autoscaling:PutScalingPolicy",
    "applicationautoscaling.putscheduledaction": "application-autoscaling:PutScheduledAction",
    "applicationautoscaling.registerscalabletarget": "application-autoscaling:RegisterScalableTarget",
    "applicationcostprofiler.deletereportdefinition": "application-cost-profiler:DeleteReportDefinition",
    "applicationcostprofiler.getreportdefinition": "application-cost-profiler:GetReportDefinition",
    "applicationcostprofiler.importapplicationusage": "application-cost-profiler:ImportApplicationUsage",
    "applicationcostprofiler.listreportdefinitions": "application-cost-profiler:ListReportDefinitions",
    "applicationcostprofiler.putreportdefinition": "application-cost-profiler:PutReportDefinition",
    "applicationcostprofiler.updatereportdefinition": "application-cost-profiler:UpdateReportDefinition",
    "applicationinsights.createapplication": "applicationinsights:CreateApplication",
    "applicationinsights.createcomponent": "applicationinsights:CreateComponent",
    "applicationinsights.createlogpattern": "applicationinsights:CreateLogPattern",
    "applicationinsights.deleteapplication": "applicationinsights:DeleteApplication",
    "applicationinsights.deletecomponent": "applicationinsights:DeleteComponent",
    "applicationinsights.deletelogpattern": "applicationinsights:DeleteLogPattern",
    "applicationinsights.describeapplication": "applicationinsights:DescribeApplication",
    "applicationinsights.describecomponent": "applicationinsights:DescribeComponent",
    "applicationinsights.describecomponentconfiguration": "applicationinsights:DescribeComponentConfiguration",
    "applicationinsights.describecomponentconfigurationrecommendation": "applicationinsights:DescribeComponentConfigurationRecommendation",
    "applicationinsights.describelogpattern": "applicationinsights:DescribeLogPattern",
    "applicationinsights.describeobservation": "applicationinsights:DescribeObservation",
    "applicationinsights.describeproblem": "applicationinsights:DescribeProblem",
    "applicationinsights.describeproblemobservations": "applicationinsights:DescribeProblemObservations",
    "applicationinsights.listapplications": "applicationinsights:ListApplications",
    "applicationinsights.listcomponents": "applicationinsights:ListComponents",
    "applicationinsights.listconfigurationhistory": "applicationinsights:ListConfigurationHistory",
    "applicationinsights.listlogpatterns": "applicationinsights:ListLogPatterns",
    "applicationinsights.listlogpatternsets": "applicationinsights:ListLogPatternSets",
    "applicationinsights.listproblems": "applicationinsights:ListProblems",
    "applicationinsights.listtagsforresource": "applicationinsights:ListTagsForResource",
    "applicationinsights.tagresource": "applicationinsights:TagResource",
    "applicationinsights.untagresource": "applicationinsights:UntagResource",
    "applicationinsights.updateapplication": "applicationinsights:UpdateApplication",
    "applicationinsights.updatecomponent": "applicationinsights:UpdateComponent",
    "applicationinsights.updatecomponentconfiguration": "applicationinsights:UpdateComponentConfiguration",
    "applicationinsights.updatelogpattern": "applicationinsights:UpdateLogPattern",
    "appmesh.creategatewayroute": "appmesh:CreateGatewayRoute",
    "appmesh.createmesh": "appmesh:CreateMesh",
    "appmesh.createroute": "appmesh:CreateRoute",
    "appmesh.createvirtualgateway": "appmesh:CreateVirtualGateway",
    "appmesh.createvirtualnode": "appmesh:CreateVirtualNode",
    "appmesh.createvirtualrouter": "appmesh:CreateVirtualRouter",
    "appmesh.createvirtualservice": "appmesh:CreateVirtualService",
    "appmesh.deletegatewayroute": "appmesh:DeleteGatewayRoute",
    "appmesh.deletemesh": "appmesh:DeleteMesh",
    "appmesh.deleteroute": "appmesh:DeleteRoute",
    "appmesh.deletevirtualgateway": "appmesh:DeleteVirtualGateway",
    "appmesh.deletevirtualnode": "appmesh:DeleteVirtualNode",
    "appmesh.deletevirtualrouter": "appmesh:DeleteVirtualRouter",
    "appmesh.deletevirtualservice": "appmesh:DeleteVirtualService",
    "appmesh.describegatewayroute": "appmesh:DescribeGatewayRoute",
    "appmesh.describemesh": "appmesh:DescribeMesh",
    "appmesh.describeroute": "appmesh:DescribeRoute",
    "appmesh.describevirtualgateway": "appmesh:DescribeVirtualGateway",
    "appmesh.describevirtualnode": "appmesh:DescribeVirtualNode",
    "appmesh.describevirtualrouter": "appmesh:DescribeVirtualRouter",
    "appmesh.describevirtualservice": "appmesh:DescribeVirtualService",
    "appmesh.listgatewayroutes": "appmesh:ListGatewayRoutes",
    "appmesh.listmeshes": "appmesh:ListMeshes",
    "appmesh.listroutes": "appmesh:ListRoutes",
    "appmesh.listtagsforresource": "appmesh:ListTagsForResource",
    "appmesh.listvirtualgateways": "appmesh:ListVirtualGateways",
    "appmesh.listvirtualnodes": "appmesh:ListVirtualNodes",
    "appmesh.listvirtualrouters": "appmesh:ListVirtualRouters",
    "appmesh.listvirtualservices": "appmesh:ListVirtualServices",
    "appmesh.tagresource": "appmesh:TagResource",
    "appmesh.untagresource": "appmesh:UntagResource",
    "appmesh.updategatewayroute": "appmesh:UpdateGatewayRoute",
    "appmesh.updatemesh": "appmesh:UpdateMesh",
    "appmesh.updateroute": "appmesh:UpdateRoute",
    "appmesh.updatevirtualgateway": "appmesh:UpdateVirtualGateway",
    "appmesh.updatevirtualnode": "appmesh:UpdateVirtualNode",
    "appmesh.updatevirtualrouter": "appmesh:UpdateVirtualRouter",
    "appmesh.updatevirtualservice": "appmesh:UpdateVirtualService",
    "apprunner.associatecustomdomain": "apprunner:AssociateCustomDomain",
    "apprunner.createautoscalingconfiguration": "apprunner:CreateAutoScalingConfiguration",
    "apprunner.createconnection": "apprunner:CreateConnection",
    "apprunner.createobservabilityconfiguration": "apprunner:CreateObservabilityConfiguration",
    "apprunner.createservice": "apprunner:CreateService",
    "apprunner.createvpcconnector": "apprunner:CreateVpcConnector",
    "apprunner.deleteautoscalingconfiguration": "apprunner:DeleteAutoScalingConfiguration",
    "apprunner.deleteconnection": "apprunner:DeleteConnection",
    "apprunner.deleteobservabilityconfiguration": "apprunner:DeleteObservabilityConfiguration",
    "apprunner.deleteservice": "apprunner:DeleteService",
    "apprunner.deletevpcconnector": "apprunner:DeleteVpcConnector",
    "apprunner.describeautoscalingconfiguration": "apprunner:DescribeAutoScalingConfiguration",
    "apprunner.describecustomdomains": "apprunner:DescribeCustomDomains",
    "apprunner.describeobservabilityconfiguration": "apprunner:DescribeObservabilityConfiguration",
    "apprunner.describeservice": "apprunner:DescribeService",
    "apprunner.describevpcconnector": "apprunner:DescribeVpcConnector",
    "apprunner.disassociatecustomdomain": "apprunner:DisassociateCustomDomain",
    "apprunner.listautoscalingconfigurations": "apprunner:ListAutoScalingConfigurations",
    "apprunner.listconnections": "apprunner:ListConnections",
    "apprunner.listobservabilityconfigurations": "apprunner:ListObservabilityConfigurations",
    "apprunner.listoperations": "apprunner:ListOperations",
    "apprunner.listservices": "apprunner:ListServices",
    "apprunner.listtagsforresource": "apprunner:ListTagsForResource",
    "apprunner.listvpcconnectors": "apprunner:ListVpcConnectors",
    "apprunner.pauseservice": "apprunner:PauseService",
    "apprunner.resumeservice": "apprunner:ResumeService",
    "apprunner.startdeployment": "apprunner:StartDeployment",
    "apprunner.tagresource": "apprunner:TagResource",
    "apprunner.untagresource": "apprunner:UntagResource",
    "apprunner.updateservice": "apprunner:UpdateService",
    "appstream.associateapplicationfleet": "appstream:AssociateApplicationFleet",
    "appstream.associateapplicationtoentitlement": "appstream:AssociateApplicationToEntitlement",
    "appstream.associatefleet": "appstream:AssociateFleet",
    "appstream.batchassociateuserstack": "appstream:BatchAssociateUserStack",
    "appstream.batchdisassociateuserstack": "appstream:BatchDisassociateUserStack",
    "appstream.copyimage": "appstream:CopyImage",
    "appstream.createappblock": "appstream:CreateAppBlock",
    "appstream.createapplication": "appstream:CreateApplication",
    "appstream.createdirectoryconfig": "appstream:CreateDirectoryConfig",
    "appstream.createentitlement": "appstream:CreateEntitlement",
    "appstream.createfleet": "appstream:CreateFleet",
    "appstream.createimagebuilder": "appstream:CreateImageBuilder",
    "appstream.createimagebuilderstreamingurl": "appstream:CreateImageBuilderStreamingURL",
    "appstream.createstack": "appstream:CreateStack",
    "appstream.createstreamingurl": "appstream:CreateStreamingURL",
    "appstream.createupdatedimage": "appstream:CreateUpdatedImage",
    "appstream.createusagereportsubscription": "appstream:CreateUsageReportSubscription",
    "appstream.createuser": "appstream:CreateUser",
    "appstream.deleteappblock": "appstream:DeleteAppBlock",
    "appstream.deleteapplication": "appstream:DeleteApplication",
    "appstream.deletedirectoryconfig": "appstream:DeleteDirectoryConfig",
    "appstream.deleteentitlement": "appstream:DeleteEntitlement",
    "appstream.deletefleet": "appstream:DeleteFleet",
    "appstream.deleteimage": "appstream:DeleteImage",
    "appstream.deleteimagebuilder": "appstream:DeleteImageBuilder",
    "appstream.deleteimagepermissions": "appstream:DeleteImagePermissions",
    "appstream.deletestack": "appstream:DeleteStack",
    "appstream.deleteusagereportsubscription": "appstream:DeleteUsageReportSubscription",
    "appstream.deleteuser": "appstream:DeleteUser",
    "appstream.describeappblocks": "appstream:DescribeAppBlocks",
    "appstream.describeapplicationfleetassociations": "appstream:DescribeApplicationFleetAssociations",
    "appstream.describeapplications": "appstream:DescribeApplications",
    "appstream.describedirectoryconfigs": "appstream:DescribeDirectoryConfigs",
    "appstream.describeentitlements": "appstream:DescribeEntitlements",
    "appstream.describefleets": "appstream:DescribeFleets",
    "appstream.describeimagebuilders": "appstream:DescribeImageBuilders",
    "appstream.describeimagepermissions": "appstream:DescribeImagePermissions",
    "appstream.describeimages": "appstream:DescribeImages",
    "appstream.describesessions": "appstream:DescribeSessions",
    "appstream.describestacks": "appstream:DescribeStacks",
    "appstream.describeusagereportsubscriptions": "appstream:DescribeUsageReportSubscriptions",
    "appstream.describeusers": "appstream:DescribeUsers",
    "appstream.describeuserstackassociations": "appstream:DescribeUserStackAssociations",
    "appstream.disableuser": "appstream:DisableUser",
    "appstream.disassociateapplicationfleet": "appstream:DisassociateApplicationFleet",
    "appstream.disassociateapplicationfromentitlement": "appstream:DisassociateApplicationFromEntitlement",
    "appstream.disassociatefleet": "appstream:DisassociateFleet",
    "appstream.enableuser": "appstream:EnableUser",
    "appstream.expiresession": "appstream:ExpireSession",
    "appstream.listassociatedfleets": "appstream:ListAssociatedFleets",
    "appstream.listassociatedstacks": "appstream:ListAssociatedStacks",
    "appstream.listentitledapplications": "appstream:ListEntitledApplications",
    "appstream.listtagsforresource": "appstream:ListTagsForResource",
    "appstream.startfleet": "appstream:StartFleet",
    "appstream.startimagebuilder": "appstream:StartImageBuilder",
    "appstream.stopfleet": "appstream:StopFleet",
    "appstream.stopimagebuilder": "appstream:StopImageBuilder",
    "appstream.tagresource": "appstream:TagResource",
    "appstream.untagresource": "appstream:UntagResource",
    "appstream.updateapplication": "appstream:UpdateApplication",
    "appstream.updatedirectoryconfig": "appstream:UpdateDirectoryConfig",
    "appstream.updateentitlement": "appstream:UpdateEntitlement",
    "appstream.updatefleet": "appstream:UpdateFleet",
    "appstream.updateimagepermissions": "appstream:UpdateImagePermissions",
    "appstream.updatestack": "appstream:UpdateStack",
    "appsync.associateapi": "appsync:AssociateApi",
    "appsync.createapicache": "appsync:CreateApiCache",
    "appsync.createapikey": "appsync:CreateApiKey",
    "appsync.createdatasource": "appsync:CreateDataSource",
    "appsync.createdomainname": "appsync:CreateDomainName",
    "appsync.createfunction": "appsync:CreateFunction",
    "appsync.creategraphqlapi": "appsync:CreateGraphqlApi",
    "appsync.createresolver": "appsync:CreateResolver",
    "appsync.createtype": "appsync:CreateType",
    "appsync.deleteapicache": "appsync:DeleteApiCache",
    "appsync.deleteapikey": "appsync:DeleteApiKey",
    "appsync.deletedatasource": "appsync:DeleteDataSource",
    "appsync.deletedomainname": "appsync:DeleteDomainName",
    "appsync.deletefunction": "appsync:DeleteFunction",
    "appsync.deletegraphqlapi": "appsync:DeleteGraphqlApi",
    "appsync.deleteresolver": "appsync:DeleteResolver",
    "appsync.deletetype": "appsync:DeleteType",
    "appsync.disassociateapi": "appsync:DisassociateApi",
    "appsync.flushapicache": "appsync:FlushApiCache",
    "appsync.getapiassociation": "appsync:GetApiAssociation",
    "appsync.getapicache": "appsync:GetApiCache",
    "appsync.getdatasource": "appsync:GetDataSource",
    "appsync.getdomainname": "appsync:GetDomainName",
    "appsync.getfunction": "appsync:GetFunction",
    "appsync.getgraphqlapi": "appsync:GetGraphqlApi",
    "appsync.getintrospectionschema": "appsync:GetIntrospectionSchema",
    "appsync.getresolver": "appsync:GetResolver",
    "appsync.getschemacreationstatus": "appsync:GetSchemaCreationStatus",
    "appsync.gettype": "appsync:GetType",
    "appsync.listapikeys": "appsync:ListApiKeys",
    "appsync.listdatasources": "appsync:ListDataSources",
    "appsync.listdomainnames": "appsync:ListDomainNames",
    "appsync.listfunctions": "appsync:ListFunctions",
    "appsync.listgraphqlapis": "appsync:ListGraphqlApis",
    "appsync.listresolvers": "appsync:ListResolvers",
    "appsync.listresolversbyfunction": "appsync:ListResolversByFunction",
    "appsync.listtagsforresource": "appsync:ListTagsForResource",
    "appsync.listtypes": "appsync:ListTypes",
    "appsync.startschemacreation": "appsync:StartSchemaCreation",
    "appsync.tagresource": "appsync:TagResource",
    "appsync.untagresource": "appsync:UntagResource",
    "appsync.updateapicache": "appsync:UpdateApiCache",
    "appsync.updateapikey": "appsync:UpdateApiKey",
    "appsync.updatedatasource": "appsync:UpdateDataSource",
    "appsync.updatedomainname": "appsync:UpdateDomainName",
    "appsync.updatefunction": "appsync:UpdateFunction",
    "appsync.updategraphqlapi": "appsync:UpdateGraphqlApi",
    "appsync.updateresolver": "appsync:UpdateResolver",
    "appsync.updatetype": "appsync:UpdateType",
    "athena.batchgetnamedquery": "athena:BatchGetNamedQuery",
    "athena.batchgetqueryexecution": "athena:BatchGetQueryExecution",
    "athena.createdatacatalog": "athena:CreateDataCatalog",
    "athena.createnamedquery": "athena:CreateNamedQuery",
    "athena.createpreparedstatement": "athena:CreatePreparedStatement",
    "athena.createworkgroup": "athena:CreateWorkGroup",
    "athena.deletedatacatalog": "athena:DeleteDataCatalog",
    "athena.deletenamedquery": "athena:DeleteNamedQuery",
    "athena.deletepreparedstatement": "athena:DeletePreparedStatement",
    "athena.deleteworkgroup": "athena:DeleteWorkGroup",
    "athena.getdatabase": "athena:GetDatabase",
    "athena.getdatacatalog": "athena:GetDataCatalog",
    "athena.getnamedquery": "athena:GetNamedQuery",
    "athena.getpreparedstatement": "athena:GetPreparedStatement",
    "athena.getqueryexecution": "athena:GetQueryExecution",
    "athena.getqueryresults": "athena:GetQueryResults",
    "athena.gettablemetadata": "athena:GetTableMetadata",
    "athena.getworkgroup": "athena:GetWorkGroup",
    "athena.listdatabases": "athena:ListDatabases",
    "athena.listdatacatalogs": "athena:ListDataCatalogs",
    "athena.listengineversions": "athena:ListEngineVersions",
    "athena.listnamedqueries": "athena:ListNamedQueries",
    "athena.listpreparedstatements": "athena:ListPreparedStatements",
    "athena.listqueryexecutions": "athena:ListQueryExecutions",
    "athena.listtablemetadata": "athena:ListTableMetadata",
    "athena.listtagsforresource": "athena:ListTagsForResource",
    "athena.listworkgroups": "athena:ListWorkGroups",
    "athena.startqueryexecution": "athena:StartQueryExecution",
    "athena.stopqueryexecution": "athena:StopQueryExecution",
    "athena.tagresource": "athena:TagResource",
    "athena.untagresource": "athena:UntagResource",
    "athena.updatedatacatalog": "athena:UpdateDataCatalog",
    "athena.updatenamedquery": "athena:UpdateNamedQuery",
    "athena.updatepreparedstatement": "athena:UpdatePreparedStatement",
    "athena.updateworkgroup": "athena:UpdateWorkGroup",
    "auditmanager.associateassessmentreportevidencefolder": "auditmanager:AssociateAssessmentReportEvidenceFolder",
    "auditmanager.batchassociateassessmentreportevidence": "auditmanager:BatchAssociateAssessmentReportEvidence",
    "auditmanager.batchcreatedelegationbyassessment": "auditmanager:BatchCreateDelegationByAssessment",
    "auditmanager.batchdeletedelegationbyassessment": "auditmanager:BatchDeleteDelegationByAssessment",
    "auditmanager.batchdisassociateassessmentreportevidence": "auditmanager:BatchDisassociateAssessmentReportEvidence",
    "auditmanager.batchimportevidencetoassessmentcontrol": "auditmanager:BatchImportEvidenceToAssessmentControl",
    "auditmanager.createassessment": "auditmanager:CreateAssessment",
    "auditmanager.createassessmentframework": "auditmanager:CreateAssessmentFramework",
    "auditmanager.createassessmentreport": "auditmanager:CreateAssessmentReport",
    "auditmanager.createcontrol": "auditmanager:CreateControl",
    "auditmanager.deleteassessment": "auditmanager:DeleteAssessment",
    "auditmanager.deleteassessmentframework": "auditmanager:DeleteAssessmentFramework",
    "auditmanager.deleteassessmentframeworkshare": "auditmanager:DeleteAssessmentFrameworkShare",
    "auditmanager.deleteassessmentreport": "auditmanager:DeleteAssessmentReport",
    "auditmanager.deletecontrol": "auditmanager:DeleteControl",
    "auditmanager.deregisteraccount": "auditmanager:DeregisterAccount",
    "auditmanager.deregisterorganizationadminaccount": "auditmanager:DeregisterOrganizationAdminAccount",
    "auditmanager.disassociateassessmentreportevidencefolder": "auditmanager:DisassociateAssessmentReportEvidenceFolder",
    "auditmanager.getaccountstatus": "auditmanager:GetAccountStatus",
    "auditmanager.getassessment": "auditmanager:GetAssessment",
    "auditmanager.getassessmentframework": "auditmanager:GetAssessmentFramework",
    "auditmanager.getassessmentreporturl": "auditmanager:GetAssessmentReportUrl",
    "auditmanager.getchangelogs": "auditmanager:GetChangeLogs",
    "auditmanager.getcontrol": "auditmanager:GetControl",
    "auditmanager.getdelegations": "auditmanager:GetDelegations",
    "auditmanager.getevidence": "auditmanager:GetEvidence",
    "auditmanager.getevidencebyevidencefolder": "auditmanager:GetEvidenceByEvidenceFolder",
    "auditmanager.getevidencefolder": "auditmanager:GetEvidenceFolder",
    "auditmanager.getevidencefoldersbyassessment": "auditmanager:GetEvidenceFoldersByAssessment",
    "auditmanager.getevidencefoldersbyassessmentcontrol": "auditmanager:GetEvidenceFoldersByAssessmentControl",
    "auditmanager.getinsights": "auditmanager:GetInsights",
    "auditmanager.getinsightsbyassessment": "auditmanager:GetInsightsByAssessment",
    "auditmanager.getorganizationadminaccount": "auditmanager:GetOrganizationAdminAccount",
    "auditmanager.getservicesinscope": "auditmanager:GetServicesInScope",
    "auditmanager.getsettings": "auditmanager:GetSettings",
    "auditmanager.listassessmentcontrolinsightsbycontroldomain": "auditmanager:ListAssessmentControlInsightsByControlDomain",
    "auditmanager.listassessmentframeworks": "auditmanager:ListAssessmentFrameworks",
    "auditmanager.listassessmentframeworksharerequests": "auditmanager:ListAssessmentFrameworkShareRequests",
    "auditmanager.listassessmentreports": "auditmanager:ListAssessmentReports",
    "auditmanager.listassessments": "auditmanager:ListAssessments",
    "auditmanager.listcontroldomaininsights": "auditmanager:ListControlDomainInsights",
    "auditmanager.listcontroldomaininsightsbyassessment": "auditmanager:ListControlDomainInsightsByAssessment",
    "auditmanager.listcontrolinsightsbycontroldomain": "auditmanager:ListControlInsightsByControlDomain",
    "auditmanager.listcontrols": "auditmanager:ListControls",
    "auditmanager.listkeywordsfordatasource": "auditmanager:ListKeywordsForDataSource",
    "auditmanager.listnotifications": "auditmanager:ListNotifications",
    "auditmanager.listtagsforresource": "auditmanager:ListTagsForResource",
    "auditmanager.registeraccount": "auditmanager:RegisterAccount",
    "auditmanager.registerorganizationadminaccount": "auditmanager:RegisterOrganizationAdminAccount",
    "auditmanager.startassessmentframeworkshare": "auditmanager:StartAssessmentFrameworkShare",
    "auditmanager.tagresource": "auditmanager:TagResource",
    "auditmanager.untagresource": "auditmanager:UntagResource",
    "auditmanager.updateassessment": "auditmanager:UpdateAssessment",
    "auditmanager.updateassessmentcontrol": "auditmanager:UpdateAssessmentControl",
    "auditmanager.updateassessmentcontrolsetstatus": "auditmanager:UpdateAssessmentControlSetStatus",
    "auditmanager.updateassessmentframework": "auditmanager:UpdateAssessmentFramework",
    "auditmanager.updateassessmentframeworkshare": "auditmanager:UpdateAssessmentFrameworkShare",
    "auditmanager.updateassessmentstatus": "auditmanager:UpdateAssessmentStatus",
    "auditmanager.updatecontrol": "auditmanager:UpdateControl",
    "auditmanager.updatesettings": "auditmanager:UpdateSettings",
    "auditmanager.validateassessmentreportintegrity": "auditmanager:ValidateAssessmentReportIntegrity",
    "augmentedairuntime.deletehumanloop": "sagemaker:DeleteHumanLoop",
    "augmentedairuntime.describehumanloop": "sagemaker:DescribeHumanLoop",
    "augmentedairuntime.listhumanloops": "sagemaker:ListHumanLoops",
    "augmentedairuntime.starthumanloop": "sagemaker:StartHumanLoop",
    "augmentedairuntime.stophumanloop": "sagemaker:StopHumanLoop",
    "autoscaling.attachinstances": "autoscaling:AttachInstances",
    "autoscaling.attachloadbalancers": "autoscaling:AttachLoadBalancers",
    "autoscaling.attachloadbalancertargetgroups": "autoscaling:AttachLoadBalancerTargetGroups",
    "autoscaling.batchdeletescheduledaction": "autoscaling:BatchDeleteScheduledAction",
    "autoscaling.batchputscheduledupdategroupaction": "autoscaling:BatchPutScheduledUpdateGroupAction",
    "autoscaling.cancelinstancerefresh": "autoscaling:CancelInstanceRefresh",
    "autoscaling.completelifecycleaction": "autoscaling:CompleteLifecycleAction",
    "autoscaling.createautoscalinggroup": "autoscaling:CreateAutoScalingGroup",
    "autoscaling.createlaunchconfiguration": "autoscaling:CreateLaunchConfiguration",
    "autoscaling.createorupdatetags": "autoscaling:CreateOrUpdateTags",
    "autoscaling.deleteautoscalinggroup": "autoscaling:DeleteAutoScalingGroup",
    "autoscaling.deletelaunchconfiguration": "autoscaling:DeleteLaunchConfiguration",
    "autoscaling.deletelifecyclehook": "autoscaling:DeleteLifecycleHook",
    "autoscaling.deletenotificationconfiguration": "autoscaling:DeleteNotificationConfiguration",
    "autoscaling.deletepolicy": "autoscaling:DeletePolicy",
    "autoscaling.deletescheduledaction": "autoscaling:DeleteScheduledAction",
    "autoscaling.deletetags": "autoscaling:DeleteTags",
    "autoscaling.deletewarmpool": "autoscaling:DeleteWarmPool",
    "autoscaling.describeaccountlimits": "autoscaling:DescribeAccountLimits",
    "autoscaling.describeadjustmenttypes": "autoscaling:DescribeAdjustmentTypes",
    "autoscaling.describeautoscalinggroups": "autoscaling:DescribeAutoScalingGroups",
    "autoscaling.describeautoscalinginstances": "autoscaling:DescribeAutoScalingInstances",
    "autoscaling.describeautoscalingnotificationtypes": "autoscaling:DescribeAutoScalingNotificationTypes",
    "autoscaling.describeinstancerefreshes": "autoscaling:DescribeInstanceRefreshes",
    "autoscaling.describelaunchconfigurations": "autoscaling:DescribeLaunchConfigurations",
    "autoscaling.describelifecyclehooks": "autoscaling:DescribeLifecycleHooks",
    "autoscaling.describelifecyclehooktypes": "autoscaling:DescribeLifecycleHookTypes",
    "autoscaling.describeloadbalancers": "autoscaling:DescribeLoadBalancers",
    "autoscaling.describeloadbalancertargetgroups": "autoscaling:DescribeLoadBalancerTargetGroups",
    "autoscaling.describemetriccollectiontypes": "autoscaling:DescribeMetricCollectionTypes",
    "autoscaling.describenotificationconfigurations": "autoscaling:DescribeNotificationConfigurations",
    "autoscaling.describepolicies": "autoscaling:DescribePolicies",
    "autoscaling.describescalingactivities": "autoscaling:DescribeScalingActivities",
    "autoscaling.describescalingprocesstypes": "autoscaling:DescribeScalingProcessTypes",
    "autoscaling.describescheduledactions": "autoscaling:DescribeScheduledActions",
    "autoscaling.describetags": "autoscaling:DescribeTags",
    "autoscaling.describeterminationpolicytypes": "autoscaling:DescribeTerminationPolicyTypes",
    "autoscaling.describewarmpool": "autoscaling:DescribeWarmPool",
    "autoscaling.detachinstances": "autoscaling:DetachInstances",
    "autoscaling.detachloadbalancers": "autoscaling:DetachLoadBalancers",
    "autoscaling.detachloadbalancertargetgroups": "autoscaling:DetachLoadBalancerTargetGroups",
    "autoscaling.disablemetricscollection": "autoscaling:DisableMetricsCollection",
    "autoscaling.enablemetricscollection": "autoscaling:EnableMetricsCollection",
    "autoscaling.enterstandby": "autoscaling:EnterStandby",
    "autoscaling.executepolicy": "autoscaling:ExecutePolicy",
    "autoscaling.exitstandby": "autoscaling:ExitStandby",
    "autoscaling.getpredictivescalingforecast": "autoscaling:GetPredictiveScalingForecast",
    "autoscaling.putlifecyclehook": "autoscaling:PutLifecycleHook",
    "autoscaling.putnotificationconfiguration": "autoscaling:PutNotificationConfiguration",
    "autoscaling.putscalingpolicy": "autoscaling:PutScalingPolicy",
    "autoscaling.putscheduledupdategroupaction": "autoscaling:PutScheduledUpdateGroupAction",
    "autoscaling.putwarmpool": "autoscaling:PutWarmPool",
    "autoscaling.recordlifecycleactionheartbeat": "autoscaling:RecordLifecycleActionHeartbeat",
    "autoscaling.resumeprocesses": "autoscaling:ResumeProcesses",
    "autoscaling.setdesiredcapacity": "autoscaling:SetDesiredCapacity",
    "autoscaling.setinstancehealth": "autoscaling:SetInstanceHealth",
    "autoscaling.setinstanceprotection": "autoscaling:SetInstanceProtection",
    "autoscaling.startinstancerefresh": "autoscaling:StartInstanceRefresh",
    "autoscaling.suspendprocesses": "autoscaling:SuspendProcesses",
    "autoscaling.terminateinstanceinautoscalinggroup": "autoscaling:TerminateInstanceInAutoScalingGroup",
    "autoscaling.updateautoscalinggroup": "autoscaling:UpdateAutoScalingGroup",
    "autoscalingplans.createscalingplan": "autoscaling-plans:CreateScalingPlan",
    "autoscalingplans.deletescalingplan": "autoscaling-plans:DeleteScalingPlan",
    "autoscalingplans.describescalingplanresources": "autoscaling-plans:DescribeScalingPlanResources",
    "autoscalingplans.describescalingplans": "autoscaling-plans:DescribeScalingPlans",
    "autoscalingplans.getscalingplanresourceforecastdata": "autoscaling-plans:GetScalingPlanResourceForecastData",
    "autoscalingplans.updatescalingplan": "autoscaling-plans:UpdateScalingPlan",
    "backup.createbackupplan": "backup:CreateBackupPlan",
    "backup.createbackupselection": "backup:CreateBackupSelection",
    "backup.createbackupvault": "backup:CreateBackupVault",
    "backup.createframework": "backup:CreateFramework",
    "backup.createreportplan": "backup:CreateReportPlan",
    "backup.deletebackupplan": "backup:DeleteBackupPlan",
    "backup.deletebackupselection": "backup:DeleteBackupSelection",
    "backup.deletebackupvault": "backup:DeleteBackupVault",
    "backup.deletebackupvaultaccesspolicy": "backup:DeleteBackupVaultAccessPolicy",
    "backup.deletebackupvaultlockconfiguration": "backup:DeleteBackupVaultLockConfiguration",
    "backup.deletebackupvaultnotifications": "backup:DeleteBackupVaultNotifications",
    "backup.deleteframework": "backup:DeleteFramework",
    "backup.deleterecoverypoint": "backup:DeleteRecoveryPoint",
    "backup.deletereportplan": "backup:DeleteReportPlan",
    "backup.describebackupjob": "backup:DescribeBackupJob",
    "backup.describebackupvault": "backup:DescribeBackupVault",
    "backup.describecopyjob": "backup:DescribeCopyJob",
    "backup.describeframework": "backup:DescribeFramework",
    "backup.describeglobalsettings": "backup:DescribeGlobalSettings",
    "backup.describeprotectedresource": "backup:DescribeProtectedResource",
    "backup.describerecoverypoint": "backup:DescribeRecoveryPoint",
    "backup.describeregionsettings": "backup:DescribeRegionSettings",
    "backup.describereportjob": "backup:DescribeReportJob",
    "backup.describereportplan": "backup:DescribeReportPlan",
    "backup.describerestorejob": "backup:DescribeRestoreJob",
    "backup.disassociaterecoverypoint": "backup:DisassociateRecoveryPoint",
    "backup.exportbackupplantemplate": "backup:ExportBackupPlanTemplate",
    "backup.getbackupplan": "backup:GetBackupPlan",
    "backup.getbackupplanfromjson": "backup:GetBackupPlanFromJSON",
    "backup.getbackupplanfromtemplate": "backup:GetBackupPlanFromTemplate",
    "backup.getbackupselection": "backup:GetBackupSelection",
    "backup.getbackupvaultaccesspolicy": "backup:GetBackupVaultAccessPolicy",
    "backup.getbackupvaultnotifications": "backup:GetBackupVaultNotifications",
    "backup.getrecoverypointrestoremetadata": "backup:GetRecoveryPointRestoreMetadata",
    "backup.getsupportedresourcetypes": "backup:GetSupportedResourceTypes",
    "backup.listbackupjobs": "backup:ListBackupJobs",
    "backup.listbackupplans": "backup:ListBackupPlans",
    "backup.listbackupplantemplates": "backup:ListBackupPlanTemplates",
    "backup.listbackupplanversions": "backup:ListBackupPlanVersions",
    "backup.listbackupselections": "backup:ListBackupSelections",
    "backup.listbackupvaults": "backup:ListBackupVaults",
    "backup.listcopyjobs": "backup:ListCopyJobs",
    "backup.listframeworks": "backup:ListFrameworks",
    "backup.listprotectedresources": "backup:ListProtectedResources",
    "backup.listrecoverypointsbybackupvault": "backup:ListRecoveryPointsByBackupVault",
    "backup.listrecoverypointsbyresource": "backup:ListRecoveryPointsByResource",
    "backup.listreportjobs": "backup:ListReportJobs",
    "backup.listreportplans": "backup:ListReportPlans",
    "backup.listrestorejobs": "backup:ListRestoreJobs",
    "backup.listtags": "backup:ListTags",
    "backup.putbackupvaultaccesspolicy": "backup:PutBackupVaultAccessPolicy",
    "backup.putbackupvaultlockconfiguration": "backup:PutBackupVaultLockConfiguration",
    "backup.putbackupvaultnotifications": "backup:PutBackupVaultNotifications",
    "backup.startbackupjob": "backup:StartBackupJob",
    "backup.startcopyjob": "backup:StartCopyJob",
    "backup.startreportjob": "backup:StartReportJob",
    "backup.startrestorejob": "backup:StartRestoreJob",
    "backup.stopbackupjob": "backup:StopBackupJob",
    "backup.tagresource": "backup:TagResource",
    "backup.untagresource": "backup:UntagResource",
    "backup.updatebackupplan": "backup:UpdateBackupPlan",
    "backup.updateframework": "backup:UpdateFramework",
    "backup.updateglobalsettings": "backup:UpdateGlobalSettings",
    "backup.updaterecoverypointlifecycle": "backup:UpdateRecoveryPointLifecycle",
    "backup.updateregionsettings": "backup:UpdateRegionSettings",
    "backup.updatereportplan": "backup:UpdateReportPlan",
    "backupgateway.associategatewaytoserver": "backup-gateway:AssociateGatewayToServer",
    "backupgateway.creategateway": "backup-gateway:CreateGateway",
    "backupgateway.deletegateway": "backup-gateway:DeleteGateway",
    "backupgateway.deletehypervisor": "backup-gateway:DeleteHypervisor",
    "backupgateway.disassociategatewayfromserver": "backup-gateway:DisassociateGatewayFromServer",
    "backupgateway.getgateway": "backup-gateway:GetGateway",
    "backupgateway.importhypervisorconfiguration": "backup-gateway:ImportHypervisorConfiguration",
    "backupgateway.listgateways": "backup-gateway:ListGateways",
    "backupgateway.listhypervisors": "backup-gateway:ListHypervisors",
    "backupgateway.listtagsforresource": "backup-gateway:ListTagsForResource",
    "backupgateway.listvirtualmachines": "backup-gateway:ListVirtualMachines",
    "backupgateway.putmaintenancestarttime": "backup-gateway:PutMaintenanceStartTime",
    "backupgateway.tagresource": "backup-gateway:TagResource",
    "backupgateway.testhypervisorconfiguration": "backup-gateway:TestHypervisorConfiguration",
    "backupgateway.untagresource": "backup-gateway:UntagResource",
    "backupgateway.updategatewayinformation": "backup-gateway:UpdateGatewayInformation",
    "backupgateway.updategatewaysoftwarenow": "backup-gateway:UpdateGatewaySoftwareNow",
    "backupgateway.updatehypervisor": "backup-gateway:UpdateHypervisor",
    "batch.canceljob": "batch:CancelJob",
    "batch.createcomputeenvironment": "batch:CreateComputeEnvironment",
    "batch.createjobqueue": "batch:CreateJobQueue",
    "batch.createschedulingpolicy": "batch:CreateSchedulingPolicy",
    "batch.deletecomputeenvironment": "batch:DeleteComputeEnvironment",
    "batch.deletejobqueue": "batch:DeleteJobQueue",
    "batch.deleteschedulingpolicy": "batch:DeleteSchedulingPolicy",
    "batch.deregisterjobdefinition": "batch:DeregisterJobDefinition",
    "batch.describecomputeenvironments": "batch:DescribeComputeEnvironments",
    "batch.describejobdefinitions": "batch:DescribeJobDefinitions",
    "batch.describejobqueues": "batch:DescribeJobQueues",
    "batch.describejobs": "batch:DescribeJobs",
    "batch.describeschedulingpolicies": "batch:DescribeSchedulingPolicies",
    "batch.listjobs": "batch:ListJobs",
    "batch.listschedulingpolicies": "batch:ListSchedulingPolicies",
    "batch.listtagsforresource": "batch:ListTagsForResource",
    "batch.registerjobdefinition": "batch:RegisterJobDefinition",
    "batch.submitjob": "batch:SubmitJob",
    "batch.tagresource": "batch:TagResource",
    "batch.terminatejob": "batch:TerminateJob",
    "batch.untagresource": "batch:UntagResource",
    "batch.updatecomputeenvironment": "batch:UpdateComputeEnvironment",
    "batch.updatejobqueue": "batch:UpdateJobQueue",
    "batch.updateschedulingpolicy": "batch:UpdateSchedulingPolicy",
    "billingconductor.associateaccounts": "billingconductor:AssociateAccounts",
    "billingconductor.associatepricingrules": "billingconductor:AssociatePricingRules",
    "billingconductor.batchassociateresourcestocustomlineitem": "billingconductor:BatchAssociateResourcesToCustomLineItem",
    "billingconductor.batchdisassociateresourcesfromcustomlineitem": "billingconductor:BatchDisassociateResourcesFromCustomLineItem",
    "billingconductor.createbillinggroup": "billingconductor:CreateBillingGroup",
    "billingconductor.createcustomlineitem": "billingconductor:CreateCustomLineItem",
    "billingconductor.createpricingplan": "billingconductor:CreatePricingPlan",
    "billingconductor.createpricingrule": "billingconductor:CreatePricingRule",
    "billingconductor.deletebillinggroup": "billingconductor:DeleteBillingGroup",
    "billingconductor.deletecustomlineitem": "billingconductor:DeleteCustomLineItem",
    "billingconductor.deletepricingplan": "billingconductor:DeletePricingPlan",
    "billingconductor.deletepricingrule": "billingconductor:DeletePricingRule",
    "billingconductor.disassociateaccounts": "billingconductor:DisassociateAccounts",
    "billingconductor.disassociatepricingrules": "billingconductor:DisassociatePricingRules",
    "billingconductor.listaccountassociations": "billingconductor:ListAccountAssociations",
    "billingconductor.listbillinggroupcostreports": "billingconductor:ListBillingGroupCostReports",
    "billingconductor.listbillinggroups": "billingconductor:ListBillingGroups",
    "billingconductor.listcustomlineitems": "billingconductor:ListCustomLineItems",
    "billingconductor.listpricingplans": "billingconductor:ListPricingPlans",
    "billingconductor.listpricingplansassociatedwithpricingrule": "billingconductor:ListPricingPlansAssociatedWithPricingRule",
    "billingconductor.listpricingrules": "billingconductor:ListPricingRules",
    "billingconductor.listpricingrulesassociatedtopricingplan": "billingconductor:ListPricingRulesAssociatedToPricingPlan",
    "billingconductor.listresourcesassociatedtocustomlineitem": "billingconductor:ListResourcesAssociatedToCustomLineItem",
    "billingconductor.listtagsforresource": "billingconductor:ListTagsForResource",
    "billingconductor.tagresource": "billingconductor:TagResource",
    "billingconductor.untagresource": "billingconductor:UntagResource",
    "billingconductor.updatebillinggroup": "billingconductor:UpdateBillingGroup",
    "billingconductor.updatecustomlineitem": "billingconductor:UpdateCustomLineItem",
    "billingconductor.updatepricingplan": "billingconductor:UpdatePricingPlan",
    "billingconductor.updatepricingrule": "billingconductor:UpdatePricingRule",
    "braket.canceljob": "braket:CancelJob",
    "braket.cancelquantumtask": "braket:CancelQuantumTask",
    "braket.createjob": "braket:CreateJob",
    "braket.createquantumtask": "braket:CreateQuantumTask",
    "braket.getdevice": "braket:GetDevice",
    "braket.getjob": "braket:GetJob",
    "braket.getquantumtask": "braket:GetQuantumTask",
    "braket.listtagsforresource": "braket:ListTagsForResource",
    "braket.searchdevices": "braket:SearchDevices",
    "braket.searchjobs": "braket:SearchJobs",
    "braket.searchquantumtasks": "braket:SearchQuantumTasks",
    "braket.tagresource": "braket:TagResource",
    "braket.untagresource": "braket:UntagResource",
    "budgets.createbudget": "budgets:ModifyBudget",
    "budgets.createbudgetaction": "budgets:CreateBudgetAction",
    "budgets.createnotification": "budgets:ModifyBudget",
    "budgets.createsubscriber": "budgets:ModifyBudget",
    "budgets.deletebudget": "budgets:ModifyBudget",
    "budgets.deletebudgetaction": "budgets:DeleteBudgetAction",
    "budgets.deletenotification": "budgets:ModifyBudget",
    "budgets.deletesubscriber": "budgets:ModifyBudget",
    "budgets.describebudget": "budgets:ViewBudget",
    "budgets.describebudgetaction": "budgets:DescribeBudgetAction",
    "budgets.describebudgetactionhistories": "budgets:DescribeBudgetActionHistories",
    "budgets.describebudgetactionsforaccount": "budgets:DescribeBudgetActionsForAccount",
    "budgets.describebudgetactionsforbudget": "budgets:DescribeBudgetActionsForBudget",
    "budgets.describebudgetperformancehistory": "budgets:ViewBudget",
    "budgets.describebudgets": "budgets:ViewBudget",
    "budgets.describenotificationsforbudget": "budgets:ViewBudget",
    "budgets.describesubscribersfornotification": "budgets:ViewBudget",
    "budgets.executebudgetaction": "budgets:ExecuteBudgetAction",
    "budgets.updatebudget": "budgets:ModifyBudget",
    "budgets.updatebudgetaction": "budgets:UpdateBudgetAction",
    "budgets.updatenotification": "budgets:ModifyBudget",
    "budgets.updatesubscriber": "budgets:ModifyBudget",
    "chime.associatephonenumberswithvoiceconnector": "chime:AssociatePhoneNumbersWithVoiceConnector",
    "chime.associatephonenumberswithvoiceconnectorgroup": "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
    "chime.associatephonenumberwithuser": "chime:AssociatePhoneNumberWithUser",
    "chime.associatesignindelegategroupswithaccount": "chime:AssociateSigninDelegateGroupsWithAccount",
    "chime.batchcreateattendee": "chime:BatchCreateAttendee",
    "chime.batchcreatechannelmembership": "chime:BatchCreateChannelMembership",
    "chime.batchcreateroommembership": "chime:BatchCreateRoomMembership",
    "chime.batchdeletephonenumber": "chime:BatchDeletePhoneNumber",
    "chime.batchsuspenduser": "chime:BatchSuspendUser",
    "chime.batchunsuspenduser": "chime:BatchUnsuspendUser",
    "chime.batchupdatephonenumber": "chime:BatchUpdatePhoneNumber",
    "chime.batchupdateuser": "chime:BatchUpdateUser",
    "chime.createaccount": "chime:CreateAccount",
    "chime.createappinstance": "chime:CreateAppInstance",
    "chime.createappinstanceadmin": "chime:CreateAppInstanceAdmin",
    "chime.createappinstanceuser": "chime:CreateAppInstanceUser",
    "chime.createattendee": "chime:CreateAttendee",
    "chime.createbot": "chime:CreateBot",
    "chime.createchannel": "chime:CreateChannel",
    "chime.createchannelban": "chime:CreateChannelBan",
    "chime.createchannelmembership": "chime:CreateChannelMembership",
    "chime.createchannelmoderator": "chime:CreateChannelModerator",
    "chime.createmediacapturepipeline": "chime:CreateMediaCapturePipeline",
    "chime.createmeeting": "chime:CreateMeeting",
    "chime.createmeetingdialout": "chime:CreateMeetingDialOut",
    "chime.createmeetingwithattendees": "chime:CreateMeetingWithAttendees",
    "chime.createphonenumberorder": "chime:CreatePhoneNumberOrder",
    "chime.createproxysession": "chime:CreateProxySession",
    "chime.createroom": "chime:CreateRoom",
    "chime.createroommembership": "chime:CreateRoomMembership",
    "chime.createsipmediaapplication": "chime:CreateSipMediaApplication",
    "chime.createsipmediaapplicationcall": "chime:CreateSipMediaApplicationCall",
    "chime.createsiprule": "chime:CreateSipRule",
    "chime.createuser": "chime:CreateUser",
    "chime.createvoiceconnector": "chime:CreateVoiceConnector",
    "chime.createvoiceconnectorgroup": "chime:CreateVoiceConnectorGroup",
    "chime.deleteaccount": "chime:DeleteAccount",
    "chime.deleteappinstance": "chime:DeleteAppInstance",
    "chime.deleteappinstanceadmin": "chime:DeleteAppInstanceAdmin",
    "chime.deleteappinstancestreamingconfigurations": "chime:DeleteAppInstanceStreamingConfigurations",
    "chime.deleteappinstanceuser": "chime:DeleteAppInstanceUser",
    "chime.deleteattendee": "chime:DeleteAttendee",
    "chime.deletechannel": "chime:DeleteChannel",
    "chime.deletechannelban": "chime:DeleteChannelBan",
    "chime.deletechannelmembership": "chime:DeleteChannelMembership",
    "chime.deletechannelmessage": "chime:DeleteChannelMessage",
    "chime.deletechannelmoderator": "chime:DeleteChannelModerator",
    "chime.deleteeventsconfiguration": "chime:DeleteEventsConfiguration",
    "chime.deletemediacapturepipeline": "chime:DeleteMediaCapturePipeline",
    "chime.deletemeeting": "chime:DeleteMeeting",
    "chime.deletephonenumber": "chime:DeletePhoneNumber",
    "chime.deleteproxysession": "chime:DeleteProxySession",
    "chime.deleteroom": "chime:DeleteRoom",
    "chime.deleteroommembership": "chime:DeleteRoomMembership",
    "chime.deletesipmediaapplication": "chime:DeleteSipMediaApplication",
    "chime.deletesiprule": "chime:DeleteSipRule",
    "chime.deletevoiceconnector": "chime:DeleteVoiceConnector",
    "chime.deletevoiceconnectoremergencycallingconfiguration": "chime:DeleteVoiceConnectorEmergencyCallingConfiguration",
    "chime.deletevoiceconnectorgroup": "chime:DeleteVoiceConnectorGroup",
    "chime.deletevoiceconnectororigination": "chime:DeleteVoiceConnectorOrigination",
    "chime.deletevoiceconnectorproxy": "chime:DeleteVoiceConnectorProxy",
    "chime.deletevoiceconnectorstreamingconfiguration": "chime:DeleteVoiceConnectorStreamingConfiguration",
    "chime.deletevoiceconnectortermination": "chime:DeleteVoiceConnectorTermination",
    "chime.deletevoiceconnectorterminationcredentials": "chime:DeleteVoiceConnectorTerminationCredentials",
    "chime.describeappinstance": "chime:DescribeAppInstance",
    "chime.describeappinstanceadmin": "chime:DescribeAppInstanceAdmin",
    "chime.describeappinstanceuser": "chime:DescribeAppInstanceUser",
    "chime.describechannel": "chime:DescribeChannel",
    "chime.describechannelban": "chime:DescribeChannelBan",
    "chime.describechannelmembership": "chime:DescribeChannelMembership",
    "chime.describechannelmembershipforappinstanceuser": "chime:DescribeChannelMembershipForAppInstanceUser",
    "chime.describechannelmoderatedbyappinstanceuser": "chime:DescribeChannelModeratedByAppInstanceUser",
    "chime.describechannelmoderator": "chime:DescribeChannelModerator",
    "chime.disassociatephonenumberfromuser": "chime:DisassociatePhoneNumberFromUser",
    "chime.disassociatephonenumbersfromvoiceconnector": "chime:DisassociatePhoneNumbersFromVoiceConnector",
    "chime.disassociatephonenumbersfromvoiceconnectorgroup": "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "chime.disassociatesignindelegategroupsfromaccount": "chime:DisassociateSigninDelegateGroupsFromAccount",
    "chime.getaccount": "chime:GetAccount",
    "chime.getaccountsettings": "chime:GetAccountSettings",
    "chime.getappinstanceretentionsettings": "chime:GetAppInstanceRetentionSettings",
    "chime.getappinstancestreamingconfigurations": "chime:GetAppInstanceStreamingConfigurations",
    "chime.getattendee": "chime:GetAttendee",
    "chime.getbot": "chime:GetBot",
    "chime.getchannelmessage": "chime:GetChannelMessage",
    "chime.geteventsconfiguration": "chime:GetEventsConfiguration",
    "chime.getglobalsettings": "chime:GetGlobalSettings",
    "chime.getmediacapturepipeline": "chime:GetMediaCapturePipeline",
    "chime.getmeeting": "chime:GetMeeting",
    "chime.getmessagingsessionendpoint": "chime:GetMessagingSessionEndpoint",
    "chime.getphonenumber": "chime:GetPhoneNumber",
    "chime.getphonenumberorder": "chime:GetPhoneNumberOrder",
    "chime.getphonenumbersettings": "chime:GetPhoneNumberSettings",
    "chime.getproxysession": "chime:GetProxySession",
    "chime.getretentionsettings": "chime:GetRetentionSettings",
    "chime.getroom": "chime:GetRoom",
    "chime.getsipmediaapplication": "chime:GetSipMediaApplication",
    "chime.getsipmediaapplicationloggingconfiguration": "chime:GetSipMediaApplicationLoggingConfiguration",
    "chime.getsiprule": "chime:GetSipRule",
    "chime.getuser": "chime:GetUser",
    "chime.getusersettings": "chime:GetUserSettings",
    "chime.getvoiceconnector": "chime:GetVoiceConnector",
    "chime.getvoiceconnectoremergencycallingconfiguration": "chime:GetVoiceConnectorEmergencyCallingConfiguration",
    "chime.getvoiceconnectorgroup": "chime:GetVoiceConnectorGroup",
    "chime.getvoiceconnectorloggingconfiguration": "chime:GetVoiceConnectorLoggingConfiguration",
    "chime.getvoiceconnectororigination": "chime:GetVoiceConnectorOrigination",
    "chime.getvoiceconnectorproxy": "chime:GetVoiceConnectorProxy",
    "chime.getvoiceconnectorstreamingconfiguration": "chime:GetVoiceConnectorStreamingConfiguration",
    "chime.getvoiceconnectortermination": "chime:GetVoiceConnectorTermination",
    "chime.getvoiceconnectorterminationhealth": "chime:GetVoiceConnectorTerminationHealth",
    "chime.inviteusers": "chime:InviteUsers",
    "chime.listaccounts": "chime:ListAccounts",
    "chime.listappinstanceadmins": "chime:ListAppInstanceAdmins",
    "chime.listappinstances": "chime:ListAppInstances",
    "chime.listappinstanceusers": "chime:ListAppInstanceUsers",
    "chime.listattendees": "chime:ListAttendees",
    "chime.listattendeetags": "chime:ListAttendeeTags",
    "chime.listbots": "chime:ListBots",
    "chime.listchannelbans": "chime:ListChannelBans",
    "chime.listchannelmemberships": "chime:ListChannelMemberships",
    "chime.listchannelmembershipsforappinstanceuser": "chime:ListChannelMembershipsForAppInstanceUser",
    "chime.listchannelmessages": "chime:ListChannelMessages",
    "chime.listchannelmoderators": "chime:ListChannelModerators",
    "chime.listchannels": "chime:ListChannels",
    "chime.listchannelsmoderatedbyappinstanceuser": "chime:ListChannelsModeratedByAppInstanceUser",
    "chime.listmediacapturepipelines": "chime:ListMediaCapturePipelines",
    "chime.listmeetings": "chime:ListMeetings",
    "chime.listmeetingtags": "chime:ListMeetingTags",
    "chime.listphonenumberorders": "chime:ListPhoneNumberOrders",
    "chime.listphonenumbers": "chime:ListPhoneNumbers",
    "chime.listproxysessions": "chime:ListProxySessions",
    "chime.listroommemberships": "chime:ListRoomMemberships",
    "chime.listrooms": "chime:ListRooms",
    "chime.listsipmediaapplications": "chime:ListSipMediaApplications",
    "chime.listsiprules": "chime:ListSipRules",
    "chime.listsupportedphonenumbercountries": "chime:ListSupportedPhoneNumberCountries",
    "chime.listtagsforresource": "chime:ListTagsForResource",
    "chime.listusers": "chime:ListUsers",
    "chime.listvoiceconnectorgroups": "chime:ListVoiceConnectorGroups",
    "chime.listvoiceconnectors": "chime:ListVoiceConnectors",
    "chime.listvoiceconnectorterminationcredentials": "chime:ListVoiceConnectorTerminationCredentials",
    "chime.logoutuser": "chime:LogoutUser",
    "chime.putappinstanceretentionsettings": "chime:PutAppInstanceRetentionSettings",
    "chime.putappinstancestreamingconfigurations": "chime:PutAppInstanceStreamingConfigurations",
    "chime.puteventsconfiguration": "chime:PutEventsConfiguration",
    "chime.putretentionsettings": "chime:PutRetentionSettings",
    "chime.putsipmediaapplicationloggingconfiguration": "chime:PutSipMediaApplicationLoggingConfiguration",
    "chime.putvoiceconnectoremergencycallingconfiguration": "chime:PutVoiceConnectorEmergencyCallingConfiguration",
    "chime.putvoiceconnectorloggingconfiguration": "chime:PutVoiceConnectorLoggingConfiguration",
    "chime.putvoiceconnectororigination": "chime:PutVoiceConnectorOrigination",
    "chime.putvoiceconnectorproxy": "chime:PutVoiceConnectorProxy",
    "chime.putvoiceconnectorstreamingconfiguration": "chime:PutVoiceConnectorStreamingConfiguration",
    "chime.putvoiceconnectortermination": "chime:PutVoiceConnectorTermination",
    "chime.putvoiceconnectorterminationcredentials": "chime:PutVoiceConnectorTerminationCredentials",
    "chime.redactchannelmessage": "chime:RedactChannelMessage",
    "chime.redactconversationmessage": "chime:RedactConversationMessage",
    "chime.redactroommessage": "chime:RedactRoomMessage",
    "chime.regeneratesecuritytoken": "chime:RegenerateSecurityToken",
    "chime.resetpersonalpin": "chime:ResetPersonalPIN",
    "chime.restorephonenumber": "chime:RestorePhoneNumber",
    "chime.searchavailablephonenumbers": "chime:SearchAvailablePhoneNumbers",
    "chime.sendchannelmessage": "chime:SendChannelMessage",
    "chime.startmeetingtranscription": "chime:StartMeetingTranscription",
    "chime.stopmeetingtranscription": "chime:StopMeetingTranscription",
    "chime.tagattendee": "chime:TagAttendee",
    "chime.tagmeeting": "chime:TagMeeting",
    "chime.tagresource": "chime:TagResource",
    "chime.untagattendee": "chime:UntagAttendee",
    "chime.untagmeeting": "chime:UntagMeeting",
    "chime.untagresource": "chime:UntagResource",
    "chime.updateaccount": "chime:UpdateAccount",
    "chime.updateaccountsettings": "chime:UpdateAccountSettings",
    "chime.updateappinstance": "chime:UpdateAppInstance",
    "chime.updateappinstanceuser": "chime:UpdateAppInstanceUser",
    "chime.updatebot": "chime:UpdateBot",
    "chime.updatechannel": "chime:UpdateChannel",
    "chime.updatechannelmessage": "chime:UpdateChannelMessage",
    "chime.updatechannelreadmarker": "chime:UpdateChannelReadMarker",
    "chime.updateglobalsettings": "chime:UpdateGlobalSettings",
    "chime.updatephonenumber": "chime:UpdatePhoneNumber",
    "chime.updatephonenumbersettings": "chime:UpdatePhoneNumberSettings",
    "chime.updateproxysession": "chime:UpdateProxySession",
    "chime.updateroom": "chime:UpdateRoom",
    "chime.updateroommembership": "chime:UpdateRoomMembership",
    "chime.updatesipmediaapplication": "chime:UpdateSipMediaApplication",
    "chime.updatesipmediaapplicationcall": "chime:UpdateSipMediaApplicationCall",
    "chime.updatesiprule": "chime:UpdateSipRule",
    "chime.updateuser": "chime:UpdateUser",
    "chime.updateusersettings": "chime:UpdateUserSettings",
    "chime.updatevoiceconnector": "chime:UpdateVoiceConnector",
    "chime.updatevoiceconnectorgroup": "chime:UpdateVoiceConnectorGroup",
    "chimesdkidentity.createappinstance": "chime:CreateAppInstance",
    "chimesdkidentity.createappinstanceadmin": "chime:CreateAppInstanceAdmin",
    "chimesdkidentity.createappinstanceuser": "chime:CreateAppInstanceUser",
    "chimesdkidentity.deleteappinstance": "chime:DeleteAppInstance",
    "chimesdkidentity.deleteappinstanceadmin": "chime:DeleteAppInstanceAdmin",
    "chimesdkidentity.deleteappinstanceuser": "chime:DeleteAppInstanceUser",
    "chimesdkidentity.deregisterappinstanceuserendpoint": "chime:DeregisterAppInstanceUserEndpoint",
    "chimesdkidentity.describeappinstance": "chime:DescribeAppInstance",
    "chimesdkidentity.describeappinstanceadmin": "chime:DescribeAppInstanceAdmin",
    "chimesdkidentity.describeappinstanceuser": "chime:DescribeAppInstanceUser",
    "chimesdkidentity.describeappinstanceuserendpoint": "chime:DescribeAppInstanceUserEndpoint",
    "chimesdkidentity.getappinstanceretentionsettings": "chime:GetAppInstanceRetentionSettings",
    "chimesdkidentity.listappinstanceadmins": "chime:ListAppInstanceAdmins",
    "chimesdkidentity.listappinstances": "chime:ListAppInstances",
    "chimesdkidentity.listappinstanceuserendpoints": "chime:ListAppInstanceUserEndpoints",
    "chimesdkidentity.listappinstanceusers": "chime:ListAppInstanceUsers",
    "chimesdkidentity.listtagsforresource": "chime:ListTagsForResource",
    "chimesdkidentity.putappinstanceretentionsettings": "chime:PutAppInstanceRetentionSettings",
    "chimesdkidentity.registerappinstanceuserendpoint": "chime:RegisterAppInstanceUserEndpoint",
    "chimesdkidentity.tagresource": "chime:TagResource",
    "chimesdkidentity.untagresource": "chime:UntagResource",
    "chimesdkidentity.updateappinstance": "chime:UpdateAppInstance",
    "chimesdkidentity.updateappinstanceuser": "chime:UpdateAppInstanceUser",
    "chimesdkidentity.updateappinstanceuserendpoint": "chime:UpdateAppInstanceUserEndpoint",
    "chimesdkmeetings.batchcreateattendee": "chime:BatchCreateAttendee",
    "chimesdkmeetings.createattendee": "chime:CreateAttendee",
    "chimesdkmeetings.createmeeting": "chime:CreateMeeting",
    "chimesdkmeetings.createmeetingwithattendees": "chime:CreateMeetingWithAttendees",
    "chimesdkmeetings.deleteattendee": "chime:DeleteAttendee",
    "chimesdkmeetings.deletemeeting": "chime:DeleteMeeting",
    "chimesdkmeetings.getattendee": "chime:GetAttendee",
    "chimesdkmeetings.getmeeting": "chime:GetMeeting",
    "chimesdkmeetings.listattendees": "chime:ListAttendees",
    "chimesdkmeetings.startmeetingtranscription": "chime:StartMeetingTranscription",
    "chimesdkmeetings.stopmeetingtranscription": "chime:StopMeetingTranscription",
    "chimesdkmessaging.getmessagingsessionendpoint": "chime:GetMessagingSessionEndpoint",
    "cloud9.createenvironmentec2": "cloud9:CreateEnvironmentEC2",
    "cloud9.createenvironmentmembership": "cloud9:CreateEnvironmentMembership",
    "cloud9.deleteenvironment": "cloud9:DeleteEnvironment",
    "cloud9.deleteenvironmentmembership": "cloud9:DeleteEnvironmentMembership",
    "cloud9.describeenvironmentmemberships": "cloud9:DescribeEnvironmentMemberships",
    "cloud9.describeenvironments": "cloud9:DescribeEnvironments",
    "cloud9.describeenvironmentstatus": "cloud9:DescribeEnvironmentStatus",
    "cloud9.listenvironments": "cloud9:ListEnvironments",
    "cloud9.listtagsforresource": "cloud9:ListTagsForResource",
    "cloud9.tagresource": "cloud9:TagResource",
    "cloud9.untagresource": "cloud9:UntagResource",
    "cloud9.updateenvironment": "cloud9:UpdateEnvironment",
    "cloud9.updateenvironmentmembership": "cloud9:UpdateEnvironmentMembership",
    "cloudcontrol.cancelresourcerequest": "cloudformation:CancelResourceRequest",
    "cloudcontrol.createresource": "cloudformation:CreateResource",
    "cloudcontrol.deleteresource": "cloudformation:DeleteResource",
    "cloudcontrol.getresource": "cloudformation:GetResource",
    "cloudcontrol.getresourcerequeststatus": "cloudformation:GetResourceRequestStatus",
    "cloudcontrol.listresourcerequests": "cloudformation:ListResourceRequests",
    "cloudcontrol.listresources": "cloudformation:ListResources",
    "cloudcontrol.updateresource": "cloudformation:UpdateResource",
    "clouddirectory.addfacettoobject": "clouddirectory:AddFacetToObject",
    "clouddirectory.applyschema": "clouddirectory:ApplySchema",
    "clouddirectory.attachobject": "clouddirectory:AttachObject",
    "clouddirectory.attachpolicy": "clouddirectory:AttachPolicy",
    "clouddirectory.attachtoindex": "clouddirectory:AttachToIndex",
    "clouddirectory.attachtypedlink": "clouddirectory:AttachTypedLink",
    "clouddirectory.batchread": "clouddirectory:BatchRead",
    "clouddirectory.batchwrite": "clouddirectory:BatchWrite",
    "clouddirectory.createdirectory": "clouddirectory:CreateDirectory",
    "clouddirectory.createfacet": "clouddirectory:CreateFacet",
    "clouddirectory.createindex": "clouddirectory:CreateIndex",
    "clouddirectory.createobject": "clouddirectory:CreateObject",
    "clouddirectory.createschema": "clouddirectory:CreateSchema",
    "clouddirectory.createtypedlinkfacet": "clouddirectory:CreateTypedLinkFacet",
    "clouddirectory.deletedirectory": "clouddirectory:DeleteDirectory",
    "clouddirectory.deletefacet": "clouddirectory:DeleteFacet",
    "clouddirectory.deleteobject": "clouddirectory:DeleteObject",
    "clouddirectory.deleteschema": "clouddirectory:DeleteSchema",
    "clouddirectory.deletetypedlinkfacet": "clouddirectory:DeleteTypedLinkFacet",
    "clouddirectory.detachfromindex": "clouddirectory:DetachFromIndex",
    "clouddirectory.detachobject": "clouddirectory:DetachObject",
    "clouddirectory.detachpolicy": "clouddirectory:DetachPolicy",
    "clouddirectory.detachtypedlink": "clouddirectory:DetachTypedLink",
    "clouddirectory.disabledirectory": "clouddirectory:DisableDirectory",
    "clouddirectory.enabledirectory": "clouddirectory:EnableDirectory",
    "clouddirectory.getappliedschemaversion": "clouddirectory:GetAppliedSchemaVersion",
    "clouddirectory.getdirectory": "clouddirectory:GetDirectory",
    "clouddirectory.getfacet": "clouddirectory:GetFacet",
    "clouddirectory.getlinkattributes": "clouddirectory:GetLinkAttributes",
    "clouddirectory.getobjectattributes": "clouddirectory:GetObjectAttributes",
    "clouddirectory.getobjectinformation": "clouddirectory:GetObjectInformation",
    "clouddirectory.getschemaasjson": "clouddirectory:GetSchemaAsJson",
    "clouddirectory.gettypedlinkfacetinformation": "clouddirectory:GetTypedLinkFacetInformation",
    "clouddirectory.listappliedschemaarns": "clouddirectory:ListAppliedSchemaArns",
    "clouddirectory.listattachedindices": "clouddirectory:ListAttachedIndices",
    "clouddirectory.listdevelopmentschemaarns": "clouddirectory:ListDevelopmentSchemaArns",
    "clouddirectory.listdirectories": "clouddirectory:ListDirectories",
    "clouddirectory.listfacetattributes": "clouddirectory:ListFacetAttributes",
    "clouddirectory.listfacetnames": "clouddirectory:ListFacetNames",
    "clouddirectory.listincomingtypedlinks": "clouddirectory:ListIncomingTypedLinks",
    "clouddirectory.listindex": "clouddirectory:ListIndex",
    "clouddirectory.listmanagedschemaarns": "clouddirectory:ListManagedSchemaArns",
    "clouddirectory.listobjectattributes": "clouddirectory:ListObjectAttributes",
    "clouddirectory.listobjectchildren": "clouddirectory:ListObjectChildren",
    "clouddirectory.listobjectparentpaths": "clouddirectory:ListObjectParentPaths",
    "clouddirectory.listobjectparents": "clouddirectory:ListObjectParents",
    "clouddirectory.listobjectpolicies": "clouddirectory:ListObjectPolicies",
    "clouddirectory.listoutgoingtypedlinks": "clouddirectory:ListOutgoingTypedLinks",
    "clouddirectory.listpolicyattachments": "clouddirectory:ListPolicyAttachments",
    "clouddirectory.listpublishedschemaarns": "clouddirectory:ListPublishedSchemaArns",
    "clouddirectory.listtagsforresource": "clouddirectory:ListTagsForResource",
    "clouddirectory.listtypedlinkfacetattributes": "clouddirectory:ListTypedLinkFacetAttributes",
    "clouddirectory.listtypedlinkfacetnames": "clouddirectory:ListTypedLinkFacetNames",
    "clouddirectory.lookuppolicy": "clouddirectory:LookupPolicy",
    "clouddirectory.publishschema": "clouddirectory:PublishSchema",
    "clouddirectory.putschemafromjson": "clouddirectory:PutSchemaFromJson",
    "clouddirectory.removefacetfromobject": "clouddirectory:RemoveFacetFromObject",
    "clouddirectory.tagresource": "clouddirectory:TagResource",
    "clouddirectory.untagresource": "clouddirectory:UntagResource",
    "clouddirectory.updatefacet": "clouddirectory:UpdateFacet",
    "clouddirectory.updatelinkattributes": "clouddirectory:UpdateLinkAttributes",
    "clouddirectory.updateobjectattributes": "clouddirectory:UpdateObjectAttributes",
    "clouddirectory.updateschema": "clouddirectory:UpdateSchema",
    "clouddirectory.updatetypedlinkfacet": "clouddirectory:UpdateTypedLinkFacet",
    "clouddirectory.upgradeappliedschema": "clouddirectory:UpgradeAppliedSchema",
    "clouddirectory.upgradepublishedschema": "clouddirectory:UpgradePublishedSchema",
    "cloudformation.activatetype": "cloudformation:ActivateType",
    "cloudformation.batchdescribetypeconfigurations": "cloudformation:BatchDescribeTypeConfigurations",
    "cloudformation.cancelupdatestack": "cloudformation:CancelUpdateStack",
    "cloudformation.continueupdaterollback": "cloudformation:ContinueUpdateRollback",
    "cloudformation.createchangeset": "cloudformation:CreateChangeSet",
    "cloudformation.createstack": "cloudformation:CreateStack",
    "cloudformation.createstackinstances": "cloudformation:CreateStackInstances",
    "cloudformation.createstackset": "cloudformation:CreateStackSet",
    "cloudformation.deactivatetype": "cloudformation:DeactivateType",
    "cloudformation.deletechangeset": "cloudformation:DeleteChangeSet",
    "cloudformation.deletestack": "cloudformation:DeleteStack",
    "cloudformation.deletestackinstances": "cloudformation:DeleteStackInstances",
    "cloudformation.deletestackset": "cloudformation:DeleteStackSet",
    "cloudformation.deregistertype": "cloudformation:DeregisterType",
    "cloudformation.describeaccountlimits": "cloudformation:DescribeAccountLimits",
    "cloudformation.describechangeset": "cloudformation:DescribeChangeSet",
    "cloudformation.describechangesethooks": "cloudformation:DescribeChangeSetHooks",
    "cloudformation.describepublisher": "cloudformation:DescribePublisher",
    "cloudformation.describestackdriftdetectionstatus": "cloudformation:DescribeStackDriftDetectionStatus",
    "cloudformation.describestackevents": "cloudformation:DescribeStackEvents",
    "cloudformation.describestackinstance": "cloudformation:DescribeStackInstance",
    "cloudformation.describestackresource": "cloudformation:DescribeStackResource",
    "cloudformation.describestackresourcedrifts": "cloudformation:DescribeStackResourceDrifts",
    "cloudformation.describestackresources": "cloudformation:DescribeStackResources",
    "cloudformation.describestacks": "cloudformation:DescribeStacks",
    "cloudformation.describestackset": "cloudformation:DescribeStackSet",
    "cloudformation.describestacksetoperation": "cloudformation:DescribeStackSetOperation",
    "cloudformation.describetype": "cloudformation:DescribeType",
    "cloudformation.describetyperegistration": "cloudformation:DescribeTypeRegistration",
    "cloudformation.detectstackdrift": "cloudformation:DetectStackDrift",
    "cloudformation.detectstackresourcedrift": "cloudformation:DetectStackResourceDrift",
    "cloudformation.detectstacksetdrift": "cloudformation:DetectStackSetDrift",
    "cloudformation.estimatetemplatecost": "cloudformation:EstimateTemplateCost",
    "cloudformation.executechangeset": "cloudformation:ExecuteChangeSet",
    "cloudformation.getstackpolicy": "cloudformation:GetStackPolicy",
    "cloudformation.gettemplate": "cloudformation:GetTemplate",
    "cloudformation.gettemplatesummary": "cloudformation:GetTemplateSummary",
    "cloudformation.importstackstostackset": "cloudformation:ImportStacksToStackSet",
    "cloudformation.listchangesets": "cloudformation:ListChangeSets",
    "cloudformation.listexports": "cloudformation:ListExports",
    "cloudformation.listimports": "cloudformation:ListImports",
    "cloudformation.liststackinstances": "cloudformation:ListStackInstances",
    "cloudformation.liststackresources": "cloudformation:ListStackResources",
    "cloudformation.liststacks": "cloudformation:ListStacks",
    "cloudformation.liststacksetoperationresults": "cloudformation:ListStackSetOperationResults",
    "cloudformation.liststacksetoperations": "cloudformation:ListStackSetOperations",
    "cloudformation.liststacksets": "cloudformation:ListStackSets",
    "cloudformation.listtyperegistrations": "cloudformation:ListTypeRegistrations",
    "cloudformation.listtypes": "cloudformation:ListTypes",
    "cloudformation.listtypeversions": "cloudformation:ListTypeVersions",
    "cloudformation.publishtype": "cloudformation:PublishType",
    "cloudformation.recordhandlerprogress": "cloudformation:RecordHandlerProgress",
    "cloudformation.registerpublisher": "cloudformation:RegisterPublisher",
    "cloudformation.registertype": "cloudformation:RegisterType",
    "cloudformation.rollbackstack": "cloudformation:RollbackStack",
    "cloudformation.setstackpolicy": "cloudformation:SetStackPolicy",
    "cloudformation.settypeconfiguration": "cloudformation:SetTypeConfiguration",
    "cloudformation.settypedefaultversion": "cloudformation:SetTypeDefaultVersion",
    "cloudformation.signalresource": "cloudformation:SignalResource",
    "cloudformation.stopstacksetoperation": "cloudformation:StopStackSetOperation",
    "cloudformation.testtype": "cloudformation:TestType",
    "cloudformation.updatestack": "cloudformation:UpdateStack",
    "cloudformation.updatestackinstances": "cloudformation:UpdateStackInstances",
    "cloudformation.updatestackset": "cloudformation:UpdateStackSet",
    "cloudformation.updateterminationprotection": "cloudformation:UpdateTerminationProtection",
    "cloudformation.validatetemplate": "cloudformation:ValidateTemplate",
    "cloudfront.associatealias": "cloudfront:AssociateAlias",
    "cloudfront.createcachepolicy": "cloudfront:CreateCachePolicy",
    "cloudfront.createcloudfrontoriginaccessidentity": "cloudfront:CreateCloudFrontOriginAccessIdentity",
    "cloudfront.createdistribution": "cloudfront:CreateDistribution",
    "cloudfront.createdistributionwithtags": "cloudfront:CreateDistributionWithTags",
    "cloudfront.createfieldlevelencryptionconfig": "cloudfront:CreateFieldLevelEncryptionConfig",
    "cloudfront.createfieldlevelencryptionprofile": "cloudfront:CreateFieldLevelEncryptionProfile",
    "cloudfront.createfunction": "cloudfront:CreateFunction",
    "cloudfront.createinvalidation": "cloudfront:CreateInvalidation",
    "cloudfront.createkeygroup": "cloudfront:CreateKeyGroup",
    "cloudfront.createmonitoringsubscription": "cloudfront:CreateMonitoringSubscription",
    "cloudfront.createoriginrequestpolicy": "cloudfront:CreateOriginRequestPolicy",
    "cloudfront.createpublickey": "cloudfront:CreatePublicKey",
    "cloudfront.createrealtimelogconfig": "cloudfront:CreateRealtimeLogConfig",
    "cloudfront.createresponseheaderspolicy": "cloudfront:CreateResponseHeadersPolicy",
    "cloudfront.createstreamingdistribution": "cloudfront:CreateStreamingDistribution",
    "cloudfront.createstreamingdistributionwithtags": "cloudfront:CreateStreamingDistributionWithTags",
    "cloudfront.deletecachepolicy": "cloudfront:DeleteCachePolicy",
    "cloudfront.deletecloudfrontoriginaccessidentity": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
    "cloudfront.deletedistribution": "cloudfront:DeleteDistribution",
    "cloudfront.deletefieldlevelencryptionconfig": "cloudfront:DeleteFieldLevelEncryptionConfig",
    "cloudfront.deletefieldlevelencryptionprofile": "cloudfront:DeleteFieldLevelEncryptionProfile",
    "cloudfront.deletefunction": "cloudfront:DeleteFunction",
    "cloudfront.deletekeygroup": "cloudfront:DeleteKeyGroup",
    "cloudfront.deletemonitoringsubscription": "cloudfront:DeleteMonitoringSubscription",
    "cloudfront.deleteoriginrequestpolicy": "cloudfront:DeleteOriginRequestPolicy",
    "cloudfront.deletepublickey": "cloudfront:DeletePublicKey",
    "cloudfront.deleterealtimelogconfig": "cloudfront:DeleteRealtimeLogConfig",
    "cloudfront.deleteresponseheaderspolicy": "cloudfront:DeleteResponseHeadersPolicy",
    "cloudfront.deletestreamingdistribution": "cloudfront:DeleteStreamingDistribution",
    "cloudfront.describefunction": "cloudfront:DescribeFunction",
    "cloudfront.getcachepolicy": "cloudfront:GetCachePolicy",
    "cloudfront.getcachepolicyconfig": "cloudfront:GetCachePolicyConfig",
    "cloudfront.getcloudfrontoriginaccessidentity": "cloudfront:GetCloudFrontOriginAccessIdentity",
    "cloudfront.getcloudfrontoriginaccessidentityconfig": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
    "cloudfront.getdistribution": "cloudfront:GetDistribution",
    "cloudfront.getdistributionconfig": "cloudfront:GetDistributionConfig",
    "cloudfront.getfieldlevelencryption": "cloudfront:GetFieldLevelEncryption",
    "cloudfront.getfieldlevelencryptionconfig": "cloudfront:GetFieldLevelEncryptionConfig",
    "cloudfront.getfieldlevelencryptionprofile": "cloudfront:GetFieldLevelEncryptionProfile",
    "cloudfront.getfieldlevelencryptionprofileconfig": "cloudfront:GetFieldLevelEncryptionProfileConfig",
    "cloudfront.getfunction": "cloudfront:GetFunction",
    "cloudfront.getinvalidation": "cloudfront:GetInvalidation",
    "cloudfront.getkeygroup": "cloudfront:GetKeyGroup",
    "cloudfront.getkeygroupconfig": "cloudfront:GetKeyGroupConfig",
    "cloudfront.getmonitoringsubscription": "cloudfront:GetMonitoringSubscription",
    "cloudfront.getoriginrequestpolicy": "cloudfront:GetOriginRequestPolicy",
    "cloudfront.getoriginrequestpolicyconfig": "cloudfront:GetOriginRequestPolicyConfig",
    "cloudfront.getpublickey": "cloudfront:GetPublicKey",
    "cloudfront.getpublickeyconfig": "cloudfront:GetPublicKeyConfig",
    "cloudfront.getrealtimelogconfig": "cloudfront:GetRealtimeLogConfig",
    "cloudfront.getresponseheaderspolicy": "cloudfront:GetResponseHeadersPolicy",
    "cloudfront.getresponseheaderspolicyconfig": "cloudfront:GetResponseHeadersPolicyConfig",
    "cloudfront.getstreamingdistribution": "cloudfront:GetStreamingDistribution",
    "cloudfront.getstreamingdistributionconfig": "cloudfront:GetStreamingDistributionConfig",
    "cloudfront.listcachepolicies": "cloudfront:ListCachePolicies",
    "cloudfront.listcloudfrontoriginaccessidentities": "cloudfront:ListCloudFrontOriginAccessIdentities",
    "cloudfront.listconflictingaliases": "cloudfront:ListConflictingAliases",
    "cloudfront.listdistributions": "cloudfront:ListDistributions",
    "cloudfront.listdistributionsbycachepolicyid": "cloudfront:ListDistributionsByCachePolicyId",
    "cloudfront.listdistributionsbykeygroup": "cloudfront:ListDistributionsByKeyGroup",
    "cloudfront.listdistributionsbyoriginrequestpolicyid": "cloudfront:ListDistributionsByOriginRequestPolicyId",
    "cloudfront.listdistributionsbyrealtimelogconfig": "cloudfront:ListDistributionsByRealtimeLogConfig",
    "cloudfront.listdistributionsbyresponseheaderspolicyid": "cloudfront:ListDistributionsByResponseHeadersPolicyId",
    "cloudfront.listdistributionsbywebaclid": "cloudfront:ListDistributionsByWebACLId",
    "cloudfront.listfieldlevelencryptionconfigs": "cloudfront:ListFieldLevelEncryptionConfigs",
    "cloudfront.listfieldlevelencryptionprofiles": "cloudfront:ListFieldLevelEncryptionProfiles",
    "cloudfront.listfunctions": "cloudfront:ListFunctions",
    "cloudfront.listinvalidations": "cloudfront:ListInvalidations",
    "cloudfront.listkeygroups": "cloudfront:ListKeyGroups",
    "cloudfront.listoriginrequestpolicies": "cloudfront:ListOriginRequestPolicies",
    "cloudfront.listpublickeys": "cloudfront:ListPublicKeys",
    "cloudfront.listrealtimelogconfigs": "cloudfront:ListRealtimeLogConfigs",
    "cloudfront.listresponseheaderspolicies": "cloudfront:ListResponseHeadersPolicies",
    "cloudfront.liststreamingdistributions": "cloudfront:ListStreamingDistributions",
    "cloudfront.listtagsforresource": "cloudfront:ListTagsForResource",
    "cloudfront.publishfunction": "cloudfront:PublishFunction",
    "cloudfront.tagresource": "cloudfront:TagResource",
    "cloudfront.testfunction": "cloudfront:TestFunction",
    "cloudfront.untagresource": "cloudfront:UntagResource",
    "cloudfront.updatecachepolicy": "cloudfront:UpdateCachePolicy",
    "cloudfront.updatecloudfrontoriginaccessidentity": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
    "cloudfront.updatedistribution": "cloudfront:UpdateDistribution",
    "cloudfront.updatefieldlevelencryptionconfig": "cloudfront:UpdateFieldLevelEncryptionConfig",
    "cloudfront.updatefieldlevelencryptionprofile": "cloudfront:UpdateFieldLevelEncryptionProfile",
    "cloudfront.updatefunction": "cloudfront:UpdateFunction",
    "cloudfront.updatekeygroup": "cloudfront:UpdateKeyGroup",
    "cloudfront.updateoriginrequestpolicy": "cloudfront:UpdateOriginRequestPolicy",
    "cloudfront.updatepublickey": "cloudfront:UpdatePublicKey",
    "cloudfront.updaterealtimelogconfig": "cloudfront:UpdateRealtimeLogConfig",
    "cloudfront.updateresponseheaderspolicy": "cloudfront:UpdateResponseHeadersPolicy",
    "cloudfront.updatestreamingdistribution": "cloudfront:UpdateStreamingDistribution",
    "cloudhsm.addtagstoresource": "cloudhsm:AddTagsToResource",
    "cloudhsm.createhapg": "cloudhsm:CreateHapg",
    "cloudhsm.createhsm": "cloudhsm:CreateHsm",
    "cloudhsm.createlunaclient": "cloudhsm:CreateLunaClient",
    "cloudhsm.deletehapg": "cloudhsm:DeleteHapg",
    "cloudhsm.deletehsm": "cloudhsm:DeleteHsm",
    "cloudhsm.deletelunaclient": "cloudhsm:DeleteLunaClient",
    "cloudhsm.describehapg": "cloudhsm:DescribeHapg",
    "cloudhsm.describehsm": "cloudhsm:DescribeHsm",
    "cloudhsm.describelunaclient": "cloudhsm:DescribeLunaClient",
    "cloudhsm.getconfig": "cloudhsm:GetConfig",
    "cloudhsm.listavailablezones": "cloudhsm:ListAvailableZones",
    "cloudhsm.listhapgs": "cloudhsm:ListHapgs",
    "cloudhsm.listhsms": "cloudhsm:ListHsms",
    "cloudhsm.listlunaclients": "cloudhsm:ListLunaClients",
    "cloudhsm.listtagsforresource": "cloudhsm:ListTagsForResource",
    "cloudhsm.modifyhapg": "cloudhsm:ModifyHapg",
    "cloudhsm.modifyhsm": "cloudhsm:ModifyHsm",
    "cloudhsm.modifylunaclient": "cloudhsm:ModifyLunaClient",
    "cloudhsm.removetagsfromresource": "cloudhsm:RemoveTagsFromResource",
    "cloudhsmv2.copybackuptoregion": "cloudhsm:CopyBackupToRegion",
    "cloudhsmv2.createcluster": "cloudhsm:CreateCluster",
    "cloudhsmv2.createhsm": "cloudhsm:CreateHsm",
    "cloudhsmv2.deletebackup": "cloudhsm:DeleteBackup",
    "cloudhsmv2.deletecluster": "cloudhsm:DeleteCluster",
    "cloudhsmv2.deletehsm": "cloudhsm:DeleteHsm",
    "cloudhsmv2.describebackups": "cloudhsm:DescribeBackups",
    "cloudhsmv2.describeclusters": "cloudhsm:DescribeClusters",
    "cloudhsmv2.initializecluster": "cloudhsm:InitializeCluster",
    "cloudhsmv2.listtags": "cloudhsm:ListTags",
    "cloudhsmv2.modifybackupattributes": "cloudhsm:ModifyBackupAttributes",
    "cloudhsmv2.modifycluster": "cloudhsm:ModifyCluster",
    "cloudhsmv2.restorebackup": "cloudhsm:RestoreBackup",
    "cloudhsmv2.tagresource": "cloudhsm:TagResource",
    "cloudhsmv2.untagresource": "cloudhsm:UntagResource",
    "cloudsearch.buildsuggesters": "cloudsearch:BuildSuggesters",
    "cloudsearch.createdomain": "cloudsearch:CreateDomain",
    "cloudsearch.defineanalysisscheme": "cloudsearch:DefineAnalysisScheme",
    "cloudsearch.defineexpression": "cloudsearch:DefineExpression",
    "cloudsearch.defineindexfield": "cloudsearch:DefineIndexField",
    "cloudsearch.definesuggester": "cloudsearch:DefineSuggester",
    "cloudsearch.deleteanalysisscheme": "cloudsearch:DeleteAnalysisScheme",
    "cloudsearch.deletedomain": "cloudsearch:DeleteDomain",
    "cloudsearch.deleteexpression": "cloudsearch:DeleteExpression",
    "cloudsearch.deleteindexfield": "cloudsearch:DeleteIndexField",
    "cloudsearch.deletesuggester": "cloudsearch:DeleteSuggester",
    "cloudsearch.describeanalysisschemes": "cloudsearch:DescribeAnalysisSchemes",
    "cloudsearch.describeavailabilityoptions": "cloudsearch:DescribeAvailabilityOptions",
    "cloudsearch.describedomainendpointoptions": "cloudsearch:DescribeDomainEndpointOptions",
    "cloudsearch.describedomains": "cloudsearch:DescribeDomains",
    "cloudsearch.describeexpressions": "cloudsearch:DescribeExpressions",
    "cloudsearch.describeindexfields": "cloudsearch:DescribeIndexFields",
    "cloudsearch.describescalingparameters": "cloudsearch:DescribeScalingParameters",
    "cloudsearch.describeserviceaccesspolicies": "cloudsearch:DescribeServiceAccessPolicies",
    "cloudsearch.describesuggesters": "cloudsearch:DescribeSuggesters",
    "cloudsearch.indexdocuments": "cloudsearch:IndexDocuments",
    "cloudsearch.listdomainnames": "cloudsearch:ListDomainNames",
    "cloudsearch.updateavailabilityoptions": "cloudsearch:UpdateAvailabilityOptions",
    "cloudsearch.updatedomainendpointoptions": "cloudsearch:UpdateDomainEndpointOptions",
    "cloudsearch.updatescalingparameters": "cloudsearch:UpdateScalingParameters",
    "cloudsearch.updateserviceaccesspolicies": "cloudsearch:UpdateServiceAccessPolicies",
    "cloudsearchdomain.search": "cloudsearch:search",
    "cloudsearchdomain.suggest": "cloudsearch:suggest",
    "cloudsearchdomain.uploaddocuments": "cloudsearch:upload",
    "cloudtrail.addtags": "cloudtrail:AddTags",
    "cloudtrail.cancelquery": "cloudtrail:CancelQuery",
    "cloudtrail.createeventdatastore": "cloudtrail:CreateEventDataStore",
    "cloudtrail.createtrail": "cloudtrail:CreateTrail",
    "cloudtrail.deleteeventdatastore": "cloudtrail:DeleteEventDataStore",
    "cloudtrail.deletetrail": "cloudtrail:DeleteTrail",
    "cloudtrail.describequery": "cloudtrail:DescribeQuery",
    "cloudtrail.describetrails": "cloudtrail:DescribeTrails",
    "cloudtrail.geteventdatastore": "cloudtrail:GetEventDataStore",
    "cloudtrail.geteventselectors": "cloudtrail:GetEventSelectors",
    "cloudtrail.getinsightselectors": "cloudtrail:GetInsightSelectors",
    "cloudtrail.getqueryresults": "cloudtrail:GetQueryResults",
    "cloudtrail.gettrail": "cloudtrail:GetTrail",
    "cloudtrail.gettrailstatus": "cloudtrail:GetTrailStatus",
    "cloudtrail.listeventdatastores": "cloudtrail:ListEventDataStores",
    "cloudtrail.listpublickeys": "cloudtrail:ListPublicKeys",
    "cloudtrail.listqueries": "cloudtrail:ListQueries",
    "cloudtrail.listtags": "cloudtrail:ListTags",
    "cloudtrail.listtrails": "cloudtrail:ListTrails",
    "cloudtrail.lookupevents": "cloudtrail:LookupEvents",
    "cloudtrail.puteventselectors": "cloudtrail:PutEventSelectors",
    "cloudtrail.putinsightselectors": "cloudtrail:PutInsightSelectors",
    "cloudtrail.removetags": "cloudtrail:RemoveTags",
    "cloudtrail.restoreeventdatastore": "cloudtrail:RestoreEventDataStore",
    "cloudtrail.startlogging": "cloudtrail:StartLogging",
    "cloudtrail.startquery": "cloudtrail:StartQuery",
    "cloudtrail.stoplogging": "cloudtrail:StopLogging",
    "cloudtrail.updateeventdatastore": "cloudtrail:UpdateEventDataStore",
    "cloudtrail.updatetrail": "cloudtrail:UpdateTrail",
    "cloudwatch.deletealarms": "cloudwatch:DeleteAlarms",
    "cloudwatch.deleteanomalydetector": "cloudwatch:DeleteAnomalyDetector",
    "cloudwatch.deletedashboards": "cloudwatch:DeleteDashboards",
    "cloudwatch.deleteinsightrules": "cloudwatch:DeleteInsightRules",
    "cloudwatch.deletemetricstream": "cloudwatch:DeleteMetricStream",
    "cloudwatch.describealarmhistory": "cloudwatch:DescribeAlarmHistory",
    "cloudwatch.describealarms": "cloudwatch:DescribeAlarms",
    "cloudwatch.describealarmsformetric": "cloudwatch:DescribeAlarmsForMetric",
    "cloudwatch.describeanomalydetectors": "cloudwatch:DescribeAnomalyDetectors",
    "cloudwatch.describeinsightrules": "cloudwatch:DescribeInsightRules",
    "cloudwatch.disablealarmactions": "cloudwatch:DisableAlarmActions",
    "cloudwatch.disableinsightrules": "cloudwatch:DisableInsightRules",
    "cloudwatch.enablealarmactions": "cloudwatch:EnableAlarmActions",
    "cloudwatch.enableinsightrules": "cloudwatch:EnableInsightRules",
    "cloudwatch.getdashboard": "cloudwatch:GetDashboard",
    "cloudwatch.getinsightrulereport": "cloudwatch:GetInsightRuleReport",
    "cloudwatch.getmetricdata": "cloudwatch:GetMetricData",
    "cloudwatch.getmetricstatistics": "cloudwatch:GetMetricStatistics",
    "cloudwatch.getmetricstream": "cloudwatch:GetMetricStream",
    "cloudwatch.getmetricwidgetimage": "cloudwatch:GetMetricWidgetImage",
    "cloudwatch.listdashboards": "cloudwatch:ListDashboards",
    "cloudwatch.listmetrics": "cloudwatch:ListMetrics",
    "cloudwatch.listmetricstreams": "cloudwatch:ListMetricStreams",
    "cloudwatch.listtagsforresource": "cloudwatch:ListTagsForResource",
    "cloudwatch.putanomalydetector": "cloudwatch:PutAnomalyDetector",
    "cloudwatch.putcompositealarm": "cloudwatch:PutCompositeAlarm",
    "cloudwatch.putdashboard": "cloudwatch:PutDashboard",
    "cloudwatch.putinsightrule": "cloudwatch:PutInsightRule",
    "cloudwatch.putmetricalarm": "cloudwatch:PutMetricAlarm",
    "cloudwatch.putmetricdata": "cloudwatch:PutMetricData",
    "cloudwatch.putmetricstream": "cloudwatch:PutMetricStream",
    "cloudwatch.setalarmstate": "cloudwatch:SetAlarmState",
    "cloudwatch.startmetricstreams": "cloudwatch:StartMetricStreams",
    "cloudwatch.stopmetricstreams": "cloudwatch:StopMetricStreams",
    "cloudwatch.tagresource": "cloudwatch:TagResource",
    "cloudwatch.untagresource": "cloudwatch:UntagResource",
    "cloudwatchevents.activateeventsource": "events:ActivateEventSource",
    "cloudwatchevents.cancelreplay": "events:CancelReplay",
    "cloudwatchevents.createapidestination": "events:CreateApiDestination",
    "cloudwatchevents.createarchive": "events:CreateArchive",
    "cloudwatchevents.createconnection": "events:CreateConnection",
    "cloudwatchevents.createeventbus": "events:CreateEventBus",
    "cloudwatchevents.createpartnereventsource": "events:CreatePartnerEventSource",
    "cloudwatchevents.deactivateeventsource": "events:DeactivateEventSource",
    "cloudwatchevents.deauthorizeconnection": "events:DeauthorizeConnection",
    "cloudwatchevents.deleteapidestination": "events:DeleteApiDestination",
    "cloudwatchevents.deletearchive": "events:DeleteArchive",
    "cloudwatchevents.deleteconnection": "events:DeleteConnection",
    "cloudwatchevents.deleteeventbus": "events:DeleteEventBus",
    "cloudwatchevents.deletepartnereventsource": "events:DeletePartnerEventSource",
    "cloudwatchevents.deleterule": "events:DeleteRule",
    "cloudwatchevents.describeapidestination": "events:DescribeApiDestination",
    "cloudwatchevents.describearchive": "events:DescribeArchive",
    "cloudwatchevents.describeconnection": "events:DescribeConnection",
    "cloudwatchevents.describeeventbus": "events:DescribeEventBus",
    "cloudwatchevents.describeeventsource": "events:DescribeEventSource",
    "cloudwatchevents.describepartnereventsource": "events:DescribePartnerEventSource",
    "cloudwatchevents.describereplay": "events:DescribeReplay",
    "cloudwatchevents.describerule": "events:DescribeRule",
    "cloudwatchevents.disablerule": "events:DisableRule",
    "cloudwatchevents.enablerule": "events:EnableRule",
    "cloudwatchevents.listapidestinations": "events:ListApiDestinations",
    "cloudwatchevents.listarchives": "events:ListArchives",
    "cloudwatchevents.listconnections": "events:ListConnections",
    "cloudwatchevents.listeventbuses": "events:ListEventBuses",
    "cloudwatchevents.listeventsources": "events:ListEventSources",
    "cloudwatchevents.listpartnereventsourceaccounts": "events:ListPartnerEventSourceAccounts",
    "cloudwatchevents.listpartnereventsources": "events:ListPartnerEventSources",
    "cloudwatchevents.listreplays": "events:ListReplays",
    "cloudwatchevents.listrulenamesbytarget": "events:ListRuleNamesByTarget",
    "cloudwatchevents.listrules": "events:ListRules",
    "cloudwatchevents.listtagsforresource": "events:ListTagsForResource",
    "cloudwatchevents.listtargetsbyrule": "events:ListTargetsByRule",
    "cloudwatchevents.putevents": "events:PutEvents",
    "cloudwatchevents.putpartnerevents": "events:PutPartnerEvents",
    "cloudwatchevents.putpermission": "events:PutPermission",
    "cloudwatchevents.putrule": "events:PutRule",
    "cloudwatchevents.puttargets": "events:PutTargets",
    "cloudwatchevents.removepermission": "events:RemovePermission",
    "cloudwatchevents.removetargets": "events:RemoveTargets",
    "cloudwatchevents.startreplay": "events:StartReplay",
    "cloudwatchevents.tagresource": "events:TagResource",
    "cloudwatchevents.testeventpattern": "events:TestEventPattern",
    "cloudwatchevents.untagresource": "events:UntagResource",
    "cloudwatchevents.updateapidestination": "events:UpdateApiDestination",
    "cloudwatchevents.updatearchive": "events:UpdateArchive",
    "cloudwatchevents.updateconnection": "events:UpdateConnection",
    "cloudwatchlogs.associatekmskey": "logs:AssociateKmsKey",
    "cloudwatchlogs.cancelexporttask": "logs:CancelExportTask",
    "cloudwatchlogs.createexporttask": "logs:CreateExportTask",
    "cloudwatchlogs.createloggroup": "logs:CreateLogGroup",
    "cloudwatchlogs.createlogstream": "logs:CreateLogStream",
    "cloudwatchlogs.deletedestination": "logs:DeleteDestination",
    "cloudwatchlogs.deleteloggroup": "logs:DeleteLogGroup",
    "cloudwatchlogs.deletelogstream": "logs:DeleteLogStream",
    "cloudwatchlogs.deletemetricfilter": "logs:DeleteMetricFilter",
    "cloudwatchlogs.deletequerydefinition": "logs:DeleteQueryDefinition",
    "cloudwatchlogs.deleteresourcepolicy": "logs:DeleteResourcePolicy",
    "cloudwatchlogs.deleteretentionpolicy": "logs:DeleteRetentionPolicy",
    "cloudwatchlogs.deletesubscriptionfilter": "logs:DeleteSubscriptionFilter",
    "cloudwatchlogs.describedestinations": "logs:DescribeDestinations",
    "cloudwatchlogs.describeexporttasks": "logs:DescribeExportTasks",
    "cloudwatchlogs.describeloggroups": "logs:DescribeLogGroups",
    "cloudwatchlogs.describelogstreams": "logs:DescribeLogStreams",
    "cloudwatchlogs.describemetricfilters": "logs:DescribeMetricFilters",
    "cloudwatchlogs.describequeries": "logs:DescribeQueries",
    "cloudwatchlogs.describequerydefinitions": "logs:DescribeQueryDefinitions",
    "cloudwatchlogs.describeresourcepolicies": "logs:DescribeResourcePolicies",
    "cloudwatchlogs.describesubscriptionfilters": "logs:DescribeSubscriptionFilters",
    "cloudwatchlogs.disassociatekmskey": "logs:DisassociateKmsKey",
    "cloudwatchlogs.filterlogevents": "logs:FilterLogEvents",
    "cloudwatchlogs.getlogevents": "logs:GetLogEvents",
    "cloudwatchlogs.getloggroupfields": "logs:GetLogGroupFields",
    "cloudwatchlogs.getlogrecord": "logs:GetLogRecord",
    "cloudwatchlogs.getqueryresults": "logs:GetQueryResults",
    "cloudwatchlogs.listtagsloggroup": "logs:ListTagsLogGroup",
    "cloudwatchlogs.putdestination": "logs:PutDestination",
    "cloudwatchlogs.putdestinationpolicy": "logs:PutDestinationPolicy",
    "cloudwatchlogs.putlogevents": "logs:PutLogEvents",
    "cloudwatchlogs.putmetricfilter": "logs:PutMetricFilter",
    "cloudwatchlogs.putquerydefinition": "logs:PutQueryDefinition",
    "cloudwatchlogs.putresourcepolicy": "logs:PutResourcePolicy",
    "cloudwatchlogs.putretentionpolicy": "logs:PutRetentionPolicy",
    "cloudwatchlogs.putsubscriptionfilter": "logs:PutSubscriptionFilter",
    "cloudwatchlogs.startquery": "logs:StartQuery",
    "cloudwatchlogs.stopquery": "logs:StopQuery",
    "cloudwatchlogs.tagloggroup": "logs:TagLogGroup",
    "cloudwatchlogs.testmetricfilter": "logs:TestMetricFilter",
    "cloudwatchlogs.untagloggroup": "logs:UntagLogGroup",
    "codeartifact.associateexternalconnection": "codeartifact:AssociateExternalConnection",
    "codeartifact.copypackageversions": "codeartifact:CopyPackageVersions",
    "codeartifact.createdomain": "codeartifact:CreateDomain",
    "codeartifact.createrepository": "codeartifact:CreateRepository",
    "codeartifact.deletedomain": "codeartifact:DeleteDomain",
    "codeartifact.deletedomainpermissionspolicy": "codeartifact:DeleteDomainPermissionsPolicy",
    "codeartifact.deletepackageversions": "codeartifact:DeletePackageVersions",
    "codeartifact.deleterepository": "codeartifact:DeleteRepository",
    "codeartifact.deleterepositorypermissionspolicy": "codeartifact:DeleteRepositoryPermissionsPolicy",
    "codeartifact.describedomain": "codeartifact:DescribeDomain",
    "codeartifact.describepackageversion": "codeartifact:DescribePackageVersion",
    "codeartifact.describerepository": "codeartifact:DescribeRepository",
    "codeartifact.disassociateexternalconnection": "codeartifact:DisassociateExternalConnection",
    "codeartifact.disposepackageversions": "codeartifact:DisposePackageVersions",
    "codeartifact.getauthorizationtoken": "codeartifact:GetAuthorizationToken",
    "codeartifact.getdomainpermissionspolicy": "codeartifact:GetDomainPermissionsPolicy",
    "codeartifact.getpackageversionasset": "codeartifact:GetPackageVersionAsset",
    "codeartifact.getpackageversionreadme": "codeartifact:GetPackageVersionReadme",
    "codeartifact.getrepositoryendpoint": "codeartifact:GetRepositoryEndpoint",
    "codeartifact.getrepositorypermissionspolicy": "codeartifact:GetRepositoryPermissionsPolicy",
    "codeartifact.listdomains": "codeartifact:ListDomains",
    "codeartifact.listpackages": "codeartifact:ListPackages",
    "codeartifact.listpackageversionassets": "codeartifact:ListPackageVersionAssets",
    "codeartifact.listpackageversiondependencies": "codeartifact:ListPackageVersionDependencies",
    "codeartifact.listpackageversions": "codeartifact:ListPackageVersions",
    "codeartifact.listrepositories": "codeartifact:ListRepositories",
    "codeartifact.listrepositoriesindomain": "codeartifact:ListRepositoriesInDomain",
    "codeartifact.listtagsforresource": "codeartifact:ListTagsForResource",
    "codeartifact.putdomainpermissionspolicy": "codeartifact:PutDomainPermissionsPolicy",
    "codeartifact.putrepositorypermissionspolicy": "codeartifact:PutRepositoryPermissionsPolicy",
    "codeartifact.tagresource": "codeartifact:TagResource",
    "codeartifact.untagresource": "codeartifact:UntagResource",
    "codeartifact.updatepackageversionsstatus": "codeartifact:UpdatePackageVersionsStatus",
    "codeartifact.updaterepository": "codeartifact:UpdateRepository",
    "codebuild.batchdeletebuilds": "codebuild:BatchDeleteBuilds",
    "codebuild.batchgetbuildbatches": "codebuild:BatchGetBuildBatches",
    "codebuild.batchgetbuilds": "codebuild:BatchGetBuilds",
    "codebuild.batchgetprojects": "codebuild:BatchGetProjects",
    "codebuild.batchgetreportgroups": "codebuild:BatchGetReportGroups",
    "codebuild.batchgetreports": "codebuild:BatchGetReports",
    "codebuild.createproject": "codebuild:CreateProject",
    "codebuild.createreportgroup": "codebuild:CreateReportGroup",
    "codebuild.createwebhook": "codebuild:CreateWebhook",
    "codebuild.deletebuildbatch": "codebuild:DeleteBuildBatch",
    "codebuild.deleteproject": "codebuild:DeleteProject",
    "codebuild.deletereport": "codebuild:DeleteReport",
    "codebuild.deletereportgroup": "codebuild:DeleteReportGroup",
    "codebuild.deleteresourcepolicy": "codebuild:DeleteResourcePolicy",
    "codebuild.deletesourcecredentials": "codebuild:DeleteSourceCredentials",
    "codebuild.deletewebhook": "codebuild:DeleteWebhook",
    "codebuild.describecodecoverages": "codebuild:DescribeCodeCoverages",
    "codebuild.describetestcases": "codebuild:DescribeTestCases",
    "codebuild.getreportgrouptrend": "codebuild:GetReportGroupTrend",
    "codebuild.getresourcepolicy": "codebuild:GetResourcePolicy",
    "codebuild.importsourcecredentials": "codebuild:ImportSourceCredentials",
    "codebuild.invalidateprojectcache": "codebuild:InvalidateProjectCache",
    "codebuild.listbuildbatches": "codebuild:ListBuildBatches",
    "codebuild.listbuildbatchesforproject": "codebuild:ListBuildBatchesForProject",
    "codebuild.listbuilds": "codebuild:ListBuilds",
    "codebuild.listbuildsforproject": "codebuild:ListBuildsForProject",
    "codebuild.listcuratedenvironmentimages": "codebuild:ListCuratedEnvironmentImages",
    "codebuild.listprojects": "codebuild:ListProjects",
    "codebuild.listreportgroups": "codebuild:ListReportGroups",
    "codebuild.listreports": "codebuild:ListReports",
    "codebuild.listreportsforreportgroup": "codebuild:ListReportsForReportGroup",
    "codebuild.listsharedprojects": "codebuild:ListSharedProjects",
    "codebuild.listsharedreportgroups": "codebuild:ListSharedReportGroups",
    "codebuild.listsourcecredentials": "codebuild:ListSourceCredentials",
    "codebuild.putresourcepolicy": "codebuild:PutResourcePolicy",
    "codebuild.retrybuild": "codebuild:RetryBuild",
    "codebuild.retrybuildbatch": "codebuild:RetryBuildBatch",
    "codebuild.startbuild": "codebuild:StartBuild",
    "codebuild.startbuildbatch": "codebuild:StartBuildBatch",
    "codebuild.stopbuild": "codebuild:StopBuild",
    "codebuild.stopbuildbatch": "codebuild:StopBuildBatch",
    "codebuild.updateproject": "codebuild:UpdateProject",
    "codebuild.updateprojectvisibility": "codebuild:UpdateProjectVisibility",
    "codebuild.updatereportgroup": "codebuild:UpdateReportGroup",
    "codebuild.updatewebhook": "codebuild:UpdateWebhook",
    "codecommit.associateapprovalruletemplatewithrepository": "codecommit:AssociateApprovalRuleTemplateWithRepository",
    "codecommit.batchassociateapprovalruletemplatewithrepositories": "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
    "codecommit.batchdescribemergeconflicts": "codecommit:BatchDescribeMergeConflicts",
    "codecommit.batchdisassociateapprovalruletemplatefromrepositories": "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
    "codecommit.batchgetcommits": "codecommit:BatchGetCommits",
    "codecommit.batchgetrepositories": "codecommit:BatchGetRepositories",
    "codecommit.createapprovalruletemplate": "codecommit:CreateApprovalRuleTemplate",
    "codecommit.createbranch": "codecommit:CreateBranch",
    "codecommit.createcommit": "codecommit:CreateCommit",
    "codecommit.createpullrequest": "codecommit:CreatePullRequest",
    "codecommit.createpullrequestapprovalrule": "codecommit:CreatePullRequestApprovalRule",
    "codecommit.createrepository": "codecommit:CreateRepository",
    "codecommit.createunreferencedmergecommit": "codecommit:CreateUnreferencedMergeCommit",
    "codecommit.deleteapprovalruletemplate": "codecommit:DeleteApprovalRuleTemplate",
    "codecommit.deletebranch": "codecommit:DeleteBranch",
    "codecommit.deletecommentcontent": "codecommit:DeleteCommentContent",
    "codecommit.deletefile": "codecommit:DeleteFile",
    "codecommit.deletepullrequestapprovalrule": "codecommit:DeletePullRequestApprovalRule",
    "codecommit.deleterepository": "codecommit:DeleteRepository",
    "codecommit.describemergeconflicts": "codecommit:DescribeMergeConflicts",
    "codecommit.describepullrequestevents": "codecommit:DescribePullRequestEvents",
    "codecommit.disassociateapprovalruletemplatefromrepository": "codecommit:DisassociateApprovalRuleTemplateFromRepository",
    "codecommit.evaluatepullrequestapprovalrules": "codecommit:EvaluatePullRequestApprovalRules",
    "codecommit.getapprovalruletemplate": "codecommit:GetApprovalRuleTemplate",
    "codecommit.getblob": "codecommit:GetBlob",
    "codecommit.getbranch": "codecommit:GetBranch",
    "codecommit.getcomment": "codecommit:GetComment",
    "codecommit.getcommentreactions": "codecommit:GetCommentReactions",
    "codecommit.getcommentsforcomparedcommit": "codecommit:GetCommentsForComparedCommit",
    "codecommit.getcommentsforpullrequest": "codecommit:GetCommentsForPullRequest",
    "codecommit.getcommit": "codecommit:GetCommit",
    "codecommit.getdifferences": "codecommit:GetDifferences",
    "codecommit.getfile": "codecommit:GetFile",
    "codecommit.getfolder": "codecommit:GetFolder",
    "codecommit.getmergecommit": "codecommit:GetMergeCommit",
    "codecommit.getmergeconflicts": "codecommit:GetMergeConflicts",
    "codecommit.getmergeoptions": "codecommit:GetMergeOptions",
    "codecommit.getpullrequest": "codecommit:GetPullRequest",
    "codecommit.getpullrequestapprovalstates": "codecommit:GetPullRequestApprovalStates",
    "codecommit.getpullrequestoverridestate": "codecommit:GetPullRequestOverrideState",
    "codecommit.getrepository": "codecommit:GetRepository",
    "codecommit.getrepositorytriggers": "codecommit:GetRepositoryTriggers",
    "codecommit.listapprovalruletemplates": "codecommit:ListApprovalRuleTemplates",
    "codecommit.listassociatedapprovalruletemplatesforrepository": "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
    "codecommit.listbranches": "codecommit:ListBranches",
    "codecommit.listpullrequests": "codecommit:ListPullRequests",
    "codecommit.listrepositories": "codecommit:ListRepositories",
    "codecommit.listrepositoriesforapprovalruletemplate": "codecommit:ListRepositoriesForApprovalRuleTemplate",
    "codecommit.listtagsforresource": "codecommit:ListTagsForResource",
    "codecommit.mergebranchesbyfastforward": "codecommit:MergeBranchesByFastForward",
    "codecommit.mergebranchesbysquash": "codecommit:MergeBranchesBySquash",
    "codecommit.mergebranchesbythreeway": "codecommit:MergeBranchesByThreeWay",
    "codecommit.mergepullrequestbyfastforward": "codecommit:MergePullRequestByFastForward",
    "codecommit.mergepullrequestbysquash": "codecommit:MergePullRequestBySquash",
    "codecommit.mergepullrequestbythreeway": "codecommit:MergePullRequestByThreeWay",
    "codecommit.overridepullrequestapprovalrules": "codecommit:OverridePullRequestApprovalRules",
    "codecommit.postcommentforcomparedcommit": "codecommit:PostCommentForComparedCommit",
    "codecommit.postcommentforpullrequest": "codecommit:PostCommentForPullRequest",
    "codecommit.postcommentreply": "codecommit:PostCommentReply",
    "codecommit.putcommentreaction": "codecommit:PutCommentReaction",
    "codecommit.putfile": "codecommit:PutFile",
    "codecommit.putrepositorytriggers": "codecommit:PutRepositoryTriggers",
    "codecommit.tagresource": "codecommit:TagResource",
    "codecommit.testrepositorytriggers": "codecommit:TestRepositoryTriggers",
    "codecommit.untagresource": "codecommit:UntagResource",
    "codecommit.updateapprovalruletemplatecontent": "codecommit:UpdateApprovalRuleTemplateContent",
    "codecommit.updateapprovalruletemplatedescription": "codecommit:UpdateApprovalRuleTemplateDescription",
    "codecommit.updateapprovalruletemplatename": "codecommit:UpdateApprovalRuleTemplateName",
    "codecommit.updatecomment": "codecommit:UpdateComment",
    "codecommit.updatedefaultbranch": "codecommit:UpdateDefaultBranch",
    "codecommit.updatepullrequestapprovalrulecontent": "codecommit:UpdatePullRequestApprovalRuleContent",
    "codecommit.updatepullrequestapprovalstate": "codecommit:UpdatePullRequestApprovalState",
    "codecommit.updatepullrequestdescription": "codecommit:UpdatePullRequestDescription",
    "codecommit.updatepullrequeststatus": "codecommit:UpdatePullRequestStatus",
    "codecommit.updatepullrequesttitle": "codecommit:UpdatePullRequestTitle",
    "codecommit.updaterepositorydescription": "codecommit:UpdateRepositoryDescription",
    "codecommit.updaterepositoryname": "codecommit:UpdateRepositoryName",
    "codedeploy.addtagstoonpremisesinstances": "codedeploy:AddTagsToOnPremisesInstances",
    "codedeploy.batchgetapplicationrevisions": "codedeploy:BatchGetApplicationRevisions",
    "codedeploy.batchgetapplications": "codedeploy:BatchGetApplications",
    "codedeploy.batchgetdeploymentgroups": "codedeploy:BatchGetDeploymentGroups",
    "codedeploy.batchgetdeploymentinstances": "codedeploy:BatchGetDeploymentInstances",
    "codedeploy.batchgetdeployments": "codedeploy:BatchGetDeployments",
    "codedeploy.batchgetdeploymenttargets": "codedeploy:BatchGetDeploymentTargets",
    "codedeploy.batchgetonpremisesinstances": "codedeploy:BatchGetOnPremisesInstances",
    "codedeploy.continuedeployment": "codedeploy:ContinueDeployment",
    "codedeploy.createapplication": "codedeploy:CreateApplication",
    "codedeploy.createdeployment": "codedeploy:CreateDeployment",
    "codedeploy.createdeploymentconfig": "codedeploy:CreateDeploymentConfig",
    "codedeploy.createdeploymentgroup": "codedeploy:CreateDeploymentGroup",
    "codedeploy.deleteapplication": "codedeploy:DeleteApplication",
    "codedeploy.deletedeploymentconfig": "codedeploy:DeleteDeploymentConfig",
    "codedeploy.deletedeploymentgroup": "codedeploy:DeleteDeploymentGroup",
    "codedeploy.deletegithubaccounttoken": "codedeploy:DeleteGitHubAccountToken",
    "codedeploy.deleteresourcesbyexternalid": "codedeploy:DeleteResourcesByExternalId",
    "codedeploy.deregisteronpremisesinstance": "codedeploy:DeregisterOnPremisesInstance",
    "codedeploy.getapplication": "codedeploy:GetApplication",
    "codedeploy.getapplicationrevision": "codedeploy:GetApplicationRevision",
    "codedeploy.getdeployment": "codedeploy:GetDeployment",
    "codedeploy.getdeploymentconfig": "codedeploy:GetDeploymentConfig",
    "codedeploy.getdeploymentgroup": "codedeploy:GetDeploymentGroup",
    "codedeploy.getdeploymentinstance": "codedeploy:GetDeploymentInstance",
    "codedeploy.getdeploymenttarget": "codedeploy:GetDeploymentTarget",
    "codedeploy.getonpremisesinstance": "codedeploy:GetOnPremisesInstance",
    "codedeploy.listapplicationrevisions": "codedeploy:ListApplicationRevisions",
    "codedeploy.listapplications": "codedeploy:ListApplications",
    "codedeploy.listdeploymentconfigs": "codedeploy:ListDeploymentConfigs",
    "codedeploy.listdeploymentgroups": "codedeploy:ListDeploymentGroups",
    "codedeploy.listdeploymentinstances": "codedeploy:ListDeploymentInstances",
    "codedeploy.listdeployments": "codedeploy:ListDeployments",
    "codedeploy.listdeploymenttargets": "codedeploy:ListDeploymentTargets",
    "codedeploy.listgithubaccounttokennames": "codedeploy:ListGitHubAccountTokenNames",
    "codedeploy.listonpremisesinstances": "codedeploy:ListOnPremisesInstances",
    "codedeploy.listtagsforresource": "codedeploy:ListTagsForResource",
    "codedeploy.putlifecycleeventhookexecutionstatus": "codedeploy:PutLifecycleEventHookExecutionStatus",
    "codedeploy.registerapplicationrevision": "codedeploy:RegisterApplicationRevision",
    "codedeploy.registeronpremisesinstance": "codedeploy:RegisterOnPremisesInstance",
    "codedeploy.removetagsfromonpremisesinstances": "codedeploy:RemoveTagsFromOnPremisesInstances",
    "codedeploy.skipwaittimeforinstancetermination": "codedeploy:SkipWaitTimeForInstanceTermination",
    "codedeploy.stopdeployment": "codedeploy:StopDeployment",
    "codedeploy.tagresource": "codedeploy:TagResource",
    "codedeploy.untagresource": "codedeploy:UntagResource",
    "codedeploy.updateapplication": "codedeploy:UpdateApplication",
    "codedeploy.updatedeploymentgroup": "codedeploy:UpdateDeploymentGroup",
    "codeguruprofiler.addnotificationchannels": "codeguru-profiler:AddNotificationChannels",
    "codeguruprofiler.batchgetframemetricdata": "codeguru-profiler:BatchGetFrameMetricData",
    "codeguruprofiler.configureagent": "codeguru-profiler:ConfigureAgent",
    "codeguruprofiler.createprofilinggroup": "codeguru-profiler:CreateProfilingGroup",
    "codeguruprofiler.deleteprofilinggroup": "codeguru-profiler:DeleteProfilingGroup",
    "codeguruprofiler.describeprofilinggroup": "codeguru-profiler:DescribeProfilingGroup",
    "codeguruprofiler.getfindingsreportaccountsummary": "codeguru-profiler:GetFindingsReportAccountSummary",
    "codeguruprofiler.getnotificationconfiguration": "codeguru-profiler:GetNotificationConfiguration",
    "codeguruprofiler.getpolicy": "codeguru-profiler:GetPolicy",
    "codeguruprofiler.getprofile": "codeguru-profiler:GetProfile",
    "codeguruprofiler.getrecommendations": "codeguru-profiler:GetRecommendations",
    "codeguruprofiler.listfindingsreports": "codeguru-profiler:ListFindingsReports",
    "codeguruprofiler.listprofiletimes": "codeguru-profiler:ListProfileTimes",
    "codeguruprofiler.listprofilinggroups": "codeguru-profiler:ListProfilingGroups",
    "codeguruprofiler.listtagsforresource": "codeguru-profiler:ListTagsForResource",
    "codeguruprofiler.postagentprofile": "codeguru-profiler:PostAgentProfile",
    "codeguruprofiler.putpermission": "codeguru-profiler:PutPermission",
    "codeguruprofiler.removenotificationchannel": "codeguru-profiler:RemoveNotificationChannel",
    "codeguruprofiler.removepermission": "codeguru-profiler:RemovePermission",
    "codeguruprofiler.submitfeedback": "codeguru-profiler:SubmitFeedback",
    "codeguruprofiler.tagresource": "codeguru-profiler:TagResource",
    "codeguruprofiler.untagresource": "codeguru-profiler:UntagResource",
    "codeguruprofiler.updateprofilinggroup": "codeguru-profiler:UpdateProfilingGroup",
    "codegurureviewer.associaterepository": "codeguru-reviewer:AssociateRepository",
    "codegurureviewer.createcodereview": "codeguru-reviewer:CreateCodeReview",
    "codegurureviewer.describecodereview": "codeguru-reviewer:DescribeCodeReview",
    "codegurureviewer.describerecommendationfeedback": "codeguru-reviewer:DescribeRecommendationFeedback",
    "codegurureviewer.describerepositoryassociation": "codeguru-reviewer:DescribeRepositoryAssociation",
    "codegurureviewer.disassociaterepository": "codeguru-reviewer:DisassociateRepository",
    "codegurureviewer.listcodereviews": "codeguru-reviewer:ListCodeReviews",
    "codegurureviewer.listrecommendationfeedback": "codeguru-reviewer:ListRecommendationFeedback",
    "codegurureviewer.listrecommendations": "codeguru-reviewer:ListRecommendations",
    "codegurureviewer.listrepositoryassociations": "codeguru-reviewer:ListRepositoryAssociations",
    "codegurureviewer.listtagsforresource": "codeguru-reviewer:ListTagsForResource",
    "codegurureviewer.putrecommendationfeedback": "codeguru-reviewer:PutRecommendationFeedback",
    "codegurureviewer.tagresource": "codeguru-reviewer:TagResource",
    "codegurureviewer.untagresource": "codeguru-reviewer:UnTagResource",
    "codepipeline.acknowledgejob": "codepipeline:AcknowledgeJob",
    "codepipeline.acknowledgethirdpartyjob": "codepipeline:AcknowledgeThirdPartyJob",
    "codepipeline.createcustomactiontype": "codepipeline:CreateCustomActionType",
    "codepipeline.createpipeline": "codepipeline:CreatePipeline",
    "codepipeline.deletecustomactiontype": "codepipeline:DeleteCustomActionType",
    "codepipeline.deletepipeline": "codepipeline:DeletePipeline",
    "codepipeline.deletewebhook": "codepipeline:DeleteWebhook",
    "codepipeline.deregisterwebhookwiththirdparty": "codepipeline:DeregisterWebhookWithThirdParty",
    "codepipeline.disablestagetransition": "codepipeline:DisableStageTransition",
    "codepipeline.enablestagetransition": "codepipeline:EnableStageTransition",
    "codepipeline.getactiontype": "codepipeline:GetActionType",
    "codepipeline.getjobdetails": "codepipeline:GetJobDetails",
    "codepipeline.getpipeline": "codepipeline:GetPipeline",
    "codepipeline.getpipelineexecution": "codepipeline:GetPipelineExecution",
    "codepipeline.getpipelinestate": "codepipeline:GetPipelineState",
    "codepipeline.getthirdpartyjobdetails": "codepipeline:GetThirdPartyJobDetails",
    "codepipeline.listactionexecutions": "codepipeline:ListActionExecutions",
    "codepipeline.listactiontypes": "codepipeline:ListActionTypes",
    "codepipeline.listpipelineexecutions": "codepipeline:ListPipelineExecutions",
    "codepipeline.listpipelines": "codepipeline:ListPipelines",
    "codepipeline.listtagsforresource": "codepipeline:ListTagsForResource",
    "codepipeline.listwebhooks": "codepipeline:ListWebhooks",
    "codepipeline.pollforjobs": "codepipeline:PollForJobs",
    "codepipeline.pollforthirdpartyjobs": "codepipeline:PollForThirdPartyJobs",
    "codepipeline.putactionrevision": "codepipeline:PutActionRevision",
    "codepipeline.putapprovalresult": "codepipeline:PutApprovalResult",
    "codepipeline.putjobfailureresult": "codepipeline:PutJobFailureResult",
    "codepipeline.putjobsuccessresult": "codepipeline:PutJobSuccessResult",
    "codepipeline.putthirdpartyjobfailureresult": "codepipeline:PutThirdPartyJobFailureResult",
    "codepipeline.putthirdpartyjobsuccessresult": "codepipeline:PutThirdPartyJobSuccessResult",
    "codepipeline.putwebhook": "codepipeline:PutWebhook",
    "codepipeline.registerwebhookwiththirdparty": "codepipeline:RegisterWebhookWithThirdParty",
    "codepipeline.retrystageexecution": "codepipeline:RetryStageExecution",
    "codepipeline.startpipelineexecution": "codepipeline:StartPipelineExecution",
    "codepipeline.stoppipelineexecution": "codepipeline:StopPipelineExecution",
    "codepipeline.tagresource": "codepipeline:TagResource",
    "codepipeline.untagresource": "codepipeline:UntagResource",
    "codepipeline.updateactiontype": "codepipeline:UpdateActionType",
    "codepipeline.updatepipeline": "codepipeline:UpdatePipeline",
    "codestar.associateteammember": "codestar:AssociateTeamMember",
    "codestar.createproject": "codestar:CreateProject",
    "codestar.createuserprofile": "codestar:CreateUserProfile",
    "codestar.deleteproject": "codestar:DeleteProject",
    "codestar.deleteuserprofile": "codestar:DeleteUserProfile",
    "codestar.describeproject": "codestar:DescribeProject",
    "codestar.describeuserprofile": "codestar:DescribeUserProfile",
    "codestar.disassociateteammember": "codestar:DisassociateTeamMember",
    "codestar.listprojects": "codestar:ListProjects",
    "codestar.listresources": "codestar:ListResources",
    "codestar.listtagsforproject": "codestar:ListTagsForProject",
    "codestar.listteammembers": "codestar:ListTeamMembers",
    "codestar.listuserprofiles": "codestar:ListUserProfiles",
    "codestar.tagproject": "codestar:TagProject",
    "codestar.untagproject": "codestar:UntagProject",
    "codestar.updateproject": "codestar:UpdateProject",
    "codestar.updateteammember": "codestar:UpdateTeamMember",
    "codestar.updateuserprofile": "codestar:UpdateUserProfile",
    "codestarconnections.createconnection": "codestar-connections:CreateConnection",
    "codestarconnections.createhost": "codestar-connections:CreateHost",
    "codestarconnections.deleteconnection": "codestar-connections:DeleteConnection",
    "codestarconnections.deletehost": "codestar-connections:DeleteHost",
    "codestarconnections.getconnection": "codestar-connections:GetConnection",
    "codestarconnections.gethost": "codestar-connections:GetHost",
    "codestarconnections.listconnections": "codestar-connections:ListConnections",
    "codestarconnections.listhosts": "codestar-connections:ListHosts",
    "codestarconnections.listtagsforresource": "codestar-connections:ListTagsForResource",
    "codestarconnections.tagresource": "codestar-connections:TagResource",
    "codestarconnections.untagresource": "codestar-connections:UntagResource",
    "codestarconnections.updatehost": "codestar-connections:UpdateHost",
    "codestarnotifications.createnotificationrule": "codestar-notifications:CreateNotificationRule",
    "codestarnotifications.deletenotificationrule": "codestar-notifications:DeleteNotificationRule",
    "codestarnotifications.deletetarget": "codestar-notifications:DeleteTarget",
    "codestarnotifications.describenotificationrule": "codestar-notifications:DescribeNotificationRule",
    "codestarnotifications.listeventtypes": "codestar-notifications:ListEventTypes",
    "codestarnotifications.listnotificationrules": "codestar-notifications:ListNotificationRules",
    "codestarnotifications.listtagsforresource": "codestar-notifications:ListTagsForResource",
    "codestarnotifications.listtargets": "codestar-notifications:ListTargets",
    "codestarnotifications.subscribe": "codestar-notifications:Subscribe",
    "codestarnotifications.tagresource": "codestar-notifications:TagResource",
    "codestarnotifications.unsubscribe": "codestar-notifications:Unsubscribe",
    "codestarnotifications.untagresource": "codestar-notifications:UntagResource",
    "codestarnotifications.updatenotificationrule": "codestar-notifications:UpdateNotificationRule",
    "cognitoidentity.createidentitypool": "cognito-identity:CreateIdentityPool",
    "cognitoidentity.deleteidentities": "cognito-identity:DeleteIdentities",
    "cognitoidentity.deleteidentitypool": "cognito-identity:DeleteIdentityPool",
    "cognitoidentity.describeidentity": "cognito-identity:DescribeIdentity",
    "cognitoidentity.describeidentitypool": "cognito-identity:DescribeIdentityPool",
    "cognitoidentity.getcredentialsforidentity": "cognito-identity:GetCredentialsForIdentity",
    "cognitoidentity.getid": "cognito-identity:GetId",
    "cognitoidentity.getidentitypoolroles": "cognito-identity:GetIdentityPoolRoles",
    "cognitoidentity.getopenidtoken": "cognito-identity:GetOpenIdToken",
    "cognitoidentity.getopenidtokenfordeveloperidentity": "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
    "cognitoidentity.getprincipaltagattributemap": "cognito-identity:GetPrincipalTagAttributeMap",
    "cognitoidentity.listidentities": "cognito-identity:ListIdentities",
    "cognitoidentity.listidentitypools": "cognito-identity:ListIdentityPools",
    "cognitoidentity.listtagsforresource": "cognito-identity:ListTagsForResource",
    "cognitoidentity.lookupdeveloperidentity": "cognito-identity:LookupDeveloperIdentity",
    "cognitoidentity.mergedeveloperidentities": "cognito-identity:MergeDeveloperIdentities",
    "cognitoidentity.setidentitypoolroles": "cognito-identity:SetIdentityPoolRoles",
    "cognitoidentity.setprincipaltagattributemap": "cognito-identity:SetPrincipalTagAttributeMap",
    "cognitoidentity.tagresource": "cognito-identity:TagResource",
    "cognitoidentity.unlinkdeveloperidentity": "cognito-identity:UnlinkDeveloperIdentity",
    "cognitoidentity.unlinkidentity": "cognito-identity:UnlinkIdentity",
    "cognitoidentity.untagresource": "cognito-identity:UntagResource",
    "cognitoidentity.updateidentitypool": "cognito-identity:UpdateIdentityPool",
    "cognitoidentityserviceprovider.addcustomattributes": "cognito-idp:AddCustomAttributes",
    "cognitoidentityserviceprovider.adminaddusertogroup": "cognito-idp:AdminAddUserToGroup",
    "cognitoidentityserviceprovider.adminconfirmsignup": "cognito-idp:AdminConfirmSignUp",
    "cognitoidentityserviceprovider.admincreateuser": "cognito-idp:AdminCreateUser",
    "cognitoidentityserviceprovider.admindeleteuser": "cognito-idp:AdminDeleteUser",
    "cognitoidentityserviceprovider.admindeleteuserattributes": "cognito-idp:AdminDeleteUserAttributes",
    "cognitoidentityserviceprovider.admindisableproviderforuser": "cognito-idp:AdminDisableProviderForUser",
    "cognitoidentityserviceprovider.admindisableuser": "cognito-idp:AdminDisableUser",
    "cognitoidentityserviceprovider.adminenableuser": "cognito-idp:AdminEnableUser",
    "cognitoidentityserviceprovider.adminforgetdevice": "cognito-idp:AdminForgetDevice",
    "cognitoidentityserviceprovider.admingetdevice": "cognito-idp:AdminGetDevice",
    "cognitoidentityserviceprovider.admingetuser": "cognito-idp:AdminGetUser",
    "cognitoidentityserviceprovider.admininitiateauth": "cognito-idp:AdminInitiateAuth",
    "cognitoidentityserviceprovider.adminlinkproviderforuser": "cognito-idp:AdminLinkProviderForUser",
    "cognitoidentityserviceprovider.adminlistdevices": "cognito-idp:AdminListDevices",
    "cognitoidentityserviceprovider.adminlistgroupsforuser": "cognito-idp:AdminListGroupsForUser",
    "cognitoidentityserviceprovider.adminlistuserauthevents": "cognito-idp:AdminListUserAuthEvents",
    "cognitoidentityserviceprovider.adminremoveuserfromgroup": "cognito-idp:AdminRemoveUserFromGroup",
    "cognitoidentityserviceprovider.adminresetuserpassword": "cognito-idp:AdminResetUserPassword",
    "cognitoidentityserviceprovider.adminrespondtoauthchallenge": "cognito-idp:AdminRespondToAuthChallenge",
    "cognitoidentityserviceprovider.adminsetusermfapreference": "cognito-idp:AdminSetUserMFAPreference",
    "cognitoidentityserviceprovider.adminsetuserpassword": "cognito-idp:AdminSetUserPassword",
    "cognitoidentityserviceprovider.adminsetusersettings": "cognito-idp:AdminSetUserSettings",
    "cognitoidentityserviceprovider.adminupdateautheventfeedback": "cognito-idp:AdminUpdateAuthEventFeedback",
    "cognitoidentityserviceprovider.adminupdatedevicestatus": "cognito-idp:AdminUpdateDeviceStatus",
    "cognitoidentityserviceprovider.adminupdateuserattributes": "cognito-idp:AdminUpdateUserAttributes",
    "cognitoidentityserviceprovider.adminuserglobalsignout": "cognito-idp:AdminUserGlobalSignOut",
    "cognitoidentityserviceprovider.associatesoftwaretoken": "cognito-idp:AssociateSoftwareToken",
    "cognitoidentityserviceprovider.changepassword": "cognito-idp:ChangePassword",
    "cognitoidentityserviceprovider.confirmdevice": "cognito-idp:ConfirmDevice",
    "cognitoidentityserviceprovider.confirmforgotpassword": "cognito-idp:ConfirmForgotPassword",
    "cognitoidentityserviceprovider.confirmsignup": "cognito-idp:ConfirmSignUp",
    "cognitoidentityserviceprovider.creategroup": "cognito-idp:CreateGroup",
    "cognitoidentityserviceprovider.createidentityprovider": "cognito-idp:CreateIdentityProvider",
    "cognitoidentityserviceprovider.createresourceserver": "cognito-idp:CreateResourceServer",
    "cognitoidentityserviceprovider.createuserimportjob": "cognito-idp:CreateUserImportJob",
    "cognitoidentityserviceprovider.createuserpool": "cognito-idp:CreateUserPool",
    "cognitoidentityserviceprovider.createuserpoolclient": "cognito-idp:CreateUserPoolClient",
    "cognitoidentityserviceprovider.createuserpooldomain": "cognito-idp:CreateUserPoolDomain",
    "cognitoidentityserviceprovider.deletegroup": "cognito-idp:DeleteGroup",
    "cognitoidentityserviceprovider.deleteidentityprovider": "cognito-idp:DeleteIdentityProvider",
    "cognitoidentityserviceprovider.deleteresourceserver": "cognito-idp:DeleteResourceServer",
    "cognitoidentityserviceprovider.deleteuser": "cognito-idp:DeleteUser",
    "cognitoidentityserviceprovider.deleteuserattributes": "cognito-idp:DeleteUserAttributes",
    "cognitoidentityserviceprovider.deleteuserpool": "cognito-idp:DeleteUserPool",
    "cognitoidentityserviceprovider.deleteuserpoolclient": "cognito-idp:DeleteUserPoolClient",
    "cognitoidentityserviceprovider.deleteuserpooldomain": "cognito-idp:DeleteUserPoolDomain",
    "cognitoidentityserviceprovider.describeidentityprovider": "cognito-idp:DescribeIdentityProvider",
    "cognitoidentityserviceprovider.describeresourceserver": "cognito-idp:DescribeResourceServer",
    "cognitoidentityserviceprovider.describeriskconfiguration": "cognito-idp:DescribeRiskConfiguration",
    "cognitoidentityserviceprovider.describeuserimportjob": "cognito-idp:DescribeUserImportJob",
    "cognitoidentityserviceprovider.describeuserpool": "cognito-idp:DescribeUserPool",
    "cognitoidentityserviceprovider.describeuserpoolclient": "cognito-idp:DescribeUserPoolClient",
    "cognitoidentityserviceprovider.describeuserpooldomain": "cognito-idp:DescribeUserPoolDomain",
    "cognitoidentityserviceprovider.forgetdevice": "cognito-idp:ForgetDevice",
    "cognitoidentityserviceprovider.forgotpassword": "cognito-idp:ForgotPassword",
    "cognitoidentityserviceprovider.getcsvheader": "cognito-idp:GetCSVHeader",
    "cognitoidentityserviceprovider.getdevice": "cognito-idp:GetDevice",
    "cognitoidentityserviceprovider.getgroup": "cognito-idp:GetGroup",
    "cognitoidentityserviceprovider.getidentityproviderbyidentifier": "cognito-idp:GetIdentityProviderByIdentifier",
    "cognitoidentityserviceprovider.getsigningcertificate": "cognito-idp:GetSigningCertificate",
    "cognitoidentityserviceprovider.getuicustomization": "cognito-idp:GetUICustomization",
    "cognitoidentityserviceprovider.getuser": "cognito-idp:GetUser",
    "cognitoidentityserviceprovider.getuserattributeverificationcode": "cognito-idp:GetUserAttributeVerificationCode",
    "cognitoidentityserviceprovider.getuserpoolmfaconfig": "cognito-idp:GetUserPoolMfaConfig",
    "cognitoidentityserviceprovider.globalsignout": "cognito-idp:GlobalSignOut",
    "cognitoidentityserviceprovider.initiateauth": "cognito-idp:InitiateAuth",
    "cognitoidentityserviceprovider.listdevices": "cognito-idp:ListDevices",
    "cognitoidentityserviceprovider.listgroups": "cognito-idp:ListGroups",
    "cognitoidentityserviceprovider.listidentityproviders": "cognito-idp:ListIdentityProviders",
    "cognitoidentityserviceprovider.listresourceservers": "cognito-idp:ListResourceServers",
    "cognitoidentityserviceprovider.listtagsforresource": "cognito-idp:ListTagsForResource",
    "cognitoidentityserviceprovider.listuserimportjobs": "cognito-idp:ListUserImportJobs",
    "cognitoidentityserviceprovider.listuserpoolclients": "cognito-idp:ListUserPoolClients",
    "cognitoidentityserviceprovider.listuserpools": "cognito-idp:ListUserPools",
    "cognitoidentityserviceprovider.listusers": "cognito-idp:ListUsers",
    "cognitoidentityserviceprovider.listusersingroup": "cognito-idp:ListUsersInGroup",
    "cognitoidentityserviceprovider.resendconfirmationcode": "cognito-idp:ResendConfirmationCode",
    "cognitoidentityserviceprovider.respondtoauthchallenge": "cognito-idp:RespondToAuthChallenge",
    "cognitoidentityserviceprovider.revoketoken": "cognito-idp:RevokeToken",
    "cognitoidentityserviceprovider.setriskconfiguration": "cognito-idp:SetRiskConfiguration",
    "cognitoidentityserviceprovider.setuicustomization": "cognito-idp:SetUICustomization",
    "cognitoidentityserviceprovider.setusermfapreference": "cognito-idp:SetUserMFAPreference",
    "cognitoidentityserviceprovider.setuserpoolmfaconfig": "cognito-idp:SetUserPoolMfaConfig",
    "cognitoidentityserviceprovider.setusersettings": "cognito-idp:SetUserSettings",
    "cognitoidentityserviceprovider.signup": "cognito-idp:SignUp",
    "cognitoidentityserviceprovider.startuserimportjob": "cognito-idp:StartUserImportJob",
    "cognitoidentityserviceprovider.stopuserimportjob": "cognito-idp:StopUserImportJob",
    "cognitoidentityserviceprovider.tagresource": "cognito-idp:TagResource",
    "cognitoidentityserviceprovider.untagresource": "cognito-idp:UntagResource",
    "cognitoidentityserviceprovider.updateautheventfeedback": "cognito-idp:UpdateAuthEventFeedback",
    "cognitoidentityserviceprovider.updatedevicestatus": "cognito-idp:UpdateDeviceStatus",
    "cognitoidentityserviceprovider.updategroup": "cognito-idp:UpdateGroup",
    "cognitoidentityserviceprovider.updateidentityprovider": "cognito-idp:UpdateIdentityProvider",
    "cognitoidentityserviceprovider.updateresourceserver": "cognito-idp:UpdateResourceServer",
    "cognitoidentityserviceprovider.updateuserattributes": "cognito-idp:UpdateUserAttributes",
    "cognitoidentityserviceprovider.updateuserpool": "cognito-idp:UpdateUserPool",
    "cognitoidentityserviceprovider.updateuserpoolclient": "cognito-idp:UpdateUserPoolClient",
    "cognitoidentityserviceprovider.updateuserpooldomain": "cognito-idp:UpdateUserPoolDomain",
    "cognitoidentityserviceprovider.verifysoftwaretoken": "cognito-idp:VerifySoftwareToken",
    "cognitoidentityserviceprovider.verifyuserattribute": "cognito-idp:VerifyUserAttribute",
    "cognitosync.bulkpublish": "cognito-sync:BulkPublish",
    "cognitosync.deletedataset": "cognito-sync:DeleteDataset",
    "cognitosync.describedataset": "cognito-sync:DescribeDataset",
    "cognitosync.describeidentitypoolusage": "cognito-sync:DescribeIdentityPoolUsage",
    "cognitosync.describeidentityusage": "cognito-sync:DescribeIdentityUsage",
    "cognitosync.getbulkpublishdetails": "cognito-sync:GetBulkPublishDetails",
    "cognitosync.getcognitoevents": "cognito-sync:GetCognitoEvents",
    "cognitosync.getidentitypoolconfiguration": "cognito-sync:GetIdentityPoolConfiguration",
    "cognitosync.listdatasets": "cognito-sync:ListDatasets",
    "cognitosync.listidentitypoolusage": "cognito-sync:ListIdentityPoolUsage",
    "cognitosync.listrecords": "cognito-sync:ListRecords",
    "cognitosync.registerdevice": "cognito-sync:RegisterDevice",
    "cognitosync.setcognitoevents": "cognito-sync:SetCognitoEvents",
    "cognitosync.setidentitypoolconfiguration": "cognito-sync:SetIdentityPoolConfiguration",
    "cognitosync.subscribetodataset": "cognito-sync:SubscribeToDataset",
    "cognitosync.unsubscribefromdataset": "cognito-sync:UnsubscribeFromDataset",
    "cognitosync.updaterecords": "cognito-sync:UpdateRecords",
    "comprehend.batchdetectdominantlanguage": "comprehend:BatchDetectDominantLanguage",
    "comprehend.batchdetectentities": "comprehend:BatchDetectEntities",
    "comprehend.batchdetectkeyphrases": "comprehend:BatchDetectKeyPhrases",
    "comprehend.batchdetectsentiment": "comprehend:BatchDetectSentiment",
    "comprehend.batchdetectsyntax": "comprehend:BatchDetectSyntax",
    "comprehend.classifydocument": "comprehend:ClassifyDocument",
    "comprehend.containspiientities": "comprehend:ContainsPiiEntities",
    "comprehend.createdocumentclassifier": "comprehend:CreateDocumentClassifier",
    "comprehend.createendpoint": "comprehend:CreateEndpoint",
    "comprehend.createentityrecognizer": "comprehend:CreateEntityRecognizer",
    "comprehend.deletedocumentclassifier": "comprehend:DeleteDocumentClassifier",
    "comprehend.deleteendpoint": "comprehend:DeleteEndpoint",
    "comprehend.deleteentityrecognizer": "comprehend:DeleteEntityRecognizer",
    "comprehend.deleteresourcepolicy": "comprehend:DeleteResourcePolicy",
    "comprehend.describedocumentclassificationjob": "comprehend:DescribeDocumentClassificationJob",
    "comprehend.describedocumentclassifier": "comprehend:DescribeDocumentClassifier",
    "comprehend.describedominantlanguagedetectionjob": "comprehend:DescribeDominantLanguageDetectionJob",
    "comprehend.describeendpoint": "comprehend:DescribeEndpoint",
    "comprehend.describeentitiesdetectionjob": "comprehend:DescribeEntitiesDetectionJob",
    "comprehend.describeentityrecognizer": "comprehend:DescribeEntityRecognizer",
    "comprehend.describeeventsdetectionjob": "comprehend:DescribeEventsDetectionJob",
    "comprehend.describekeyphrasesdetectionjob": "comprehend:DescribeKeyPhrasesDetectionJob",
    "comprehend.describepiientitiesdetectionjob": "comprehend:DescribePiiEntitiesDetectionJob",
    "comprehend.describeresourcepolicy": "comprehend:DescribeResourcePolicy",
    "comprehend.describesentimentdetectionjob": "comprehend:DescribeSentimentDetectionJob",
    "comprehend.describetargetedsentimentdetectionjob": "comprehend:DescribeTargetedSentimentDetectionJob",
    "comprehend.describetopicsdetectionjob": "comprehend:DescribeTopicsDetectionJob",
    "comprehend.detectdominantlanguage": "comprehend:DetectDominantLanguage",
    "comprehend.detectentities": "comprehend:DetectEntities",
    "comprehend.detectkeyphrases": "comprehend:DetectKeyPhrases",
    "comprehend.detectpiientities": "comprehend:DetectPiiEntities",
    "comprehend.detectsentiment": "comprehend:DetectSentiment",
    "comprehend.detectsyntax": "comprehend:DetectSyntax",
    "comprehend.listdocumentclassificationjobs": "comprehend:ListDocumentClassificationJobs",
    "comprehend.listdocumentclassifiers": "comprehend:ListDocumentClassifiers",
    "comprehend.listdocumentclassifiersummaries": "comprehend:ListDocumentClassifierSummaries",
    "comprehend.listdominantlanguagedetectionjobs": "comprehend:ListDominantLanguageDetectionJobs",
    "comprehend.listendpoints": "comprehend:ListEndpoints",
    "comprehend.listentitiesdetectionjobs": "comprehend:ListEntitiesDetectionJobs",
    "comprehend.listentityrecognizers": "comprehend:ListEntityRecognizers",
    "comprehend.listentityrecognizersummaries": "comprehend:ListEntityRecognizerSummaries",
    "comprehend.listeventsdetectionjobs": "comprehend:ListEventsDetectionJobs",
    "comprehend.listkeyphrasesdetectionjobs": "comprehend:ListKeyPhrasesDetectionJobs",
    "comprehend.listpiientitiesdetectionjobs": "comprehend:ListPiiEntitiesDetectionJobs",
    "comprehend.listsentimentdetectionjobs": "comprehend:ListSentimentDetectionJobs",
    "comprehend.listtagsforresource": "comprehend:ListTagsForResource",
    "comprehend.listtargetedsentimentdetectionjobs": "comprehend:ListTargetedSentimentDetectionJobs",
    "comprehend.listtopicsdetectionjobs": "comprehend:ListTopicsDetectionJobs",
    "comprehend.startdocumentclassificationjob": "comprehend:StartDocumentClassificationJob",
    "comprehend.startdominantlanguagedetectionjob": "comprehend:StartDominantLanguageDetectionJob",
    "comprehend.startentitiesdetectionjob": "comprehend:StartEntitiesDetectionJob",
    "comprehend.starteventsdetectionjob": "comprehend:StartEventsDetectionJob",
    "comprehend.startkeyphrasesdetectionjob": "comprehend:StartKeyPhrasesDetectionJob",
    "comprehend.startpiientitiesdetectionjob": "comprehend:StartPiiEntitiesDetectionJob",
    "comprehend.startsentimentdetectionjob": "comprehend:StartSentimentDetectionJob",
    "comprehend.starttargetedsentimentdetectionjob": "comprehend:StartTargetedSentimentDetectionJob",
    "comprehend.starttopicsdetectionjob": "comprehend:StartTopicsDetectionJob",
    "comprehend.stopdominantlanguagedetectionjob": "comprehend:StopDominantLanguageDetectionJob",
    "comprehend.stopentitiesdetectionjob": "comprehend:StopEntitiesDetectionJob",
    "comprehend.stopeventsdetectionjob": "comprehend:StopEventsDetectionJob",
    "comprehend.stopkeyphrasesdetectionjob": "comprehend:StopKeyPhrasesDetectionJob",
    "comprehend.stoppiientitiesdetectionjob": "comprehend:StopPiiEntitiesDetectionJob",
    "comprehend.stopsentimentdetectionjob": "comprehend:StopSentimentDetectionJob",
    "comprehend.stoptargetedsentimentdetectionjob": "comprehend:StopTargetedSentimentDetectionJob",
    "comprehend.stoptrainingdocumentclassifier": "comprehend:StopTrainingDocumentClassifier",
    "comprehend.stoptrainingentityrecognizer": "comprehend:StopTrainingEntityRecognizer",
    "comprehend.tagresource": "comprehend:TagResource",
    "comprehend.untagresource": "comprehend:UntagResource",
    "comprehend.updateendpoint": "comprehend:UpdateEndpoint",
    "comprehendmedical.describeentitiesdetectionv2job": "comprehendmedical:DescribeEntitiesDetectionV2Job",
    "comprehendmedical.describeicd10cminferencejob": "comprehendmedical:DescribeICD10CMInferenceJob",
    "comprehendmedical.describephidetectionjob": "comprehendmedical:DescribePHIDetectionJob",
    "comprehendmedical.describerxnorminferencejob": "comprehendmedical:DescribeRxNormInferenceJob",
    "comprehendmedical.describesnomedctinferencejob": "comprehendmedical:DescribeSNOMEDCTInferenceJob",
    "comprehendmedical.detectentities": "comprehendmedical:DetectEntities",
    "comprehendmedical.detectentitiesv2": "comprehendmedical:DetectEntitiesV2",
    "comprehendmedical.detectphi": "comprehendmedical:DetectPHI",
    "comprehendmedical.infericd10cm": "comprehendmedical:InferICD10CM",
    "comprehendmedical.inferrxnorm": "comprehendmedical:InferRxNorm",
    "comprehendmedical.infersnomedct": "comprehendmedical:InferSNOMEDCT",
    "comprehendmedical.listentitiesdetectionv2jobs": "comprehendmedical:ListEntitiesDetectionV2Jobs",
    "comprehendmedical.listicd10cminferencejobs": "comprehendmedical:ListICD10CMInferenceJobs",
    "comprehendmedical.listphidetectionjobs": "comprehendmedical:ListPHIDetectionJobs",
    "comprehendmedical.listrxnorminferencejobs": "comprehendmedical:ListRxNormInferenceJobs",
    "comprehendmedical.listsnomedctinferencejobs": "comprehendmedical:ListSNOMEDCTInferenceJobs",
    "comprehendmedical.startentitiesdetectionv2job": "comprehendmedical:StartEntitiesDetectionV2Job",
    "comprehendmedical.starticd10cminferencejob": "comprehendmedical:StartICD10CMInferenceJob",
    "comprehendmedical.startphidetectionjob": "comprehendmedical:StartPHIDetectionJob",
    "comprehendmedical.startrxnorminferencejob": "comprehendmedical:StartRxNormInferenceJob",
    "comprehendmedical.startsnomedctinferencejob": "comprehendmedical:StartSNOMEDCTInferenceJob",
    "comprehendmedical.stopentitiesdetectionv2job": "comprehendmedical:StopEntitiesDetectionV2Job",
    "comprehendmedical.stopicd10cminferencejob": "comprehendmedical:StopICD10CMInferenceJob",
    "comprehendmedical.stopphidetectionjob": "comprehendmedical:StopPHIDetectionJob",
    "comprehendmedical.stoprxnorminferencejob": "comprehendmedical:StopRxNormInferenceJob",
    "comprehendmedical.stopsnomedctinferencejob": "comprehendmedical:StopSNOMEDCTInferenceJob",
    "computeoptimizer.deleterecommendationpreferences": "compute-optimizer:DeleteRecommendationPreferences",
    "computeoptimizer.describerecommendationexportjobs": "compute-optimizer:DescribeRecommendationExportJobs",
    "computeoptimizer.exportautoscalinggrouprecommendations": "compute-optimizer:ExportAutoScalingGroupRecommendations",
    "computeoptimizer.exportebsvolumerecommendations": "compute-optimizer:ExportEBSVolumeRecommendations",
    "computeoptimizer.exportec2instancerecommendations": "compute-optimizer:ExportEC2InstanceRecommendations",
    "computeoptimizer.exportlambdafunctionrecommendations": "compute-optimizer:ExportLambdaFunctionRecommendations",
    "computeoptimizer.getautoscalinggrouprecommendations": "compute-optimizer:GetAutoScalingGroupRecommendations",
    "computeoptimizer.getebsvolumerecommendations": "compute-optimizer:GetEBSVolumeRecommendations",
    "computeoptimizer.getec2instancerecommendations": "compute-optimizer:GetEC2InstanceRecommendations",
    "computeoptimizer.getec2recommendationprojectedmetrics": "compute-optimizer:GetEC2RecommendationProjectedMetrics",
    "computeoptimizer.geteffectiverecommendationpreferences": "compute-optimizer:GetEffectiveRecommendationPreferences",
    "computeoptimizer.getenrollmentstatus": "compute-optimizer:GetEnrollmentStatus",
    "computeoptimizer.getenrollmentstatusesfororganization": "compute-optimizer:GetEnrollmentStatusesForOrganization",
    "computeoptimizer.getlambdafunctionrecommendations": "compute-optimizer:GetLambdaFunctionRecommendations",
    "computeoptimizer.getrecommendationpreferences": "compute-optimizer:GetRecommendationPreferences",
    "computeoptimizer.getrecommendationsummaries": "compute-optimizer:GetRecommendationSummaries",
    "computeoptimizer.putrecommendationpreferences": "compute-optimizer:PutRecommendationPreferences",
    "computeoptimizer.updateenrollmentstatus": "compute-optimizer:UpdateEnrollmentStatus",
    "configservice.batchgetaggregateresourceconfig": "config:BatchGetAggregateResourceConfig",
    "configservice.batchgetresourceconfig": "config:BatchGetResourceConfig",
    "configservice.deleteaggregationauthorization": "config:DeleteAggregationAuthorization",
    "configservice.deleteconfigrule": "config:DeleteConfigRule",
    "configservice.deleteconfigurationaggregator": "config:DeleteConfigurationAggregator",
    "configservice.deleteconfigurationrecorder": "config:DeleteConfigurationRecorder",
    "configservice.deleteconformancepack": "config:DeleteConformancePack",
    "configservice.deletedeliverychannel": "config:DeleteDeliveryChannel",
    "configservice.deleteevaluationresults": "config:DeleteEvaluationResults",
    "configservice.deleteorganizationconfigrule": "config:DeleteOrganizationConfigRule",
    "configservice.deleteorganizationconformancepack": "config:DeleteOrganizationConformancePack",
    "configservice.deletependingaggregationrequest": "config:DeletePendingAggregationRequest",
    "configservice.deleteremediationconfiguration": "config:DeleteRemediationConfiguration",
    "configservice.deleteremediationexceptions": "config:DeleteRemediationExceptions",
    "configservice.deleteresourceconfig": "config:DeleteResourceConfig",
    "configservice.deleteretentionconfiguration": "config:DeleteRetentionConfiguration",
    "configservice.deletestoredquery": "config:DeleteStoredQuery",
    "configservice.deliverconfigsnapshot": "config:DeliverConfigSnapshot",
    "configservice.describeaggregatecompliancebyconfigrules": "config:DescribeAggregateComplianceByConfigRules",
    "configservice.describeaggregatecompliancebyconformancepacks": "config:DescribeAggregateComplianceByConformancePacks",
    "configservice.describeaggregationauthorizations": "config:DescribeAggregationAuthorizations",
    "configservice.describecompliancebyconfigrule": "config:DescribeComplianceByConfigRule",
    "configservice.describecompliancebyresource": "config:DescribeComplianceByResource",
    "configservice.describeconfigruleevaluationstatus": "config:DescribeConfigRuleEvaluationStatus",
    "configservice.describeconfigrules": "config:DescribeConfigRules",
    "configservice.describeconfigurationaggregators": "config:DescribeConfigurationAggregators",
    "configservice.describeconfigurationaggregatorsourcesstatus": "config:DescribeConfigurationAggregatorSourcesStatus",
    "configservice.describeconfigurationrecorders": "config:DescribeConfigurationRecorders",
    "configservice.describeconfigurationrecorderstatus": "config:DescribeConfigurationRecorderStatus",
    "configservice.describeconformancepackcompliance": "config:DescribeConformancePackCompliance",
    "configservice.describeconformancepacks": "config:DescribeConformancePacks",
    "configservice.describeconformancepackstatus": "config:DescribeConformancePackStatus",
    "configservice.describedeliverychannels": "config:DescribeDeliveryChannels",
    "configservice.describedeliverychannelstatus": "config:DescribeDeliveryChannelStatus",
    "configservice.describeorganizationconfigrules": "config:DescribeOrganizationConfigRules",
    "configservice.describeorganizationconfigrulestatuses": "config:DescribeOrganizationConfigRuleStatuses",
    "configservice.describeorganizationconformancepacks": "config:DescribeOrganizationConformancePacks",
    "configservice.describeorganizationconformancepackstatuses": "config:DescribeOrganizationConformancePackStatuses",
    "configservice.describependingaggregationrequests": "config:DescribePendingAggregationRequests",
    "configservice.describeremediationconfigurations": "config:DescribeRemediationConfigurations",
    "configservice.describeremediationexceptions": "config:DescribeRemediationExceptions",
    "configservice.describeremediationexecutionstatus": "config:DescribeRemediationExecutionStatus",
    "configservice.describeretentionconfigurations": "config:DescribeRetentionConfigurations",
    "configservice.getaggregatecompliancedetailsbyconfigrule": "config:GetAggregateComplianceDetailsByConfigRule",
    "configservice.getaggregateconfigrulecompliancesummary": "config:GetAggregateConfigRuleComplianceSummary",
    "configservice.getaggregateconformancepackcompliancesummary": "config:GetAggregateConformancePackComplianceSummary",
    "configservice.getaggregatediscoveredresourcecounts": "config:GetAggregateDiscoveredResourceCounts",
    "configservice.getaggregateresourceconfig": "config:GetAggregateResourceConfig",
    "configservice.getcompliancedetailsbyconfigrule": "config:GetComplianceDetailsByConfigRule",
    "configservice.getcompliancedetailsbyresource": "config:GetComplianceDetailsByResource",
    "configservice.getcompliancesummarybyconfigrule": "config:GetComplianceSummaryByConfigRule",
    "configservice.getcompliancesummarybyresourcetype": "config:GetComplianceSummaryByResourceType",
    "configservice.getconformancepackcompliancedetails": "config:GetConformancePackComplianceDetails",
    "configservice.getconformancepackcompliancesummary": "config:GetConformancePackComplianceSummary",
    "configservice.getdiscoveredresourcecounts": "config:GetDiscoveredResourceCounts",
    "configservice.getorganizationconfigruledetailedstatus": "config:GetOrganizationConfigRuleDetailedStatus",
    "configservice.getorganizationconformancepackdetailedstatus": "config:GetOrganizationConformancePackDetailedStatus",
    "configservice.getresourceconfighistory": "config:GetResourceConfigHistory",
    "configservice.getstoredquery": "config:GetStoredQuery",
    "configservice.listaggregatediscoveredresources": "config:ListAggregateDiscoveredResources",
    "configservice.listdiscoveredresources": "config:ListDiscoveredResources",
    "configservice.liststoredqueries": "config:ListStoredQueries",
    "configservice.listtagsforresource": "config:ListTagsForResource",
    "configservice.putaggregationauthorization": "config:PutAggregationAuthorization",
    "configservice.putconfigrule": "config:PutConfigRule",
    "configservice.putconfigurationaggregator": "config:PutConfigurationAggregator",
    "configservice.putconfigurationrecorder": "config:PutConfigurationRecorder",
    "configservice.putconformancepack": "config:PutConformancePack",
    "configservice.putdeliverychannel": "config:PutDeliveryChannel",
    "configservice.putevaluations": "config:PutEvaluations",
    "configservice.putexternalevaluation": "config:PutExternalEvaluation",
    "configservice.putorganizationconfigrule": "config:PutOrganizationConfigRule",
    "configservice.putorganizationconformancepack": "config:PutOrganizationConformancePack",
    "configservice.putremediationconfigurations": "config:PutRemediationConfigurations",
    "configservice.putremediationexceptions": "config:PutRemediationExceptions",
    "configservice.putresourceconfig": "config:PutResourceConfig",
    "configservice.putretentionconfiguration": "config:PutRetentionConfiguration",
    "configservice.putstoredquery": "config:PutStoredQuery",
    "configservice.selectaggregateresourceconfig": "config:SelectAggregateResourceConfig",
    "configservice.selectresourceconfig": "config:SelectResourceConfig",
    "configservice.startconfigrulesevaluation": "config:StartConfigRulesEvaluation",
    "configservice.startconfigurationrecorder": "config:StartConfigurationRecorder",
    "configservice.startremediationexecution": "config:StartRemediationExecution",
    "configservice.stopconfigurationrecorder": "config:StopConfigurationRecorder",
    "configservice.tagresource": "config:TagResource",
    "configservice.untagresource": "config:UntagResource",
    "connect.associateapprovedorigin": "connect:AssociateApprovedOrigin",
    "connect.associatebot": "connect:AssociateBot",
    "connect.associatedefaultvocabulary": "connect:AssociateDefaultVocabulary",
    "connect.associateinstancestorageconfig": "connect:AssociateInstanceStorageConfig",
    "connect.associatelambdafunction": "connect:AssociateLambdaFunction",
    "connect.associatelexbot": "connect:AssociateLexBot",
    "connect.associatephonenumbercontactflow": "connect:AssociatePhoneNumberContactFlow",
    "connect.associatequeuequickconnects": "connect:AssociateQueueQuickConnects",
    "connect.associateroutingprofilequeues": "connect:AssociateRoutingProfileQueues",
    "connect.associatesecuritykey": "connect:AssociateSecurityKey",
    "connect.claimphonenumber": "connect:ClaimPhoneNumber",
    "connect.createagentstatus": "connect:CreateAgentStatus",
    "connect.createcontactflow": "connect:CreateContactFlow",
    "connect.createcontactflowmodule": "connect:CreateContactFlowModule",
    "connect.createhoursofoperation": "connect:CreateHoursOfOperation",
    "connect.createinstance": "connect:CreateInstance",
    "connect.createintegrationassociation": "connect:CreateIntegrationAssociation",
    "connect.createqueue": "connect:CreateQueue",
    "connect.createquickconnect": "connect:CreateQuickConnect",
    "connect.createroutingprofile": "connect:CreateRoutingProfile",
    "connect.createsecurityprofile": "connect:CreateSecurityProfile",
    "connect.createtasktemplate": "connect:CreateTaskTemplate",
    "connect.createusecase": "connect:CreateUseCase",
    "connect.createuser": "connect:CreateUser",
    "connect.createuserhierarchygroup": "connect:CreateUserHierarchyGroup",
    "connect.createvocabulary": "connect:CreateVocabulary",
    "connect.deletecontactflow": "connect:DeleteContactFlow",
    "connect.deletecontactflowmodule": "connect:DeleteContactFlowModule",
    "connect.deletehoursofoperation": "connect:DeleteHoursOfOperation",
    "connect.deleteinstance": "connect:DeleteInstance",
    "connect.deleteintegrationassociation": "connect:DeleteIntegrationAssociation",
    "connect.deletequickconnect": "connect:DeleteQuickConnect",
    "connect.deletesecurityprofile": "connect:DeleteSecurityProfile",
    "connect.deletetasktemplate": "connect:DeleteTaskTemplate",
    "connect.deleteusecase": "connect:DeleteUseCase",
    "connect.deleteuser": "connect:DeleteUser",
    "connect.deleteuserhierarchygroup": "connect:DeleteUserHierarchyGroup",
    "connect.deletevocabulary": "connect:DeleteVocabulary",
    "connect.describeagentstatus": "connect:DescribeAgentStatus",
    "connect.describecontact": "connect:DescribeContact",
    "connect.describecontactflow": "connect:DescribeContactFlow",
    "connect.describecontactflowmodule": "connect:DescribeContactFlowModule",
    "connect.describehoursofoperation": "connect:DescribeHoursOfOperation",
    "connect.describeinstance": "connect:DescribeInstance",
    "connect.describeinstanceattribute": "connect:DescribeInstanceAttribute",
    "connect.describeinstancestorageconfig": "connect:DescribeInstanceStorageConfig",
    "connect.describephonenumber": "connect:DescribePhoneNumber",
    "connect.describequeue": "connect:DescribeQueue",
    "connect.describequickconnect": "connect:DescribeQuickConnect",
    "connect.describeroutingprofile": "connect:DescribeRoutingProfile",
    "connect.describesecurityprofile": "connect:DescribeSecurityProfile",
    "connect.describeuser": "connect:DescribeUser",
    "connect.describeuserhierarchygroup": "connect:DescribeUserHierarchyGroup",
    "connect.describeuserhierarchystructure": "connect:DescribeUserHierarchyStructure",
    "connect.describevocabulary": "connect:DescribeVocabulary",
    "connect.disassociateapprovedorigin": "connect:DisassociateApprovedOrigin",
    "connect.disassociatebot": "connect:DisassociateBot",
    "connect.disassociateinstancestorageconfig": "connect:DisassociateInstanceStorageConfig",
    "connect.disassociatelambdafunction": "connect:DisassociateLambdaFunction",
    "connect.disassociatelexbot": "connect:DisassociateLexBot",
    "connect.disassociatephonenumbercontactflow": "connect:DisassociatePhoneNumberContactFlow",
    "connect.disassociatequeuequickconnects": "connect:DisassociateQueueQuickConnects",
    "connect.disassociateroutingprofilequeues": "connect:DisassociateRoutingProfileQueues",
    "connect.disassociatesecuritykey": "connect:DisassociateSecurityKey",
    "connect.getcontactattributes": "connect:GetContactAttributes",
    "connect.getcurrentmetricdata": "connect:GetCurrentMetricData",
    "connect.getcurrentuserdata": "connect:GetCurrentUserData",
    "connect.getfederationtoken": "connect:GetFederationToken",
    "connect.getmetricdata": "connect:GetMetricData",
    "connect.gettasktemplate": "connect:GetTaskTemplate",
    "connect.listagentstatuses": "connect:ListAgentStatuses",
    "connect.listapprovedorigins": "connect:ListApprovedOrigins",
    "connect.listbots": "connect:ListBots",
    "connect.listcontactflowmodules": "connect:ListContactFlowModules",
    "connect.listcontactflows": "connect:ListContactFlows",
    "connect.listcontactreferences": "connect:ListContactReferences",
    "connect.listdefaultvocabularies": "connect:ListDefaultVocabularies",
    "connect.listhoursofoperations": "connect:ListHoursOfOperations",
    "connect.listinstanceattributes": "connect:ListInstanceAttributes",
    "connect.listinstances": "connect:ListInstances",
    "connect.listinstancestorageconfigs": "connect:ListInstanceStorageConfigs",
    "connect.listintegrationassociations": "connect:ListIntegrationAssociations",
    "connect.listlambdafunctions": "connect:ListLambdaFunctions",
    "connect.listlexbots": "connect:ListLexBots",
    "connect.listphonenumbers": "connect:ListPhoneNumbers",
    "connect.listphonenumbersv2": "connect:ListPhoneNumbersV2",
    "connect.listprompts": "connect:ListPrompts",
    "connect.listqueuequickconnects": "connect:ListQueueQuickConnects",
    "connect.listqueues": "connect:ListQueues",
    "connect.listquickconnects": "connect:ListQuickConnects",
    "connect.listroutingprofilequeues": "connect:ListRoutingProfileQueues",
    "connect.listroutingprofiles": "connect:ListRoutingProfiles",
    "connect.listsecuritykeys": "connect:ListSecurityKeys",
    "connect.listsecurityprofilepermissions": "connect:ListSecurityProfilePermissions",
    "connect.listsecurityprofiles": "connect:ListSecurityProfiles",
    "connect.listtagsforresource": "connect:ListTagsForResource",
    "connect.listtasktemplates": "connect:ListTaskTemplates",
    "connect.listusecases": "connect:ListUseCases",
    "connect.listuserhierarchygroups": "connect:ListUserHierarchyGroups",
    "connect.listusers": "connect:ListUsers",
    "connect.putuserstatus": "connect:PutUserStatus",
    "connect.releasephonenumber": "connect:ReleasePhoneNumber",
    "connect.resumecontactrecording": "connect:ResumeContactRecording",
    "connect.searchavailablephonenumbers": "connect:SearchAvailablePhoneNumbers",
    "connect.searchvocabularies": "connect:SearchVocabularies",
    "connect.startchatcontact": "connect:StartChatContact",
    "connect.startcontactrecording": "connect:StartContactRecording",
    "connect.startcontactstreaming": "connect:StartContactStreaming",
    "connect.startoutboundvoicecontact": "connect:StartOutboundVoiceContact",
    "connect.starttaskcontact": "connect:StartTaskContact",
    "connect.stopcontact": "connect:StopContact",
    "connect.stopcontactrecording": "connect:StopContactRecording",
    "connect.stopcontactstreaming": "connect:StopContactStreaming",
    "connect.suspendcontactrecording": "connect:SuspendContactRecording",
    "connect.tagresource": "connect:TagResource",
    "connect.transfercontact": "connect:TransferContact",
    "connect.untagresource": "connect:UntagResource",
    "connect.updateagentstatus": "connect:UpdateAgentStatus",
    "connect.updatecontact": "connect:UpdateContact",
    "connect.updatecontactattributes": "connect:UpdateContactAttributes",
    "connect.updatecontactflowcontent": "connect:UpdateContactFlowContent",
    "connect.updatecontactflowmetadata": "connect:UpdateContactFlowMetadata",
    "connect.updatecontactflowmodulecontent": "connect:UpdateContactFlowModuleContent",
    "connect.updatecontactflowmodulemetadata": "connect:UpdateContactFlowModuleMetadata",
    "connect.updatecontactflowname": "connect:UpdateContactFlowName",
    "connect.updatecontactschedule": "connect:UpdateContactSchedule",
    "connect.updatehoursofoperation": "connect:UpdateHoursOfOperation",
    "connect.updateinstanceattribute": "connect:UpdateInstanceAttribute",
    "connect.updateinstancestorageconfig": "connect:UpdateInstanceStorageConfig",
    "connect.updatephonenumber": "connect:UpdatePhoneNumber",
    "connect.updatequeuehoursofoperation": "connect:UpdateQueueHoursOfOperation",
    "connect.updatequeuemaxcontacts": "connect:UpdateQueueMaxContacts",
    "connect.updatequeuename": "connect:UpdateQueueName",
    "connect.updatequeueoutboundcallerconfig": "connect:UpdateQueueOutboundCallerConfig",
    "connect.updatequeuestatus": "connect:UpdateQueueStatus",
    "connect.updatequickconnectconfig": "connect:UpdateQuickConnectConfig",
    "connect.updatequickconnectname": "connect:UpdateQuickConnectName",
    "connect.updateroutingprofileconcurrency": "connect:UpdateRoutingProfileConcurrency",
    "connect.updateroutingprofiledefaultoutboundqueue": "connect:UpdateRoutingProfileDefaultOutboundQueue",
    "connect.updateroutingprofilename": "connect:UpdateRoutingProfileName",
    "connect.updateroutingprofilequeues": "connect:UpdateRoutingProfileQueues",
    "connect.updatesecurityprofile": "connect:UpdateSecurityProfile",
    "connect.updatetasktemplate": "connect:UpdateTaskTemplate",
    "connect.updateuserhierarchy": "connect:UpdateUserHierarchy",
    "connect.updateuserhierarchygroupname": "connect:UpdateUserHierarchyGroupName",
    "connect.updateuserhierarchystructure": "connect:UpdateUserHierarchyStructure",
    "connect.updateuseridentityinfo": "connect:UpdateUserIdentityInfo",
    "connect.updateuserphoneconfig": "connect:UpdateUserPhoneConfig",
    "connect.updateuserroutingprofile": "connect:UpdateUserRoutingProfile",
    "connect.updateusersecurityprofiles": "connect:UpdateUserSecurityProfiles",
    "connectcampaigns.createcampaign": "connect-campaigns:CreateCampaign",
    "connectcampaigns.deletecampaign": "connect-campaigns:DeleteCampaign",
    "connectcampaigns.deleteconnectinstanceconfig": "connect-campaigns:DeleteConnectInstanceConfig",
    "connectcampaigns.deleteinstanceonboardingjob": "connect-campaigns:DeleteInstanceOnboardingJob",
    "connectcampaigns.describecampaign": "connect-campaigns:DescribeCampaign",
    "connectcampaigns.getcampaignstate": "connect-campaigns:GetCampaignState",
    "connectcampaigns.getcampaignstatebatch": "connect-campaigns:GetCampaignStateBatch",
    "connectcampaigns.getconnectinstanceconfig": "connect-campaigns:GetConnectInstanceConfig",
    "connectcampaigns.getinstanceonboardingjobstatus": "connect-campaigns:GetInstanceOnboardingJobStatus",
    "connectcampaigns.listcampaigns": "connect-campaigns:ListCampaigns",
    "connectcampaigns.listtagsforresource": "connect-campaigns:ListTagsForResource",
    "connectcampaigns.pausecampaign": "connect-campaigns:PauseCampaign",
    "connectcampaigns.putdialrequestbatch": "connect-campaigns:PutDialRequestBatch",
    "connectcampaigns.resumecampaign": "connect-campaigns:ResumeCampaign",
    "connectcampaigns.startcampaign": "connect-campaigns:StartCampaign",
    "connectcampaigns.startinstanceonboardingjob": "connect-campaigns:StartInstanceOnboardingJob",
    "connectcampaigns.stopcampaign": "connect-campaigns:StopCampaign",
    "connectcampaigns.tagresource": "connect-campaigns:TagResource",
    "connectcampaigns.untagresource": "connect-campaigns:UntagResource",
    "connectcampaigns.updatecampaigndialerconfig": "connect-campaigns:UpdateCampaignDialerConfig",
    "connectcampaigns.updatecampaignname": "connect-campaigns:UpdateCampaignName",
    "connectcampaigns.updatecampaignoutboundcallconfig": "connect-campaigns:UpdateCampaignOutboundCallConfig",
    "connectcontactlens.listrealtimecontactanalysissegments": "connect:ListRealtimeContactAnalysisSegments",
    "costexplorer.createanomalymonitor": "ce:CreateAnomalyMonitor",
    "costexplorer.createanomalysubscription": "ce:CreateAnomalySubscription",
    "costexplorer.createcostcategorydefinition": "ce:CreateCostCategoryDefinition",
    "costexplorer.deleteanomalymonitor": "ce:DeleteAnomalyMonitor",
    "costexplorer.deleteanomalysubscription": "ce:DeleteAnomalySubscription",
    "costexplorer.deletecostcategorydefinition": "ce:DeleteCostCategoryDefinition",
    "costexplorer.describecostcategorydefinition": "ce:DescribeCostCategoryDefinition",
    "costexplorer.getanomalies": "ce:GetAnomalies",
    "costexplorer.getanomalymonitors": "ce:GetAnomalyMonitors",
    "costexplorer.getanomalysubscriptions": "ce:GetAnomalySubscriptions",
    "costexplorer.getcostandusage": "ce:GetCostAndUsage",
    "costexplorer.getcostandusagewithresources": "ce:GetCostAndUsageWithResources",
    "costexplorer.getcostcategories": "ce:GetCostCategories",
    "costexplorer.getcostforecast": "ce:GetCostForecast",
    "costexplorer.getdimensionvalues": "ce:GetDimensionValues",
    "costexplorer.getreservationcoverage": "ce:GetReservationCoverage",
    "costexplorer.getreservationpurchaserecommendation": "ce:GetReservationPurchaseRecommendation",
    "costexplorer.getreservationutilization": "ce:GetReservationUtilization",
    "costexplorer.getrightsizingrecommendation": "ce:GetRightsizingRecommendation",
    "costexplorer.getsavingsplanscoverage": "ce:GetSavingsPlansCoverage",
    "costexplorer.getsavingsplanspurchaserecommendation": "ce:GetSavingsPlansPurchaseRecommendation",
    "costexplorer.getsavingsplansutilization": "ce:GetSavingsPlansUtilization",
    "costexplorer.getsavingsplansutilizationdetails": "ce:GetSavingsPlansUtilizationDetails",
    "costexplorer.gettags": "ce:GetTags",
    "costexplorer.getusageforecast": "ce:GetUsageForecast",
    "costexplorer.listcostallocationtags": "ce:ListCostAllocationTags",
    "costexplorer.listcostcategorydefinitions": "ce:ListCostCategoryDefinitions",
    "costexplorer.listtagsforresource": "ce:ListTagsForResource",
    "costexplorer.provideanomalyfeedback": "ce:ProvideAnomalyFeedback",
    "costexplorer.tagresource": "ce:TagResource",
    "costexplorer.untagresource": "ce:UntagResource",
    "costexplorer.updateanomalymonitor": "ce:UpdateAnomalyMonitor",
    "costexplorer.updateanomalysubscription": "ce:UpdateAnomalySubscription",
    "costexplorer.updatecostallocationtagsstatus": "ce:UpdateCostAllocationTagsStatus",
    "costexplorer.updatecostcategorydefinition": "ce:UpdateCostCategoryDefinition",
    "cur.deletereportdefinition": "cur:DeleteReportDefinition",
    "cur.describereportdefinitions": "cur:DescribeReportDefinitions",
    "cur.modifyreportdefinition": "cur:ModifyReportDefinition",
    "cur.putreportdefinition": "cur:PutReportDefinition",
    "customerprofiles.addprofilekey": "profile:AddProfileKey",
    "customerprofiles.createdomain": "profile:CreateDomain",
    "customerprofiles.createintegrationworkflow": "profile:CreateIntegrationWorkflow",
    "customerprofiles.createprofile": "profile:CreateProfile",
    "customerprofiles.deletedomain": "profile:DeleteDomain",
    "customerprofiles.deleteintegration": "profile:DeleteIntegration",
    "customerprofiles.deleteprofile": "profile:DeleteProfile",
    "customerprofiles.deleteprofilekey": "profile:DeleteProfileKey",
    "customerprofiles.deleteprofileobject": "profile:DeleteProfileObject",
    "customerprofiles.deleteprofileobjecttype": "profile:DeleteProfileObjectType",
    "customerprofiles.deleteworkflow": "profile:DeleteWorkflow",
    "customerprofiles.getautomergingpreview": "profile:GetAutoMergingPreview",
    "customerprofiles.getdomain": "profile:GetDomain",
    "customerprofiles.getidentityresolutionjob": "profile:GetIdentityResolutionJob",
    "customerprofiles.getintegration": "profile:GetIntegration",
    "customerprofiles.getmatches": "profile:GetMatches",
    "customerprofiles.getprofileobjecttype": "profile:GetProfileObjectType",
    "customerprofiles.getprofileobjecttypetemplate": "profile:GetProfileObjectTypeTemplate",
    "customerprofiles.getworkflow": "profile:GetWorkflow",
    "customerprofiles.getworkflowsteps": "profile:GetWorkflowSteps",
    "customerprofiles.listaccountintegrations": "profile:ListAccountIntegrations",
    "customerprofiles.listdomains": "profile:ListDomains",
    "customerprofiles.listidentityresolutionjobs": "profile:ListIdentityResolutionJobs",
    "customerprofiles.listintegrations": "profile:ListIntegrations",
    "customerprofiles.listprofileobjects": "profile:ListProfileObjects",
    "customerprofiles.listprofileobjecttypes": "profile:ListProfileObjectTypes",
    "customerprofiles.listprofileobjecttypetemplates": "profile:ListProfileObjectTypeTemplates",
    "customerprofiles.listtagsforresource": "profile:ListTagsForResource",
    "customerprofiles.listworkflows": "profile:ListWorkflows",
    "customerprofiles.mergeprofiles": "profile:MergeProfiles",
    "customerprofiles.putintegration": "profile:PutIntegration",
    "customerprofiles.putprofileobject": "profile:PutProfileObject",
    "customerprofiles.putprofileobjecttype": "profile:PutProfileObjectType",
    "customerprofiles.searchprofiles": "profile:SearchProfiles",
    "customerprofiles.tagresource": "profile:TagResource",
    "customerprofiles.untagresource": "profile:UntagResource",
    "customerprofiles.updatedomain": "profile:UpdateDomain",
    "customerprofiles.updateprofile": "profile:UpdateProfile",
    "databrew.batchdeleterecipeversion": "databrew:BatchDeleteRecipeVersion",
    "databrew.createdataset": "databrew:CreateDataset",
    "databrew.createprofilejob": "databrew:CreateProfileJob",
    "databrew.createproject": "databrew:CreateProject",
    "databrew.createrecipe": "databrew:CreateRecipe",
    "databrew.createrecipejob": "databrew:CreateRecipeJob",
    "databrew.createruleset": "databrew:CreateRuleset",
    "databrew.createschedule": "databrew:CreateSchedule",
    "databrew.deletedataset": "databrew:DeleteDataset",
    "databrew.deletejob": "databrew:DeleteJob",
    "databrew.deleteproject": "databrew:DeleteProject",
    "databrew.deleterecipeversion": "databrew:DeleteRecipeVersion",
    "databrew.deleteruleset": "databrew:DeleteRuleset",
    "databrew.deleteschedule": "databrew:DeleteSchedule",
    "databrew.describedataset": "databrew:DescribeDataset",
    "databrew.describejob": "databrew:DescribeJob",
    "databrew.describejobrun": "databrew:DescribeJobRun",
    "databrew.describeproject": "databrew:DescribeProject",
    "databrew.describerecipe": "databrew:DescribeRecipe",
    "databrew.describeruleset": "databrew:DescribeRuleset",
    "databrew.describeschedule": "databrew:DescribeSchedule",
    "databrew.listdatasets": "databrew:ListDatasets",
    "databrew.listjobruns": "databrew:ListJobRuns",
    "databrew.listjobs": "databrew:ListJobs",
    "databrew.listprojects": "databrew:ListProjects",
    "databrew.listrecipes": "databrew:ListRecipes",
    "databrew.listrecipeversions": "databrew:ListRecipeVersions",
    "databrew.listrulesets": "databrew:ListRulesets",
    "databrew.listschedules": "databrew:ListSchedules",
    "databrew.listtagsforresource": "databrew:ListTagsForResource",
    "databrew.publishrecipe": "databrew:PublishRecipe",
    "databrew.sendprojectsessionaction": "databrew:SendProjectSessionAction",
    "databrew.startjobrun": "databrew:StartJobRun",
    "databrew.startprojectsession": "databrew:StartProjectSession",
    "databrew.stopjobrun": "databrew:StopJobRun",
    "databrew.tagresource": "databrew:TagResource",
    "databrew.untagresource": "databrew:UntagResource",
    "databrew.updatedataset": "databrew:UpdateDataset",
    "databrew.updateprofilejob": "databrew:UpdateProfileJob",
    "databrew.updateproject": "databrew:UpdateProject",
    "databrew.updaterecipe": "databrew:UpdateRecipe",
    "databrew.updaterecipejob": "databrew:UpdateRecipeJob",
    "databrew.updateruleset": "databrew:UpdateRuleset",
    "databrew.updateschedule": "databrew:UpdateSchedule",
    "dataexchange.canceljob": "dataexchange:CancelJob",
    "dataexchange.createdataset": "dataexchange:CreateDataSet",
    "dataexchange.createeventaction": "dataexchange:CreateEventAction",
    "dataexchange.createjob": "dataexchange:CreateJob",
    "dataexchange.createrevision": "dataexchange:CreateRevision",
    "dataexchange.deleteasset": "dataexchange:DeleteAsset",
    "dataexchange.deletedataset": "dataexchange:DeleteDataSet",
    "dataexchange.deleteeventaction": "dataexchange:DeleteEventAction",
    "dataexchange.deleterevision": "dataexchange:DeleteRevision",
    "dataexchange.getasset": "dataexchange:GetAsset",
    "dataexchange.getdataset": "dataexchange:GetDataSet",
    "dataexchange.geteventaction": "dataexchange:GetEventAction",
    "dataexchange.getjob": "dataexchange:GetJob",
    "dataexchange.getrevision": "dataexchange:GetRevision",
    "dataexchange.listdatasetrevisions": "dataexchange:ListDataSetRevisions",
    "dataexchange.listdatasets": "dataexchange:ListDataSets",
    "dataexchange.listeventactions": "dataexchange:ListEventActions",
    "dataexchange.listjobs": "dataexchange:ListJobs",
    "dataexchange.listrevisionassets": "dataexchange:ListRevisionAssets",
    "dataexchange.listtagsforresource": "dataexchange:ListTagsForResource",
    "dataexchange.revokerevision": "dataexchange:RevokeRevision",
    "dataexchange.sendapiasset": "dataexchange:SendApiAsset",
    "dataexchange.startjob": "dataexchange:StartJob",
    "dataexchange.tagresource": "dataexchange:TagResource",
    "dataexchange.untagresource": "dataexchange:UntagResource",
    "dataexchange.updateasset": "dataexchange:UpdateAsset",
    "dataexchange.updatedataset": "dataexchange:UpdateDataSet",
    "dataexchange.updateeventaction": "dataexchange:UpdateEventAction",
    "dataexchange.updaterevision": "dataexchange:UpdateRevision",
    "datapipeline.activatepipeline": "datapipeline:ActivatePipeline",
    "datapipeline.addtags": "datapipeline:AddTags",
    "datapipeline.createpipeline": "datapipeline:CreatePipeline",
    "datapipeline.deactivatepipeline": "datapipeline:DeactivatePipeline",
    "datapipeline.deletepipeline": "datapipeline:DeletePipeline",
    "datapipeline.describeobjects": "datapipeline:DescribeObjects",
    "datapipeline.describepipelines": "datapipeline:DescribePipelines",
    "datapipeline.evaluateexpression": "datapipeline:EvaluateExpression",
    "datapipeline.getpipelinedefinition": "datapipeline:GetPipelineDefinition",
    "datapipeline.listpipelines": "datapipeline:ListPipelines",
    "datapipeline.pollfortask": "datapipeline:PollForTask",
    "datapipeline.putpipelinedefinition": "datapipeline:PutPipelineDefinition",
    "datapipeline.queryobjects": "datapipeline:QueryObjects",
    "datapipeline.removetags": "datapipeline:RemoveTags",
    "datapipeline.reporttaskprogress": "datapipeline:ReportTaskProgress",
    "datapipeline.reporttaskrunnerheartbeat": "datapipeline:ReportTaskRunnerHeartbeat",
    "datapipeline.setstatus": "datapipeline:SetStatus",
    "datapipeline.settaskstatus": "datapipeline:SetTaskStatus",
    "datapipeline.validatepipelinedefinition": "datapipeline:ValidatePipelineDefinition",
    "datasync.canceltaskexecution": "datasync:CancelTaskExecution",
    "datasync.createagent": "datasync:CreateAgent",
    "datasync.createlocationefs": "datasync:CreateLocationEfs",
    "datasync.createlocationfsxlustre": "datasync:CreateLocationFsxLustre",
    "datasync.createlocationfsxopenzfs": "datasync:CreateLocationFsxOpenZfs",
    "datasync.createlocationfsxwindows": "datasync:CreateLocationFsxWindows",
    "datasync.createlocationhdfs": "datasync:CreateLocationHdfs",
    "datasync.createlocationnfs": "datasync:CreateLocationNfs",
    "datasync.createlocationobjectstorage": "datasync:CreateLocationObjectStorage",
    "datasync.createlocations3": "datasync:CreateLocationS3",
    "datasync.createlocationsmb": "datasync:CreateLocationSmb",
    "datasync.createtask": "datasync:CreateTask",
    "datasync.deleteagent": "datasync:DeleteAgent",
    "datasync.deletelocation": "datasync:DeleteLocation",
    "datasync.deletetask": "datasync:DeleteTask",
    "datasync.describeagent": "datasync:DescribeAgent",
    "datasync.describelocationefs": "datasync:DescribeLocationEfs",
    "datasync.describelocationfsxlustre": "datasync:DescribeLocationFsxLustre",
    "datasync.describelocationfsxopenzfs": "datasync:DescribeLocationFsxOpenZfs",
    "datasync.describelocationfsxwindows": "datasync:DescribeLocationFsxWindows",
    "datasync.describelocationhdfs": "datasync:DescribeLocationHdfs",
    "datasync.describelocationnfs": "datasync:DescribeLocationNfs",
    "datasync.describelocationobjectstorage": "datasync:DescribeLocationObjectStorage",
    "datasync.describelocations3": "datasync:DescribeLocationS3",
    "datasync.describelocationsmb": "datasync:DescribeLocationSmb",
    "datasync.describetask": "datasync:DescribeTask",
    "datasync.describetaskexecution": "datasync:DescribeTaskExecution",
    "datasync.listagents": "datasync:ListAgents",
    "datasync.listlocations": "datasync:ListLocations",
    "datasync.listtagsforresource": "datasync:ListTagsForResource",
    "datasync.listtaskexecutions": "datasync:ListTaskExecutions",
    "datasync.listtasks": "datasync:ListTasks",
    "datasync.starttaskexecution": "datasync:StartTaskExecution",
    "datasync.tagresource": "datasync:TagResource",
    "datasync.untagresource": "datasync:UntagResource",
    "datasync.updateagent": "datasync:UpdateAgent",
    "datasync.updatelocationhdfs": "datasync:UpdateLocationHdfs",
    "datasync.updatelocationnfs": "datasync:UpdateLocationNfs",
    "datasync.updatelocationobjectstorage": "datasync:UpdateLocationObjectStorage",
    "datasync.updatelocationsmb": "datasync:UpdateLocationSmb",
    "datasync.updatetask": "datasync:UpdateTask",
    "datasync.updatetaskexecution": "datasync:UpdateTaskExecution",
    "dax.createcluster": "dax:CreateCluster",
    "dax.createparametergroup": "dax:CreateParameterGroup",
    "dax.createsubnetgroup": "dax:CreateSubnetGroup",
    "dax.decreasereplicationfactor": "dax:DecreaseReplicationFactor",
    "dax.deletecluster": "dax:DeleteCluster",
    "dax.deleteparametergroup": "dax:DeleteParameterGroup",
    "dax.deletesubnetgroup": "dax:DeleteSubnetGroup",
    "dax.describeclusters": "dax:DescribeClusters",
    "dax.describedefaultparameters": "dax:DescribeDefaultParameters",
    "dax.describeevents": "dax:DescribeEvents",
    "dax.describeparametergroups": "dax:DescribeParameterGroups",
    "dax.describeparameters": "dax:DescribeParameters",
    "dax.describesubnetgroups": "dax:DescribeSubnetGroups",
    "dax.increasereplicationfactor": "dax:IncreaseReplicationFactor",
    "dax.listtags": "dax:ListTags",
    "dax.rebootnode": "dax:RebootNode",
    "dax.tagresource": "dax:TagResource",
    "dax.untagresource": "dax:UntagResource",
    "dax.updatecluster": "dax:UpdateCluster",
    "dax.updateparametergroup": "dax:UpdateParameterGroup",
    "dax.updatesubnetgroup": "dax:UpdateSubnetGroup",
    "detective.acceptinvitation": "detective:AcceptInvitation",
    "detective.creategraph": "detective:CreateGraph",
    "detective.createmembers": "detective:CreateMembers",
    "detective.deletegraph": "detective:DeleteGraph",
    "detective.deletemembers": "detective:DeleteMembers",
    "detective.describeorganizationconfiguration": "detective:DescribeOrganizationConfiguration",
    "detective.disableorganizationadminaccount": "detective:DisableOrganizationAdminAccount",
    "detective.disassociatemembership": "detective:DisassociateMembership",
    "detective.enableorganizationadminaccount": "detective:EnableOrganizationAdminAccount",
    "detective.getmembers": "detective:GetMembers",
    "detective.listgraphs": "detective:ListGraphs",
    "detective.listinvitations": "detective:ListInvitations",
    "detective.listmembers": "detective:ListMembers",
    "detective.listorganizationadminaccounts": "detective:ListOrganizationAdminAccounts",
    "detective.listtagsforresource": "detective:ListTagsForResource",
    "detective.rejectinvitation": "detective:RejectInvitation",
    "detective.startmonitoringmember": "detective:StartMonitoringMember",
    "detective.tagresource": "detective:TagResource",
    "detective.untagresource": "detective:UntagResource",
    "detective.updateorganizationconfiguration": "detective:UpdateOrganizationConfiguration",
    "devicefarm.createdevicepool": "devicefarm:CreateDevicePool",
    "devicefarm.createinstanceprofile": "devicefarm:CreateInstanceProfile",
    "devicefarm.createnetworkprofile": "devicefarm:CreateNetworkProfile",
    "devicefarm.createproject": "devicefarm:CreateProject",
    "devicefarm.createremoteaccesssession": "devicefarm:CreateRemoteAccessSession",
    "devicefarm.createtestgridproject": "devicefarm:CreateTestGridProject",
    "devicefarm.createtestgridurl": "devicefarm:CreateTestGridUrl",
    "devicefarm.createupload": "devicefarm:CreateUpload",
    "devicefarm.createvpceconfiguration": "devicefarm:CreateVPCEConfiguration",
    "devicefarm.deletedevicepool": "devicefarm:DeleteDevicePool",
    "devicefarm.deleteinstanceprofile": "devicefarm:DeleteInstanceProfile",
    "devicefarm.deletenetworkprofile": "devicefarm:DeleteNetworkProfile",
    "devicefarm.deleteproject": "devicefarm:DeleteProject",
    "devicefarm.deleteremoteaccesssession": "devicefarm:DeleteRemoteAccessSession",
    "devicefarm.deleterun": "devicefarm:DeleteRun",
    "devicefarm.deletetestgridproject": "devicefarm:DeleteTestGridProject",
    "devicefarm.deleteupload": "devicefarm:DeleteUpload",
    "devicefarm.deletevpceconfiguration": "devicefarm:DeleteVPCEConfiguration",
    "devicefarm.getaccountsettings": "devicefarm:GetAccountSettings",
    "devicefarm.getdevice": "devicefarm:GetDevice",
    "devicefarm.getdeviceinstance": "devicefarm:GetDeviceInstance",
    "devicefarm.getdevicepool": "devicefarm:GetDevicePool",
    "devicefarm.getdevicepoolcompatibility": "devicefarm:GetDevicePoolCompatibility",
    "devicefarm.getinstanceprofile": "devicefarm:GetInstanceProfile",
    "devicefarm.getjob": "devicefarm:GetJob",
    "devicefarm.getnetworkprofile": "devicefarm:GetNetworkProfile",
    "devicefarm.getofferingstatus": "devicefarm:GetOfferingStatus",
    "devicefarm.getproject": "devicefarm:GetProject",
    "devicefarm.getremoteaccesssession": "devicefarm:GetRemoteAccessSession",
    "devicefarm.getrun": "devicefarm:GetRun",
    "devicefarm.getsuite": "devicefarm:GetSuite",
    "devicefarm.gettest": "devicefarm:GetTest",
    "devicefarm.gettestgridproject": "devicefarm:GetTestGridProject",
    "devicefarm.gettestgridsession": "devicefarm:GetTestGridSession",
    "devicefarm.getupload": "devicefarm:GetUpload",
    "devicefarm.getvpceconfiguration": "devicefarm:GetVPCEConfiguration",
    "devicefarm.installtoremoteaccesssession": "devicefarm:InstallToRemoteAccessSession",
    "devicefarm.listartifacts": "devicefarm:ListArtifacts",
    "devicefarm.listdeviceinstances": "devicefarm:ListDeviceInstances",
    "devicefarm.listdevicepools": "devicefarm:ListDevicePools",
    "devicefarm.listdevices": "devicefarm:ListDevices",
    "devicefarm.listinstanceprofiles": "devicefarm:ListInstanceProfiles",
    "devicefarm.listjobs": "devicefarm:ListJobs",
    "devicefarm.listnetworkprofiles": "devicefarm:ListNetworkProfiles",
    "devicefarm.listofferingpromotions": "devicefarm:ListOfferingPromotions",
    "devicefarm.listofferings": "devicefarm:ListOfferings",
    "devicefarm.listofferingtransactions": "devicefarm:ListOfferingTransactions",
    "devicefarm.listprojects": "devicefarm:ListProjects",
    "devicefarm.listremoteaccesssessions": "devicefarm:ListRemoteAccessSessions",
    "devicefarm.listruns": "devicefarm:ListRuns",
    "devicefarm.listsamples": "devicefarm:ListSamples",
    "devicefarm.listsuites": "devicefarm:ListSuites",
    "devicefarm.listtagsforresource": "devicefarm:ListTagsForResource",
    "devicefarm.listtestgridprojects": "devicefarm:ListTestGridProjects",
    "devicefarm.listtestgridsessionactions": "devicefarm:ListTestGridSessionActions",
    "devicefarm.listtestgridsessionartifacts": "devicefarm:ListTestGridSessionArtifacts",
    "devicefarm.listtestgridsessions": "devicefarm:ListTestGridSessions",
    "devicefarm.listtests": "devicefarm:ListTests",
    "devicefarm.listuniqueproblems": "devicefarm:ListUniqueProblems",
    "devicefarm.listuploads": "devicefarm:ListUploads",
    "devicefarm.listvpceconfigurations": "devicefarm:ListVPCEConfigurations",
    "devicefarm.purchaseoffering": "devicefarm:PurchaseOffering",
    "devicefarm.renewoffering": "devicefarm:RenewOffering",
    "devicefarm.schedulerun": "devicefarm:ScheduleRun",
    "devicefarm.stopjob": "devicefarm:StopJob",
    "devicefarm.stopremoteaccesssession": "devicefarm:StopRemoteAccessSession",
    "devicefarm.stoprun": "devicefarm:StopRun",
    "devicefarm.tagresource": "devicefarm:TagResource",
    "devicefarm.untagresource": "devicefarm:UntagResource",
    "devicefarm.updatedeviceinstance": "devicefarm:UpdateDeviceInstance",
    "devicefarm.updatedevicepool": "devicefarm:UpdateDevicePool",
    "devicefarm.updateinstanceprofile": "devicefarm:UpdateInstanceProfile",
    "devicefarm.updatenetworkprofile": "devicefarm:UpdateNetworkProfile",
    "devicefarm.updateproject": "devicefarm:UpdateProject",
    "devicefarm.updatetestgridproject": "devicefarm:UpdateTestGridProject",
    "devicefarm.updateupload": "devicefarm:UpdateUpload",
    "devicefarm.updatevpceconfiguration": "devicefarm:UpdateVPCEConfiguration",
    "devopsguru.addnotificationchannel": "devops-guru:AddNotificationChannel",
    "devopsguru.deleteinsight": "devops-guru:DeleteInsight",
    "devopsguru.describeaccounthealth": "devops-guru:DescribeAccountHealth",
    "devopsguru.describeaccountoverview": "devops-guru:DescribeAccountOverview",
    "devopsguru.describeanomaly": "devops-guru:DescribeAnomaly",
    "devopsguru.describeeventsourcesconfig": "devops-guru:DescribeEventSourcesConfig",
    "devopsguru.describefeedback": "devops-guru:DescribeFeedback",
    "devopsguru.describeinsight": "devops-guru:DescribeInsight",
    "devopsguru.describeorganizationhealth": "devops-guru:DescribeOrganizationHealth",
    "devopsguru.describeorganizationoverview": "devops-guru:DescribeOrganizationOverview",
    "devopsguru.describeorganizationresourcecollectionhealth": "devops-guru:DescribeOrganizationResourceCollectionHealth",
    "devopsguru.describeresourcecollectionhealth": "devops-guru:DescribeResourceCollectionHealth",
    "devopsguru.describeserviceintegration": "devops-guru:DescribeServiceIntegration",
    "devopsguru.getcostestimation": "devops-guru:GetCostEstimation",
    "devopsguru.getresourcecollection": "devops-guru:GetResourceCollection",
    "devopsguru.listanomaliesforinsight": "devops-guru:ListAnomaliesForInsight",
    "devopsguru.listevents": "devops-guru:ListEvents",
    "devopsguru.listinsights": "devops-guru:ListInsights",
    "devopsguru.listnotificationchannels": "devops-guru:ListNotificationChannels",
    "devopsguru.listorganizationinsights": "devops-guru:ListOrganizationInsights",
    "devopsguru.listrecommendations": "devops-guru:ListRecommendations",
    "devopsguru.putfeedback": "devops-guru:PutFeedback",
    "devopsguru.removenotificationchannel": "devops-guru:RemoveNotificationChannel",
    "devopsguru.searchinsights": "devops-guru:SearchInsights",
    "devopsguru.searchorganizationinsights": "devops-guru:SearchOrganizationInsights",
    "devopsguru.startcostestimation": "devops-guru:StartCostEstimation",
    "devopsguru.updateeventsourcesconfig": "devops-guru:UpdateEventSourcesConfig",
    "devopsguru.updateresourcecollection": "devops-guru:UpdateResourceCollection",
    "devopsguru.updateserviceintegration": "devops-guru:UpdateServiceIntegration",
    "directconnect.acceptdirectconnectgatewayassociationproposal": "directconnect:AcceptDirectConnectGatewayAssociationProposal",
    "directconnect.allocateconnectiononinterconnect": "directconnect:AllocateConnectionOnInterconnect",
    "directconnect.allocatehostedconnection": "directconnect:AllocateHostedConnection",
    "directconnect.allocateprivatevirtualinterface": "directconnect:AllocatePrivateVirtualInterface",
    "directconnect.allocatepublicvirtualinterface": "directconnect:AllocatePublicVirtualInterface",
    "directconnect.allocatetransitvirtualinterface": "directconnect:AllocateTransitVirtualInterface",
    "directconnect.associateconnectionwithlag": "directconnect:AssociateConnectionWithLag",
    "directconnect.associatehostedconnection": "directconnect:AssociateHostedConnection",
    "directconnect.associatemacseckey": "directconnect:AssociateMacSecKey",
    "directconnect.associatevirtualinterface": "directconnect:AssociateVirtualInterface",
    "directconnect.confirmconnection": "directconnect:ConfirmConnection",
    "directconnect.confirmcustomeragreement": "directconnect:ConfirmCustomerAgreement",
    "directconnect.confirmprivatevirtualinterface": "directconnect:ConfirmPrivateVirtualInterface",
    "directconnect.confirmpublicvirtualinterface": "directconnect:ConfirmPublicVirtualInterface",
    "directconnect.confirmtransitvirtualinterface": "directconnect:ConfirmTransitVirtualInterface",
    "directconnect.createbgppeer": "directconnect:CreateBGPPeer",
    "directconnect.createconnection": "directconnect:CreateConnection",
    "directconnect.createdirectconnectgateway": "directconnect:CreateDirectConnectGateway",
    "directconnect.createdirectconnectgatewayassociation": "directconnect:CreateDirectConnectGatewayAssociation",
    "directconnect.createdirectconnectgatewayassociationproposal": "directconnect:CreateDirectConnectGatewayAssociationProposal",
    "directconnect.createinterconnect": "directconnect:CreateInterconnect",
    "directconnect.createlag": "directconnect:CreateLag",
    "directconnect.createprivatevirtualinterface": "directconnect:CreatePrivateVirtualInterface",
    "directconnect.createpublicvirtualinterface": "directconnect:CreatePublicVirtualInterface",
    "directconnect.createtransitvirtualinterface": "directconnect:CreateTransitVirtualInterface",
    "directconnect.deletebgppeer": "directconnect:DeleteBGPPeer",
    "directconnect.deleteconnection": "directconnect:DeleteConnection",
    "directconnect.deletedirectconnectgateway": "directconnect:DeleteDirectConnectGateway",
    "directconnect.deletedirectconnectgatewayassociation": "directconnect:DeleteDirectConnectGatewayAssociation",
    "directconnect.deletedirectconnectgatewayassociationproposal": "directconnect:DeleteDirectConnectGatewayAssociationProposal",
    "directconnect.deleteinterconnect": "directconnect:DeleteInterconnect",
    "directconnect.deletelag": "directconnect:DeleteLag",
    "directconnect.deletevirtualinterface": "directconnect:DeleteVirtualInterface",
    "directconnect.describeconnectionloa": "directconnect:DescribeConnectionLoa",
    "directconnect.describeconnections": "directconnect:DescribeConnections",
    "directconnect.describeconnectionsoninterconnect": "directconnect:DescribeConnectionsOnInterconnect",
    "directconnect.describecustomermetadata": "directconnect:DescribeCustomerMetadata",
    "directconnect.describedirectconnectgatewayassociationproposals": "directconnect:DescribeDirectConnectGatewayAssociationProposals",
    "directconnect.describedirectconnectgatewayassociations": "directconnect:DescribeDirectConnectGatewayAssociations",
    "directconnect.describedirectconnectgatewayattachments": "directconnect:DescribeDirectConnectGatewayAttachments",
    "directconnect.describedirectconnectgateways": "directconnect:DescribeDirectConnectGateways",
    "directconnect.describehostedconnections": "directconnect:DescribeHostedConnections",
    "directconnect.describeinterconnectloa": "directconnect:DescribeInterconnectLoa",
    "directconnect.describeinterconnects": "directconnect:DescribeInterconnects",
    "directconnect.describelags": "directconnect:DescribeLags",
    "directconnect.describeloa": "directconnect:DescribeLoa",
    "directconnect.describelocations": "directconnect:DescribeLocations",
    "directconnect.describerouterconfiguration": "directconnect:DescribeRouterConfiguration",
    "directconnect.describetags": "directconnect:DescribeTags",
    "directconnect.describevirtualgateways": "directconnect:DescribeVirtualGateways",
    "directconnect.describevirtualinterfaces": "directconnect:DescribeVirtualInterfaces",
    "directconnect.disassociateconnectionfromlag": "directconnect:DisassociateConnectionFromLag",
    "directconnect.disassociatemacseckey": "directconnect:DisassociateMacSecKey",
    "directconnect.listvirtualinterfacetesthistory": "directconnect:ListVirtualInterfaceTestHistory",
    "directconnect.startbgpfailovertest": "directconnect:StartBgpFailoverTest",
    "directconnect.stopbgpfailovertest": "directconnect:StopBgpFailoverTest",
    "directconnect.tagresource": "directconnect:TagResource",
    "directconnect.untagresource": "directconnect:UntagResource",
    "directconnect.updateconnection": "directconnect:UpdateConnection",
    "directconnect.updatedirectconnectgateway": "directconnect:UpdateDirectConnectGateway",
    "directconnect.updatedirectconnectgatewayassociation": "directconnect:UpdateDirectConnectGatewayAssociation",
    "directconnect.updatelag": "directconnect:UpdateLag",
    "directconnect.updatevirtualinterfaceattributes": "directconnect:UpdateVirtualInterfaceAttributes",
    "directoryservice.acceptshareddirectory": "ds:AcceptSharedDirectory",
    "directoryservice.addiproutes": "ds:AddIpRoutes",
    "directoryservice.addregion": "ds:AddRegion",
    "directoryservice.addtagstoresource": "ds:AddTagsToResource",
    "directoryservice.cancelschemaextension": "ds:CancelSchemaExtension",
    "directoryservice.connectdirectory": "ds:ConnectDirectory",
    "directoryservice.createalias": "ds:CreateAlias",
    "directoryservice.createcomputer": "ds:CreateComputer",
    "directoryservice.createconditionalforwarder": "ds:CreateConditionalForwarder",
    "directoryservice.createdirectory": "ds:CreateDirectory",
    "directoryservice.createlogsubscription": "ds:CreateLogSubscription",
    "directoryservice.createmicrosoftad": "ds:CreateMicrosoftAD",
    "directoryservice.createsnapshot": "ds:CreateSnapshot",
    "directoryservice.createtrust": "ds:CreateTrust",
    "directoryservice.deleteconditionalforwarder": "ds:DeleteConditionalForwarder",
    "directoryservice.deletedirectory": "ds:DeleteDirectory",
    "directoryservice.deletelogsubscription": "ds:DeleteLogSubscription",
    "directoryservice.deletesnapshot": "ds:DeleteSnapshot",
    "directoryservice.deletetrust": "ds:DeleteTrust",
    "directoryservice.deregistercertificate": "ds:DeregisterCertificate",
    "directoryservice.deregistereventtopic": "ds:DeregisterEventTopic",
    "directoryservice.describecertificate": "ds:DescribeCertificate",
    "directoryservice.describeclientauthenticationsettings": "ds:DescribeClientAuthenticationSettings",
    "directoryservice.describeconditionalforwarders": "ds:DescribeConditionalForwarders",
    "directoryservice.describedirectories": "ds:DescribeDirectories",
    "directoryservice.describedomaincontrollers": "ds:DescribeDomainControllers",
    "directoryservice.describeeventtopics": "ds:DescribeEventTopics",
    "directoryservice.describeldapssettings": "ds:DescribeLDAPSSettings",
    "directoryservice.describeregions": "ds:DescribeRegions",
    "directoryservice.describeshareddirectories": "ds:DescribeSharedDirectories",
    "directoryservice.describesnapshots": "ds:DescribeSnapshots",
    "directoryservice.describetrusts": "ds:DescribeTrusts",
    "directoryservice.disableclientauthentication": "ds:DisableClientAuthentication",
    "directoryservice.disableldaps": "ds:DisableLDAPS",
    "directoryservice.disableradius": "ds:DisableRadius",
    "directoryservice.disablesso": "ds:DisableSso",
    "directoryservice.enableclientauthentication": "ds:EnableClientAuthentication",
    "directoryservice.enableldaps": "ds:EnableLDAPS",
    "directoryservice.enableradius": "ds:EnableRadius",
    "directoryservice.enablesso": "ds:EnableSso",
    "directoryservice.getdirectorylimits": "ds:GetDirectoryLimits",
    "directoryservice.getsnapshotlimits": "ds:GetSnapshotLimits",
    "directoryservice.listcertificates": "ds:ListCertificates",
    "directoryservice.listiproutes": "ds:ListIpRoutes",
    "directoryservice.listlogsubscriptions": "ds:ListLogSubscriptions",
    "directoryservice.listschemaextensions": "ds:ListSchemaExtensions",
    "directoryservice.listtagsforresource": "ds:ListTagsForResource",
    "directoryservice.registercertificate": "ds:RegisterCertificate",
    "directoryservice.registereventtopic": "ds:RegisterEventTopic",
    "directoryservice.rejectshareddirectory": "ds:RejectSharedDirectory",
    "directoryservice.removeiproutes": "ds:RemoveIpRoutes",
    "directoryservice.removeregion": "ds:RemoveRegion",
    "directoryservice.removetagsfromresource": "ds:RemoveTagsFromResource",
    "directoryservice.resetuserpassword": "ds:ResetUserPassword",
    "directoryservice.restorefromsnapshot": "ds:RestoreFromSnapshot",
    "directoryservice.sharedirectory": "ds:ShareDirectory",
    "directoryservice.startschemaextension": "ds:StartSchemaExtension",
    "directoryservice.unsharedirectory": "ds:UnshareDirectory",
    "directoryservice.updateconditionalforwarder": "ds:UpdateConditionalForwarder",
    "directoryservice.updatenumberofdomaincontrollers": "ds:UpdateNumberOfDomainControllers",
    "directoryservice.updateradius": "ds:UpdateRadius",
    "directoryservice.updatetrust": "ds:UpdateTrust",
    "directoryservice.verifytrust": "ds:VerifyTrust",
    "discovery.associateconfigurationitemstoapplication": "discovery:AssociateConfigurationItemsToApplication",
    "discovery.batchdeleteimportdata": "discovery:BatchDeleteImportData",
    "discovery.createapplication": "discovery:CreateApplication",
    "discovery.createtags": "discovery:CreateTags",
    "discovery.deleteapplications": "discovery:DeleteApplications",
    "discovery.deletetags": "discovery:DeleteTags",
    "discovery.describeagents": "discovery:DescribeAgents",
    "discovery.describeconfigurations": "discovery:DescribeConfigurations",
    "discovery.describecontinuousexports": "discovery:DescribeContinuousExports",
    "discovery.describeexportconfigurations": "discovery:DescribeExportConfigurations",
    "discovery.describeexporttasks": "discovery:DescribeExportTasks",
    "discovery.describeimporttasks": "discovery:DescribeImportTasks",
    "discovery.describetags": "discovery:DescribeTags",
    "discovery.disassociateconfigurationitemsfromapplication": "discovery:DisassociateConfigurationItemsFromApplication",
    "discovery.exportconfigurations": "discovery:ExportConfigurations",
    "discovery.getdiscoverysummary": "discovery:GetDiscoverySummary",
    "discovery.listconfigurations": "discovery:ListConfigurations",
    "discovery.listserverneighbors": "discovery:ListServerNeighbors",
    "discovery.startcontinuousexport": "discovery:StartContinuousExport",
    "discovery.startdatacollectionbyagentids": "discovery:StartDataCollectionByAgentIds",
    "discovery.startexporttask": "discovery:StartExportTask",
    "discovery.startimporttask": "discovery:StartImportTask",
    "discovery.stopcontinuousexport": "discovery:StopContinuousExport",
    "discovery.stopdatacollectionbyagentids": "discovery:StopDataCollectionByAgentIds",
    "discovery.updateapplication": "discovery:UpdateApplication",
    "dlm.createlifecyclepolicy": "dlm:CreateLifecyclePolicy",
    "dlm.deletelifecyclepolicy": "dlm:DeleteLifecyclePolicy",
    "dlm.getlifecyclepolicies": "dlm:GetLifecyclePolicies",
    "dlm.getlifecyclepolicy": "dlm:GetLifecyclePolicy",
    "dlm.listtagsforresource": "dlm:ListTagsForResource",
    "dlm.tagresource": "dlm:TagResource",
    "dlm.untagresource": "dlm:UntagResource",
    "dlm.updatelifecyclepolicy": "dlm:UpdateLifecyclePolicy",
    "dms.addtagstoresource": "dms:AddTagsToResource",
    "dms.applypendingmaintenanceaction": "dms:ApplyPendingMaintenanceAction",
    "dms.cancelreplicationtaskassessmentrun": "dms:CancelReplicationTaskAssessmentRun",
    "dms.createendpoint": "dms:CreateEndpoint",
    "dms.createeventsubscription": "dms:CreateEventSubscription",
    "dms.createreplicationinstance": "dms:CreateReplicationInstance",
    "dms.createreplicationsubnetgroup": "dms:CreateReplicationSubnetGroup",
    "dms.createreplicationtask": "dms:CreateReplicationTask",
    "dms.deletecertificate": "dms:DeleteCertificate",
    "dms.deleteconnection": "dms:DeleteConnection",
    "dms.deleteendpoint": "dms:DeleteEndpoint",
    "dms.deleteeventsubscription": "dms:DeleteEventSubscription",
    "dms.deletereplicationinstance": "dms:DeleteReplicationInstance",
    "dms.deletereplicationsubnetgroup": "dms:DeleteReplicationSubnetGroup",
    "dms.deletereplicationtask": "dms:DeleteReplicationTask",
    "dms.deletereplicationtaskassessmentrun": "dms:DeleteReplicationTaskAssessmentRun",
    "dms.describeaccountattributes": "dms:DescribeAccountAttributes",
    "dms.describeapplicableindividualassessments": "dms:DescribeApplicableIndividualAssessments",
    "dms.describecertificates": "dms:DescribeCertificates",
    "dms.describeconnections": "dms:DescribeConnections",
    "dms.describeendpoints": "dms:DescribeEndpoints",
    "dms.describeendpointsettings": "dms:DescribeEndpointSettings",
    "dms.describeendpointtypes": "dms:DescribeEndpointTypes",
    "dms.describeeventcategories": "dms:DescribeEventCategories",
    "dms.describeevents": "dms:DescribeEvents",
    "dms.describeeventsubscriptions": "dms:DescribeEventSubscriptions",
    "dms.describeorderablereplicationinstances": "dms:DescribeOrderableReplicationInstances",
    "dms.describependingmaintenanceactions": "dms:DescribePendingMaintenanceActions",
    "dms.describerefreshschemasstatus": "dms:DescribeRefreshSchemasStatus",
    "dms.describereplicationinstances": "dms:DescribeReplicationInstances",
    "dms.describereplicationinstancetasklogs": "dms:DescribeReplicationInstanceTaskLogs",
    "dms.describereplicationsubnetgroups": "dms:DescribeReplicationSubnetGroups",
    "dms.describereplicationtaskassessmentresults": "dms:DescribeReplicationTaskAssessmentResults",
    "dms.describereplicationtaskassessmentruns": "dms:DescribeReplicationTaskAssessmentRuns",
    "dms.describereplicationtaskindividualassessments": "dms:DescribeReplicationTaskIndividualAssessments",
    "dms.describereplicationtasks": "dms:DescribeReplicationTasks",
    "dms.describeschemas": "dms:DescribeSchemas",
    "dms.describetablestatistics": "dms:DescribeTableStatistics",
    "dms.importcertificate": "dms:ImportCertificate",
    "dms.listtagsforresource": "dms:ListTagsForResource",
    "dms.modifyendpoint": "dms:ModifyEndpoint",
    "dms.modifyeventsubscription": "dms:ModifyEventSubscription",
    "dms.modifyreplicationinstance": "dms:ModifyReplicationInstance",
    "dms.modifyreplicationsubnetgroup": "dms:ModifyReplicationSubnetGroup",
    "dms.modifyreplicationtask": "dms:ModifyReplicationTask",
    "dms.movereplicationtask": "dms:MoveReplicationTask",
    "dms.rebootreplicationinstance": "dms:RebootReplicationInstance",
    "dms.refreshschemas": "dms:RefreshSchemas",
    "dms.reloadtables": "dms:ReloadTables",
    "dms.removetagsfromresource": "dms:RemoveTagsFromResource",
    "dms.startreplicationtask": "dms:StartReplicationTask",
    "dms.startreplicationtaskassessment": "dms:StartReplicationTaskAssessment",
    "dms.startreplicationtaskassessmentrun": "dms:StartReplicationTaskAssessmentRun",
    "dms.stopreplicationtask": "dms:StopReplicationTask",
    "dms.testconnection": "dms:TestConnection",
    "docdb.addsourceidentifiertosubscription": "rds:AddSourceIdentifierToSubscription",
    "docdb.addtagstoresource": "rds:AddTagsToResource",
    "docdb.applypendingmaintenanceaction": "rds:ApplyPendingMaintenanceAction",
    "docdb.copydbclusterparametergroup": "rds:CopyDBClusterParameterGroup",
    "docdb.copydbclustersnapshot": "rds:CopyDBClusterSnapshot",
    "docdb.createdbcluster": "rds:CreateDBCluster",
    "docdb.createdbclusterparametergroup": "rds:CreateDBClusterParameterGroup",
    "docdb.createdbclustersnapshot": "rds:CreateDBClusterSnapshot",
    "docdb.createdbinstance": "rds:CreateDBInstance",
    "docdb.createdbsubnetgroup": "rds:CreateDBSubnetGroup",
    "docdb.createeventsubscription": "rds:CreateEventSubscription",
    "docdb.createglobalcluster": "rds:CreateGlobalCluster",
    "docdb.deletedbcluster": "rds:DeleteDBCluster",
    "docdb.deletedbclusterparametergroup": "rds:DeleteDBClusterParameterGroup",
    "docdb.deletedbclustersnapshot": "rds:DeleteDBClusterSnapshot",
    "docdb.deletedbinstance": "rds:DeleteDBInstance",
    "docdb.deletedbsubnetgroup": "rds:DeleteDBSubnetGroup",
    "docdb.deleteeventsubscription": "rds:DeleteEventSubscription",
    "docdb.deleteglobalcluster": "rds:DeleteGlobalCluster",
    "docdb.describecertificates": "rds:DescribeCertificates",
    "docdb.describedbclusterparametergroups": "rds:DescribeDBClusterParameterGroups",
    "docdb.describedbclusterparameters": "rds:DescribeDBClusterParameters",
    "docdb.describedbclusters": "rds:DescribeDBClusters",
    "docdb.describedbclustersnapshotattributes": "rds:DescribeDBClusterSnapshotAttributes",
    "docdb.describedbclustersnapshots": "rds:DescribeDBClusterSnapshots",
    "docdb.describedbengineversions": "rds:DescribeDBEngineVersions",
    "docdb.describedbinstances": "rds:DescribeDBInstances",
    "docdb.describedbsubnetgroups": "rds:DescribeDBSubnetGroups",
    "docdb.describeenginedefaultclusterparameters": "rds:DescribeEngineDefaultClusterParameters",
    "docdb.describeeventcategories": "rds:DescribeEventCategories",
    "docdb.describeevents": "rds:DescribeEvents",
    "docdb.describeeventsubscriptions": "rds:DescribeEventSubscriptions",
    "docdb.describeglobalclusters": "rds:DescribeGlobalClusters",
    "docdb.describeorderabledbinstanceoptions": "rds:DescribeOrderableDBInstanceOptions",
    "docdb.describependingmaintenanceactions": "rds:DescribePendingMaintenanceActions",
    "docdb.failoverdbcluster": "rds:FailoverDBCluster",
    "docdb.listtagsforresource": "rds:ListTagsForResource",
    "docdb.modifydbcluster": "rds:ModifyDBCluster",
    "docdb.modifydbclusterparametergroup": "rds:ModifyDBClusterParameterGroup",
    "docdb.modifydbclustersnapshotattribute": "rds:ModifyDBClusterSnapshotAttribute",
    "docdb.modifydbinstance": "rds:ModifyDBInstance",
    "docdb.modifydbsubnetgroup": "rds:ModifyDBSubnetGroup",
    "docdb.modifyeventsubscription": "rds:ModifyEventSubscription",
    "docdb.modifyglobalcluster": "rds:ModifyGlobalCluster",
    "docdb.rebootdbinstance": "rds:RebootDBInstance",
    "docdb.removefromglobalcluster": "rds:RemoveFromGlobalCluster",
    "docdb.removesourceidentifierfromsubscription": "rds:RemoveSourceIdentifierFromSubscription",
    "docdb.removetagsfromresource": "rds:RemoveTagsFromResource",
    "docdb.resetdbclusterparametergroup": "rds:ResetDBClusterParameterGroup",
    "docdb.restoredbclusterfromsnapshot": "rds:RestoreDBClusterFromSnapshot",
    "docdb.restoredbclustertopointintime": "rds:RestoreDBClusterToPointInTime",
    "docdb.startdbcluster": "rds:StartDBCluster",
    "docdb.stopdbcluster": "rds:StopDBCluster",
    "drs.createextendedsourceserver": "drs:CreateExtendedSourceServer",
    "drs.createreplicationconfigurationtemplate": "drs:CreateReplicationConfigurationTemplate",
    "drs.deletejob": "drs:DeleteJob",
    "drs.deleterecoveryinstance": "drs:DeleteRecoveryInstance",
    "drs.deletereplicationconfigurationtemplate": "drs:DeleteReplicationConfigurationTemplate",
    "drs.deletesourceserver": "drs:DeleteSourceServer",
    "drs.describejoblogitems": "drs:DescribeJobLogItems",
    "drs.describejobs": "drs:DescribeJobs",
    "drs.describerecoveryinstances": "drs:DescribeRecoveryInstances",
    "drs.describerecoverysnapshots": "drs:DescribeRecoverySnapshots",
    "drs.describereplicationconfigurationtemplates": "drs:DescribeReplicationConfigurationTemplates",
    "drs.describesourceservers": "drs:DescribeSourceServers",
    "drs.disconnectrecoveryinstance": "drs:DisconnectRecoveryInstance",
    "drs.disconnectsourceserver": "drs:DisconnectSourceServer",
    "drs.getfailbackreplicationconfiguration": "drs:GetFailbackReplicationConfiguration",
    "drs.getlaunchconfiguration": "drs:GetLaunchConfiguration",
    "drs.getreplicationconfiguration": "drs:GetReplicationConfiguration",
    "drs.initializeservice": "drs:InitializeService",
    "drs.listextensiblesourceservers": "drs:ListExtensibleSourceServers",
    "drs.liststagingaccounts": "drs:ListStagingAccounts",
    "drs.listtagsforresource": "drs:ListTagsForResource",
    "drs.retrydatareplication": "drs:RetryDataReplication",
    "drs.startfailbacklaunch": "drs:StartFailbackLaunch",
    "drs.startrecovery": "drs:StartRecovery",
    "drs.stopfailback": "drs:StopFailback",
    "drs.tagresource": "drs:TagResource",
    "drs.terminaterecoveryinstances": "drs:TerminateRecoveryInstances",
    "drs.untagresource": "drs:UntagResource",
    "drs.updatefailbackreplicationconfiguration": "drs:UpdateFailbackReplicationConfiguration",
    "drs.updatelaunchconfiguration": "drs:UpdateLaunchConfiguration",
    "drs.updatereplicationconfiguration": "drs:UpdateReplicationConfiguration",
    "drs.updatereplicationconfigurationtemplate": "drs:UpdateReplicationConfigurationTemplate",
    "dynamodb.batchexecutestatement": "dynamodb:PartiQLSelect",
    "dynamodb.batchgetitem": "dynamodb:BatchGetItem",
    "dynamodb.batchwriteitem": "dynamodb:BatchWriteItem",
    "dynamodb.createbackup": "dynamodb:CreateBackup",
    "dynamodb.createglobaltable": "dynamodb:CreateGlobalTable",
    "dynamodb.createtable": "dynamodb:CreateTable",
    "dynamodb.deletebackup": "dynamodb:DeleteBackup",
    "dynamodb.deleteitem": "dynamodb:DeleteItem",
    "dynamodb.deletetable": "dynamodb:DeleteTable",
    "dynamodb.describebackup": "dynamodb:DescribeBackup",
    "dynamodb.describecontinuousbackups": "dynamodb:DescribeContinuousBackups",
    "dynamodb.describecontributorinsights": "dynamodb:DescribeContributorInsights",
    "dynamodb.describeexport": "dynamodb:DescribeExport",
    "dynamodb.describeglobaltable": "dynamodb:DescribeGlobalTable",
    "dynamodb.describeglobaltablesettings": "dynamodb:DescribeGlobalTableSettings",
    "dynamodb.describekinesisstreamingdestination": "dynamodb:DescribeKinesisStreamingDestination",
    "dynamodb.describelimits": "dynamodb:DescribeLimits",
    "dynamodb.describetable": "dynamodb:DescribeTable",
    "dynamodb.describetablereplicaautoscaling": "dynamodb:DescribeTableReplicaAutoScaling",
    "dynamodb.describetimetolive": "dynamodb:DescribeTimeToLive",
    "dynamodb.disablekinesisstreamingdestination": "dynamodb:DisableKinesisStreamingDestination",
    "dynamodb.enablekinesisstreamingdestination": "dynamodb:EnableKinesisStreamingDestination",
    "dynamodb.executestatement": "dynamodb:PartiQLSelect",
    "dynamodb.executetransaction": "dynamodb:PartiQLSelect",
    "dynamodb.exporttabletopointintime": "dynamodb:ExportTableToPointInTime",
    "dynamodb.getitem": "dynamodb:GetItem",
    "dynamodb.listbackups": "dynamodb:ListBackups",
    "dynamodb.listcontributorinsights": "dynamodb:ListContributorInsights",
    "dynamodb.listexports": "dynamodb:ListExports",
    "dynamodb.listglobaltables": "dynamodb:ListGlobalTables",
    "dynamodb.listtables": "dynamodb:ListTables",
    "dynamodb.listtagsofresource": "dynamodb:ListTagsOfResource",
    "dynamodb.putitem": "dynamodb:PutItem",
    "dynamodb.query": "dynamodb:Query",
    "dynamodb.restoretablefrombackup": "dynamodb:RestoreTableFromBackup",
    "dynamodb.restoretabletopointintime": "dynamodb:RestoreTableToPointInTime",
    "dynamodb.scan": "dynamodb:Scan",
    "dynamodb.tagresource": "dynamodb:TagResource",
    "dynamodb.transactgetitems": "dynamodb:GetItem",
    "dynamodb.transactwriteitems": "dynamodb:ConditionCheckItem",
    "dynamodb.untagresource": "dynamodb:UntagResource",
    "dynamodb.updatecontinuousbackups": "dynamodb:UpdateContinuousBackups",
    "dynamodb.updatecontributorinsights": "dynamodb:UpdateContributorInsights",
    "dynamodb.updateglobaltable": "dynamodb:UpdateGlobalTable",
    "dynamodb.updateglobaltablesettings": "dynamodb:UpdateGlobalTableSettings",
    "dynamodb.updateitem": "dynamodb:UpdateItem",
    "dynamodb.updatetable": "dynamodb:UpdateTable",
    "dynamodb.updatetablereplicaautoscaling": "dynamodb:UpdateTableReplicaAutoScaling",
    "dynamodb.updatetimetolive": "dynamodb:UpdateTimeToLive",
    "dynamodbstreams.describestream": "dynamodb:DescribeStream",
    "dynamodbstreams.getrecords": "dynamodb:GetRecords",
    "dynamodbstreams.getsharditerator": "dynamodb:GetShardIterator",
    "dynamodbstreams.liststreams": "dynamodb:ListStreams",
    "ebs.completesnapshot": "ebs:CompleteSnapshot",
    "ebs.getsnapshotblock": "ebs:GetSnapshotBlock",
    "ebs.listchangedblocks": "ebs:ListChangedBlocks",
    "ebs.listsnapshotblocks": "ebs:ListSnapshotBlocks",
    "ebs.putsnapshotblock": "ebs:PutSnapshotBlock",
    "ebs.startsnapshot": "ebs:StartSnapshot",
    "ec2.acceptreservedinstancesexchangequote": "ec2:AcceptReservedInstancesExchangeQuote",
    "ec2.accepttransitgatewaymulticastdomainassociations": "ec2:AcceptTransitGatewayMulticastDomainAssociations",
    "ec2.accepttransitgatewaypeeringattachment": "ec2:AcceptTransitGatewayPeeringAttachment",
    "ec2.accepttransitgatewayvpcattachment": "ec2:AcceptTransitGatewayVpcAttachment",
    "ec2.acceptvpcendpointconnections": "ec2:AcceptVpcEndpointConnections",
    "ec2.acceptvpcpeeringconnection": "ec2:AcceptVpcPeeringConnection",
    "ec2.advertisebyoipcidr": "ec2:AdvertiseByoipCidr",
    "ec2.allocateaddress": "ec2:AllocateAddress",
    "ec2.allocatehosts": "ec2:AllocateHosts",
    "ec2.allocateipampoolcidr": "ec2:AllocateIpamPoolCidr",
    "ec2.applysecuritygroupstoclientvpntargetnetwork": "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
    "ec2.assignipv6addresses": "ec2:AssignIpv6Addresses",
    "ec2.assignprivateipaddresses": "ec2:AssignPrivateIpAddresses",
    "ec2.associateaddress": "ec2:AssociateAddress",
    "ec2.associateclientvpntargetnetwork": "ec2:AssociateClientVpnTargetNetwork",
    "ec2.associatedhcpoptions": "ec2:AssociateDhcpOptions",
    "ec2.associateenclavecertificateiamrole": "ec2:AssociateEnclaveCertificateIamRole",
    "ec2.associateiaminstanceprofile": "ec2:AssociateIamInstanceProfile",
    "ec2.associateinstanceeventwindow": "ec2:AssociateInstanceEventWindow",
    "ec2.associateroutetable": "ec2:AssociateRouteTable",
    "ec2.associatesubnetcidrblock": "ec2:AssociateSubnetCidrBlock",
    "ec2.associatetransitgatewaymulticastdomain": "ec2:AssociateTransitGatewayMulticastDomain",
    "ec2.associatetransitgatewayroutetable": "ec2:AssociateTransitGatewayRouteTable",
    "ec2.associatetrunkinterface": "ec2:AssociateTrunkInterface",
    "ec2.associatevpccidrblock": "ec2:AssociateVpcCidrBlock",
    "ec2.attachclassiclinkvpc": "ec2:AttachClassicLinkVpc",
    "ec2.attachinternetgateway": "ec2:AttachInternetGateway",
    "ec2.attachnetworkinterface": "ec2:AttachNetworkInterface",
    "ec2.attachvolume": "ec2:AttachVolume",
    "ec2.attachvpngateway": "ec2:AttachVpnGateway",
    "ec2.authorizeclientvpningress": "ec2:AuthorizeClientVpnIngress",
    "ec2.authorizesecuritygroupegress": "ec2:AuthorizeSecurityGroupEgress",
    "ec2.authorizesecuritygroupingress": "ec2:AuthorizeSecurityGroupIngress",
    "ec2.bundleinstance": "ec2:BundleInstance",
    "ec2.cancelbundletask": "ec2:CancelBundleTask",
    "ec2.cancelcapacityreservation": "ec2:CancelCapacityReservation",
    "ec2.cancelcapacityreservationfleets": "ec2:CancelCapacityReservationFleets",
    "ec2.cancelconversiontask": "ec2:CancelConversionTask",
    "ec2.cancelexporttask": "ec2:CancelExportTask",
    "ec2.cancelimporttask": "ec2:CancelImportTask",
    "ec2.cancelreservedinstanceslisting": "ec2:CancelReservedInstancesListing",
    "ec2.cancelspotfleetrequests": "ec2:CancelSpotFleetRequests",
    "ec2.cancelspotinstancerequests": "ec2:CancelSpotInstanceRequests",
    "ec2.confirmproductinstance": "ec2:ConfirmProductInstance",
    "ec2.copyfpgaimage": "ec2:CopyFpgaImage",
    "ec2.copyimage": "ec2:CopyImage",
    "ec2.copysnapshot": "ec2:CopySnapshot",
    "ec2.createcapacityreservation": "ec2:CreateCapacityReservation",
    "ec2.createcapacityreservationfleet": "ec2:CreateCapacityReservationFleet",
    "ec2.createcarriergateway": "ec2:CreateCarrierGateway",
    "ec2.createclientvpnendpoint": "ec2:CreateClientVpnEndpoint",
    "ec2.createclientvpnroute": "ec2:CreateClientVpnRoute",
    "ec2.createcustomergateway": "ec2:CreateCustomerGateway",
    "ec2.createdefaultsubnet": "ec2:CreateDefaultSubnet",
    "ec2.createdefaultvpc": "ec2:CreateDefaultVpc",
    "ec2.createdhcpoptions": "ec2:CreateDhcpOptions",
    "ec2.createegressonlyinternetgateway": "ec2:CreateEgressOnlyInternetGateway",
    "ec2.createfleet": "ec2:CreateFleet",
    "ec2.createflowlogs": "ec2:CreateFlowLogs",
    "ec2.createfpgaimage": "ec2:CreateFpgaImage",
    "ec2.createimage": "ec2:CreateImage",
    "ec2.createinstanceeventwindow": "ec2:CreateInstanceEventWindow",
    "ec2.createinstanceexporttask": "ec2:CreateInstanceExportTask",
    "ec2.createinternetgateway": "ec2:CreateInternetGateway",
    "ec2.createipam": "ec2:CreateIpam",
    "ec2.createipampool": "ec2:CreateIpamPool",
    "ec2.createipamscope": "ec2:CreateIpamScope",
    "ec2.createkeypair": "ec2:CreateKeyPair",
    "ec2.createlaunchtemplate": "ec2:CreateLaunchTemplate",
    "ec2.createlaunchtemplateversion": "ec2:CreateLaunchTemplateVersion",
    "ec2.createlocalgatewayroute": "ec2:CreateLocalGatewayRoute",
    "ec2.createlocalgatewayroutetablevpcassociation": "ec2:CreateLocalGatewayRouteTableVpcAssociation",
    "ec2.createmanagedprefixlist": "ec2:CreateManagedPrefixList",
    "ec2.createnatgateway": "ec2:CreateNatGateway",
    "ec2.createnetworkacl": "ec2:CreateNetworkAcl",
    "ec2.createnetworkaclentry": "ec2:CreateNetworkAclEntry",
    "ec2.createnetworkinsightsaccessscope": "ec2:CreateNetworkInsightsAccessScope",
    "ec2.createnetworkinsightspath": "ec2:CreateNetworkInsightsPath",
    "ec2.createnetworkinterface": "ec2:CreateNetworkInterface",
    "ec2.createnetworkinterfacepermission": "ec2:CreateNetworkInterfacePermission",
    "ec2.createplacementgroup": "ec2:CreatePlacementGroup",
    "ec2.createpublicipv4pool": "ec2:CreatePublicIpv4Pool",
    "ec2.createreplacerootvolumetask": "ec2:CreateReplaceRootVolumeTask",
    "ec2.createreservedinstanceslisting": "ec2:CreateReservedInstancesListing",
    "ec2.createrestoreimagetask": "ec2:CreateRestoreImageTask",
    "ec2.createroute": "ec2:CreateRoute",
    "ec2.createroutetable": "ec2:CreateRouteTable",
    "ec2.createsecuritygroup": "ec2:CreateSecurityGroup",
    "ec2.createsnapshot": "ec2:CreateSnapshot",
    "ec2.createsnapshots": "ec2:CreateSnapshots",
    "ec2.createspotdatafeedsubscription": "ec2:CreateSpotDatafeedSubscription",
    "ec2.createstoreimagetask": "ec2:CreateStoreImageTask",
    "ec2.createsubnet": "ec2:CreateSubnet",
    "ec2.createsubnetcidrreservation": "ec2:CreateSubnetCidrReservation",
    "ec2.createtags": "ec2:CreateTags",
    "ec2.createtrafficmirrorfilter": "ec2:CreateTrafficMirrorFilter",
    "ec2.createtrafficmirrorfilterrule": "ec2:CreateTrafficMirrorFilterRule",
    "ec2.createtrafficmirrorsession": "ec2:CreateTrafficMirrorSession",
    "ec2.createtrafficmirrortarget": "ec2:CreateTrafficMirrorTarget",
    "ec2.createtransitgateway": "ec2:CreateTransitGateway",
    "ec2.createtransitgatewayconnect": "ec2:CreateTransitGatewayConnect",
    "ec2.createtransitgatewayconnectpeer": "ec2:CreateTransitGatewayConnectPeer",
    "ec2.createtransitgatewaymulticastdomain": "ec2:CreateTransitGatewayMulticastDomain",
    "ec2.createtransitgatewaypeeringattachment": "ec2:CreateTransitGatewayPeeringAttachment",
    "ec2.createtransitgatewayprefixlistreference": "ec2:CreateTransitGatewayPrefixListReference",
    "ec2.createtransitgatewayroute": "ec2:CreateTransitGatewayRoute",
    "ec2.createtransitgatewayroutetable": "ec2:CreateTransitGatewayRouteTable",
    "ec2.createtransitgatewayvpcattachment": "ec2:CreateTransitGatewayVpcAttachment",
    "ec2.createvolume": "ec2:CreateVolume",
    "ec2.createvpc": "ec2:CreateVpc",
    "ec2.createvpcendpoint": "ec2:CreateVpcEndpoint",
    "ec2.createvpcendpointconnectionnotification": "ec2:CreateVpcEndpointConnectionNotification",
    "ec2.createvpcendpointserviceconfiguration": "ec2:CreateVpcEndpointServiceConfiguration",
    "ec2.createvpcpeeringconnection": "ec2:CreateVpcPeeringConnection",
    "ec2.createvpnconnection": "ec2:CreateVpnConnection",
    "ec2.createvpnconnectionroute": "ec2:CreateVpnConnectionRoute",
    "ec2.createvpngateway": "ec2:CreateVpnGateway",
    "ec2.deletecarriergateway": "ec2:DeleteCarrierGateway",
    "ec2.deleteclientvpnendpoint": "ec2:DeleteClientVpnEndpoint",
    "ec2.deleteclientvpnroute": "ec2:DeleteClientVpnRoute",
    "ec2.deletecustomergateway": "ec2:DeleteCustomerGateway",
    "ec2.deletedhcpoptions": "ec2:DeleteDhcpOptions",
    "ec2.deleteegressonlyinternetgateway": "ec2:DeleteEgressOnlyInternetGateway",
    "ec2.deletefleets": "ec2:DeleteFleets",
    "ec2.deleteflowlogs": "ec2:DeleteFlowLogs",
    "ec2.deletefpgaimage": "ec2:DeleteFpgaImage",
    "ec2.deleteinstanceeventwindow": "ec2:DeleteInstanceEventWindow",
    "ec2.deleteinternetgateway": "ec2:DeleteInternetGateway",
    "ec2.deleteipam": "ec2:DeleteIpam",
    "ec2.deleteipampool": "ec2:DeleteIpamPool",
    "ec2.deleteipamscope": "ec2:DeleteIpamScope",
    "ec2.deletekeypair": "ec2:DeleteKeyPair",
    "ec2.deletelaunchtemplate": "ec2:DeleteLaunchTemplate",
    "ec2.deletelaunchtemplateversions": "ec2:DeleteLaunchTemplateVersions",
    "ec2.deletelocalgatewayroute": "ec2:DeleteLocalGatewayRoute",
    "ec2.deletelocalgatewayroutetablevpcassociation": "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
    "ec2.deletemanagedprefixlist": "ec2:DeleteManagedPrefixList",
    "ec2.deletenatgateway": "ec2:DeleteNatGateway",
    "ec2.deletenetworkacl": "ec2:DeleteNetworkAcl",
    "ec2.deletenetworkaclentry": "ec2:DeleteNetworkAclEntry",
    "ec2.deletenetworkinsightsaccessscope": "ec2:DeleteNetworkInsightsAccessScope",
    "ec2.deletenetworkinsightsaccessscopeanalysis": "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
    "ec2.deletenetworkinsightsanalysis": "ec2:DeleteNetworkInsightsAnalysis",
    "ec2.deletenetworkinsightspath": "ec2:DeleteNetworkInsightsPath",
    "ec2.deletenetworkinterface": "ec2:DeleteNetworkInterface",
    "ec2.deletenetworkinterfacepermission": "ec2:DeleteNetworkInterfacePermission",
    "ec2.deleteplacementgroup": "ec2:DeletePlacementGroup",
    "ec2.deletepublicipv4pool": "ec2:DeletePublicIpv4Pool",
    "ec2.deletequeuedreservedinstances": "ec2:DeleteQueuedReservedInstances",
    "ec2.deleteroute": "ec2:DeleteRoute",
    "ec2.deleteroutetable": "ec2:DeleteRouteTable",
    "ec2.deletesecuritygroup": "ec2:DeleteSecurityGroup",
    "ec2.deletesnapshot": "ec2:DeleteSnapshot",
    "ec2.deletespotdatafeedsubscription": "ec2:DeleteSpotDatafeedSubscription",
    "ec2.deletesubnet": "ec2:DeleteSubnet",
    "ec2.deletesubnetcidrreservation": "ec2:DeleteSubnetCidrReservation",
    "ec2.deletetags": "ec2:DeleteTags",
    "ec2.deletetrafficmirrorfilter": "ec2:DeleteTrafficMirrorFilter",
    "ec2.deletetrafficmirrorfilterrule": "ec2:DeleteTrafficMirrorFilterRule",
    "ec2.deletetrafficmirrorsession": "ec2:DeleteTrafficMirrorSession",
    "ec2.deletetrafficmirrortarget": "ec2:DeleteTrafficMirrorTarget",
    "ec2.deletetransitgateway": "ec2:DeleteTransitGateway",
    "ec2.deletetransitgatewayconnect": "ec2:DeleteTransitGatewayConnect",
    "ec2.deletetransitgatewayconnectpeer": "ec2:DeleteTransitGatewayConnectPeer",
    "ec2.deletetransitgatewaymulticastdomain": "ec2:DeleteTransitGatewayMulticastDomain",
    "ec2.deletetransitgatewaypeeringattachment": "ec2:DeleteTransitGatewayPeeringAttachment",
    "ec2.deletetransitgatewayprefixlistreference": "ec2:DeleteTransitGatewayPrefixListReference",
    "ec2.deletetransitgatewayroute": "ec2:DeleteTransitGatewayRoute",
    "ec2.deletetransitgatewayroutetable": "ec2:DeleteTransitGatewayRouteTable",
    "ec2.deletetransitgatewayvpcattachment": "ec2:DeleteTransitGatewayVpcAttachment",
    "ec2.deletevolume": "ec2:DeleteVolume",
    "ec2.deletevpc": "ec2:DeleteVpc",
    "ec2.deletevpcendpointconnectionnotifications": "ec2:DeleteVpcEndpointConnectionNotifications",
    "ec2.deletevpcendpoints": "ec2:DeleteVpcEndpoints",
    "ec2.deletevpcendpointserviceconfigurations": "ec2:DeleteVpcEndpointServiceConfigurations",
    "ec2.deletevpcpeeringconnection": "ec2:DeleteVpcPeeringConnection",
    "ec2.deletevpnconnection": "ec2:DeleteVpnConnection",
    "ec2.deletevpnconnectionroute": "ec2:DeleteVpnConnectionRoute",
    "ec2.deletevpngateway": "ec2:DeleteVpnGateway",
    "ec2.deprovisionbyoipcidr": "ec2:DeprovisionByoipCidr",
    "ec2.deprovisionipampoolcidr": "ec2:DeprovisionIpamPoolCidr",
    "ec2.deprovisionpublicipv4poolcidr": "ec2:DeprovisionPublicIpv4PoolCidr",
    "ec2.deregisterimage": "ec2:DeregisterImage",
    "ec2.deregisterinstanceeventnotificationattributes": "ec2:DeregisterInstanceEventNotificationAttributes",
    "ec2.deregistertransitgatewaymulticastgroupmembers": "ec2:DeregisterTransitGatewayMulticastGroupMembers",
    "ec2.deregistertransitgatewaymulticastgroupsources": "ec2:DeregisterTransitGatewayMulticastGroupSources",
    "ec2.describeaccountattributes": "ec2:DescribeAccountAttributes",
    "ec2.describeaddresses": "ec2:DescribeAddresses",
    "ec2.describeaddressesattribute": "ec2:DescribeAddressesAttribute",
    "ec2.describeaggregateidformat": "ec2:DescribeAggregateIdFormat",
    "ec2.describeavailabilityzones": "ec2:DescribeAvailabilityZones",
    "ec2.describebundletasks": "ec2:DescribeBundleTasks",
    "ec2.describebyoipcidrs": "ec2:DescribeByoipCidrs",
    "ec2.describecapacityreservationfleets": "ec2:DescribeCapacityReservationFleets",
    "ec2.describecapacityreservations": "ec2:DescribeCapacityReservations",
    "ec2.describecarriergateways": "ec2:DescribeCarrierGateways",
    "ec2.describeclassiclinkinstances": "ec2:DescribeClassicLinkInstances",
    "ec2.describeclientvpnauthorizationrules": "ec2:DescribeClientVpnAuthorizationRules",
    "ec2.describeclientvpnconnections": "ec2:DescribeClientVpnConnections",
    "ec2.describeclientvpnendpoints": "ec2:DescribeClientVpnEndpoints",
    "ec2.describeclientvpnroutes": "ec2:DescribeClientVpnRoutes",
    "ec2.describeclientvpntargetnetworks": "ec2:DescribeClientVpnTargetNetworks",
    "ec2.describecoippools": "ec2:DescribeCoipPools",
    "ec2.describeconversiontasks": "ec2:DescribeConversionTasks",
    "ec2.describecustomergateways": "ec2:DescribeCustomerGateways",
    "ec2.describedhcpoptions": "ec2:DescribeDhcpOptions",
    "ec2.describeegressonlyinternetgateways": "ec2:DescribeEgressOnlyInternetGateways",
    "ec2.describeelasticgpus": "ec2:DescribeElasticGpus",
    "ec2.describeexportimagetasks": "ec2:DescribeExportImageTasks",
    "ec2.describeexporttasks": "ec2:DescribeExportTasks",
    "ec2.describefastlaunchimages": "ec2:DescribeFastLaunchImages",
    "ec2.describefastsnapshotrestores": "ec2:DescribeFastSnapshotRestores",
    "ec2.describefleethistory": "ec2:DescribeFleetHistory",
    "ec2.describefleetinstances": "ec2:DescribeFleetInstances",
    "ec2.describefleets": "ec2:DescribeFleets",
    "ec2.describeflowlogs": "ec2:DescribeFlowLogs",
    "ec2.describefpgaimageattribute": "ec2:DescribeFpgaImageAttribute",
    "ec2.describefpgaimages": "ec2:DescribeFpgaImages",
    "ec2.describehostreservationofferings": "ec2:DescribeHostReservationOfferings",
    "ec2.describehostreservations": "ec2:DescribeHostReservations",
    "ec2.describehosts": "ec2:DescribeHosts",
    "ec2.describeiaminstanceprofileassociations": "ec2:DescribeIamInstanceProfileAssociations",
    "ec2.describeidentityidformat": "ec2:DescribeIdentityIdFormat",
    "ec2.describeidformat": "ec2:DescribeIdFormat",
    "ec2.describeimageattribute": "ec2:DescribeImageAttribute",
    "ec2.describeimages": "ec2:DescribeImages",
    "ec2.describeimportimagetasks": "ec2:DescribeImportImageTasks",
    "ec2.describeimportsnapshottasks": "ec2:DescribeImportSnapshotTasks",
    "ec2.describeinstanceattribute": "ec2:DescribeInstanceAttribute",
    "ec2.describeinstancecreditspecifications": "ec2:DescribeInstanceCreditSpecifications",
    "ec2.describeinstanceeventnotificationattributes": "ec2:DescribeInstanceEventNotificationAttributes",
    "ec2.describeinstanceeventwindows": "ec2:DescribeInstanceEventWindows",
    "ec2.describeinstances": "ec2:DescribeInstances",
    "ec2.describeinstancestatus": "ec2:DescribeInstanceStatus",
    "ec2.describeinstancetypeofferings": "ec2:DescribeInstanceTypeOfferings",
    "ec2.describeinstancetypes": "ec2:DescribeInstanceTypes",
    "ec2.describeinternetgateways": "ec2:DescribeInternetGateways",
    "ec2.describeipampools": "ec2:DescribeIpamPools",
    "ec2.describeipams": "ec2:DescribeIpams",
    "ec2.describeipamscopes": "ec2:DescribeIpamScopes",
    "ec2.describeipv6pools": "ec2:DescribeIpv6Pools",
    "ec2.describekeypairs": "ec2:DescribeKeyPairs",
    "ec2.describelaunchtemplates": "ec2:DescribeLaunchTemplates",
    "ec2.describelaunchtemplateversions": "ec2:DescribeLaunchTemplateVersions",
    "ec2.describelocalgatewayroutetables": "ec2:DescribeLocalGatewayRouteTables",
    "ec2.describelocalgatewayroutetablevirtualinterfacegroupassociations": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "ec2.describelocalgatewayroutetablevpcassociations": "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
    "ec2.describelocalgateways": "ec2:DescribeLocalGateways",
    "ec2.describelocalgatewayvirtualinterfacegroups": "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
    "ec2.describelocalgatewayvirtualinterfaces": "ec2:DescribeLocalGatewayVirtualInterfaces",
    "ec2.describemanagedprefixlists": "ec2:DescribeManagedPrefixLists",
    "ec2.describemovingaddresses": "ec2:DescribeMovingAddresses",
    "ec2.describenatgateways": "ec2:DescribeNatGateways",
    "ec2.describenetworkacls": "ec2:DescribeNetworkAcls",
    "ec2.describenetworkinsightsaccessscopeanalyses": "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
    "ec2.describenetworkinsightsaccessscopes": "ec2:DescribeNetworkInsightsAccessScopes",
    "ec2.describenetworkinsightsanalyses": "ec2:DescribeNetworkInsightsAnalyses",
    "ec2.describenetworkinsightspaths": "ec2:DescribeNetworkInsightsPaths",
    "ec2.describenetworkinterfaceattribute": "ec2:DescribeNetworkInterfaceAttribute",
    "ec2.describenetworkinterfacepermissions": "ec2:DescribeNetworkInterfacePermissions",
    "ec2.describenetworkinterfaces": "ec2:DescribeNetworkInterfaces",
    "ec2.describeplacementgroups": "ec2:DescribePlacementGroups",
    "ec2.describeprefixlists": "ec2:DescribePrefixLists",
    "ec2.describeprincipalidformat": "ec2:DescribePrincipalIdFormat",
    "ec2.describepublicipv4pools": "ec2:DescribePublicIpv4Pools",
    "ec2.describeregions": "ec2:DescribeRegions",
    "ec2.describereplacerootvolumetasks": "ec2:DescribeReplaceRootVolumeTasks",
    "ec2.describereservedinstances": "ec2:DescribeReservedInstances",
    "ec2.describereservedinstanceslistings": "ec2:DescribeReservedInstancesListings",
    "ec2.describereservedinstancesmodifications": "ec2:DescribeReservedInstancesModifications",
    "ec2.describereservedinstancesofferings": "ec2:DescribeReservedInstancesOfferings",
    "ec2.describeroutetables": "ec2:DescribeRouteTables",
    "ec2.describescheduledinstanceavailability": "ec2:DescribeScheduledInstanceAvailability",
    "ec2.describescheduledinstances": "ec2:DescribeScheduledInstances",
    "ec2.describesecuritygroupreferences": "ec2:DescribeSecurityGroupReferences",
    "ec2.describesecuritygrouprules": "ec2:DescribeSecurityGroupRules",
    "ec2.describesecuritygroups": "ec2:DescribeSecurityGroups",
    "ec2.describesnapshotattribute": "ec2:DescribeSnapshotAttribute",
    "ec2.describesnapshots": "ec2:DescribeSnapshots",
    "ec2.describesnapshottierstatus": "ec2:DescribeSnapshotTierStatus",
    "ec2.describespotdatafeedsubscription": "ec2:DescribeSpotDatafeedSubscription",
    "ec2.describespotfleetinstances": "ec2:DescribeSpotFleetInstances",
    "ec2.describespotfleetrequesthistory": "ec2:DescribeSpotFleetRequestHistory",
    "ec2.describespotfleetrequests": "ec2:DescribeSpotFleetRequests",
    "ec2.describespotinstancerequests": "ec2:DescribeSpotInstanceRequests",
    "ec2.describespotpricehistory": "ec2:DescribeSpotPriceHistory",
    "ec2.describestalesecuritygroups": "ec2:DescribeStaleSecurityGroups",
    "ec2.describestoreimagetasks": "ec2:DescribeStoreImageTasks",
    "ec2.describesubnets": "ec2:DescribeSubnets",
    "ec2.describetags": "ec2:DescribeTags",
    "ec2.describetrafficmirrorfilters": "ec2:DescribeTrafficMirrorFilters",
    "ec2.describetrafficmirrorsessions": "ec2:DescribeTrafficMirrorSessions",
    "ec2.describetrafficmirrortargets": "ec2:DescribeTrafficMirrorTargets",
    "ec2.describetransitgatewayattachments": "ec2:DescribeTransitGatewayAttachments",
    "ec2.describetransitgatewayconnectpeers": "ec2:DescribeTransitGatewayConnectPeers",
    "ec2.describetransitgatewayconnects": "ec2:DescribeTransitGatewayConnects",
    "ec2.describetransitgatewaymulticastdomains": "ec2:DescribeTransitGatewayMulticastDomains",
    "ec2.describetransitgatewaypeeringattachments": "ec2:DescribeTransitGatewayPeeringAttachments",
    "ec2.describetransitgatewayroutetables": "ec2:DescribeTransitGatewayRouteTables",
    "ec2.describetransitgateways": "ec2:DescribeTransitGateways",
    "ec2.describetransitgatewayvpcattachments": "ec2:DescribeTransitGatewayVpcAttachments",
    "ec2.describetrunkinterfaceassociations": "ec2:DescribeTrunkInterfaceAssociations",
    "ec2.describevolumeattribute": "ec2:DescribeVolumeAttribute",
    "ec2.describevolumes": "ec2:DescribeVolumes",
    "ec2.describevolumesmodifications": "ec2:DescribeVolumesModifications",
    "ec2.describevolumestatus": "ec2:DescribeVolumeStatus",
    "ec2.describevpcattribute": "ec2:DescribeVpcAttribute",
    "ec2.describevpcclassiclink": "ec2:DescribeVpcClassicLink",
    "ec2.describevpcclassiclinkdnssupport": "ec2:DescribeVpcClassicLinkDnsSupport",
    "ec2.describevpcendpointconnectionnotifications": "ec2:DescribeVpcEndpointConnectionNotifications",
    "ec2.describevpcendpointconnections": "ec2:DescribeVpcEndpointConnections",
    "ec2.describevpcendpoints": "ec2:DescribeVpcEndpoints",
    "ec2.describevpcendpointserviceconfigurations": "ec2:DescribeVpcEndpointServiceConfigurations",
    "ec2.describevpcendpointservicepermissions": "ec2:DescribeVpcEndpointServicePermissions",
    "ec2.describevpcendpointservices": "ec2:DescribeVpcEndpointServices",
    "ec2.describevpcpeeringconnections": "ec2:DescribeVpcPeeringConnections",
    "ec2.describevpcs": "ec2:DescribeVpcs",
    "ec2.describevpnconnections": "ec2:DescribeVpnConnections",
    "ec2.describevpngateways": "ec2:DescribeVpnGateways",
    "ec2.detachclassiclinkvpc": "ec2:DetachClassicLinkVpc",
    "ec2.detachinternetgateway": "ec2:DetachInternetGateway",
    "ec2.detachnetworkinterface": "ec2:DetachNetworkInterface",
    "ec2.detachvolume": "ec2:DetachVolume",
    "ec2.detachvpngateway": "ec2:DetachVpnGateway",
    "ec2.disableebsencryptionbydefault": "ec2:DisableEbsEncryptionByDefault",
    "ec2.disablefastlaunch": "ec2:DisableFastLaunch",
    "ec2.disablefastsnapshotrestores": "ec2:DisableFastSnapshotRestores",
    "ec2.disableimagedeprecation": "ec2:DisableImageDeprecation",
    "ec2.disableipamorganizationadminaccount": "ec2:DisableIpamOrganizationAdminAccount",
    "ec2.disableserialconsoleaccess": "ec2:DisableSerialConsoleAccess",
    "ec2.disabletransitgatewayroutetablepropagation": "ec2:DisableTransitGatewayRouteTablePropagation",
    "ec2.disablevgwroutepropagation": "ec2:DisableVgwRoutePropagation",
    "ec2.disablevpcclassiclink": "ec2:DisableVpcClassicLink",
    "ec2.disablevpcclassiclinkdnssupport": "ec2:DisableVpcClassicLinkDnsSupport",
    "ec2.disassociateaddress": "ec2:DisassociateAddress",
    "ec2.disassociateclientvpntargetnetwork": "ec2:DisassociateClientVpnTargetNetwork",
    "ec2.disassociateenclavecertificateiamrole": "ec2:DisassociateEnclaveCertificateIamRole",
    "ec2.disassociateiaminstanceprofile": "ec2:DisassociateIamInstanceProfile",
    "ec2.disassociateinstanceeventwindow": "ec2:DisassociateInstanceEventWindow",
    "ec2.disassociateroutetable": "ec2:DisassociateRouteTable",
    "ec2.disassociatesubnetcidrblock": "ec2:DisassociateSubnetCidrBlock",
    "ec2.disassociatetransitgatewaymulticastdomain": "ec2:DisassociateTransitGatewayMulticastDomain",
    "ec2.disassociatetransitgatewayroutetable": "ec2:DisassociateTransitGatewayRouteTable",
    "ec2.disassociatetrunkinterface": "ec2:DisassociateTrunkInterface",
    "ec2.disassociatevpccidrblock": "ec2:DisassociateVpcCidrBlock",
    "ec2.enableebsencryptionbydefault": "ec2:EnableEbsEncryptionByDefault",
    "ec2.enablefastlaunch": "ec2:EnableFastLaunch",
    "ec2.enablefastsnapshotrestores": "ec2:EnableFastSnapshotRestores",
    "ec2.enableimagedeprecation": "ec2:EnableImageDeprecation",
    "ec2.enableipamorganizationadminaccount": "ec2:EnableIpamOrganizationAdminAccount",
    "ec2.enableserialconsoleaccess": "ec2:EnableSerialConsoleAccess",
    "ec2.enabletransitgatewayroutetablepropagation": "ec2:EnableTransitGatewayRouteTablePropagation",
    "ec2.enablevgwroutepropagation": "ec2:EnableVgwRoutePropagation",
    "ec2.enablevolumeio": "ec2:EnableVolumeIO",
    "ec2.enablevpcclassiclink": "ec2:EnableVpcClassicLink",
    "ec2.enablevpcclassiclinkdnssupport": "ec2:EnableVpcClassicLinkDnsSupport",
    "ec2.exportclientvpnclientcertificaterevocationlist": "ec2:ExportClientVpnClientCertificateRevocationList",
    "ec2.exportclientvpnclientconfiguration": "ec2:ExportClientVpnClientConfiguration",
    "ec2.exportimage": "ec2:ExportImage",
    "ec2.exporttransitgatewayroutes": "ec2:ExportTransitGatewayRoutes",
    "ec2.getassociatedenclavecertificateiamroles": "ec2:GetAssociatedEnclaveCertificateIamRoles",
    "ec2.getassociatedipv6poolcidrs": "ec2:GetAssociatedIpv6PoolCidrs",
    "ec2.getcapacityreservationusage": "ec2:GetCapacityReservationUsage",
    "ec2.getcoippoolusage": "ec2:GetCoipPoolUsage",
    "ec2.getconsoleoutput": "ec2:GetConsoleOutput",
    "ec2.getconsolescreenshot": "ec2:GetConsoleScreenshot",
    "ec2.getdefaultcreditspecification": "ec2:GetDefaultCreditSpecification",
    "ec2.getebsdefaultkmskeyid": "ec2:GetEbsDefaultKmsKeyId",
    "ec2.getebsencryptionbydefault": "ec2:GetEbsEncryptionByDefault",
    "ec2.getflowlogsintegrationtemplate": "ec2:GetFlowLogsIntegrationTemplate",
    "ec2.getgroupsforcapacityreservation": "ec2:GetGroupsForCapacityReservation",
    "ec2.gethostreservationpurchasepreview": "ec2:GetHostReservationPurchasePreview",
    "ec2.getinstancetypesfrominstancerequirements": "ec2:GetInstanceTypesFromInstanceRequirements",
    "ec2.getinstanceuefidata": "ec2:GetInstanceUefiData",
    "ec2.getipamaddresshistory": "ec2:GetIpamAddressHistory",
    "ec2.getipampoolallocations": "ec2:GetIpamPoolAllocations",
    "ec2.getipampoolcidrs": "ec2:GetIpamPoolCidrs",
    "ec2.getipamresourcecidrs": "ec2:GetIpamResourceCidrs",
    "ec2.getlaunchtemplatedata": "ec2:GetLaunchTemplateData",
    "ec2.getmanagedprefixlistassociations": "ec2:GetManagedPrefixListAssociations",
    "ec2.getmanagedprefixlistentries": "ec2:GetManagedPrefixListEntries",
    "ec2.getnetworkinsightsaccessscopeanalysisfindings": "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
    "ec2.getnetworkinsightsaccessscopecontent": "ec2:GetNetworkInsightsAccessScopeContent",
    "ec2.getpassworddata": "ec2:GetPasswordData",
    "ec2.getreservedinstancesexchangequote": "ec2:GetReservedInstancesExchangeQuote",
    "ec2.getserialconsoleaccessstatus": "ec2:GetSerialConsoleAccessStatus",
    "ec2.getspotplacementscores": "ec2:GetSpotPlacementScores",
    "ec2.getsubnetcidrreservations": "ec2:GetSubnetCidrReservations",
    "ec2.gettransitgatewayattachmentpropagations": "ec2:GetTransitGatewayAttachmentPropagations",
    "ec2.gettransitgatewaymulticastdomainassociations": "ec2:GetTransitGatewayMulticastDomainAssociations",
    "ec2.gettransitgatewayprefixlistreferences": "ec2:GetTransitGatewayPrefixListReferences",
    "ec2.gettransitgatewayroutetableassociations": "ec2:GetTransitGatewayRouteTableAssociations",
    "ec2.gettransitgatewayroutetablepropagations": "ec2:GetTransitGatewayRouteTablePropagations",
    "ec2.getvpnconnectiondevicesampleconfiguration": "ec2:GetVpnConnectionDeviceSampleConfiguration",
    "ec2.getvpnconnectiondevicetypes": "ec2:GetVpnConnectionDeviceTypes",
    "ec2.importclientvpnclientcertificaterevocationlist": "ec2:ImportClientVpnClientCertificateRevocationList",
    "ec2.importimage": "ec2:ImportImage",
    "ec2.importinstance": "ec2:ImportInstance",
    "ec2.importkeypair": "ec2:ImportKeyPair",
    "ec2.importsnapshot": "ec2:ImportSnapshot",
    "ec2.importvolume": "ec2:ImportVolume",
    "ec2.listimagesinrecyclebin": "ec2:ListImagesInRecycleBin",
    "ec2.listsnapshotsinrecyclebin": "ec2:ListSnapshotsInRecycleBin",
    "ec2.modifyaddressattribute": "ec2:ModifyAddressAttribute",
    "ec2.modifyavailabilityzonegroup": "ec2:ModifyAvailabilityZoneGroup",
    "ec2.modifycapacityreservation": "ec2:ModifyCapacityReservation",
    "ec2.modifycapacityreservationfleet": "ec2:ModifyCapacityReservationFleet",
    "ec2.modifyclientvpnendpoint": "ec2:ModifyClientVpnEndpoint",
    "ec2.modifydefaultcreditspecification": "ec2:ModifyDefaultCreditSpecification",
    "ec2.modifyebsdefaultkmskeyid": "ec2:ModifyEbsDefaultKmsKeyId",
    "ec2.modifyfleet": "ec2:ModifyFleet",
    "ec2.modifyfpgaimageattribute": "ec2:ModifyFpgaImageAttribute",
    "ec2.modifyhosts": "ec2:ModifyHosts",
    "ec2.modifyidentityidformat": "ec2:ModifyIdentityIdFormat",
    "ec2.modifyidformat": "ec2:ModifyIdFormat",
    "ec2.modifyimageattribute": "ec2:ModifyImageAttribute",
    "ec2.modifyinstanceattribute": "ec2:ModifyInstanceAttribute",
    "ec2.modifyinstancecapacityreservationattributes": "ec2:ModifyInstanceCapacityReservationAttributes",
    "ec2.modifyinstancecreditspecification": "ec2:ModifyInstanceCreditSpecification",
    "ec2.modifyinstanceeventstarttime": "ec2:ModifyInstanceEventStartTime",
    "ec2.modifyinstanceeventwindow": "ec2:ModifyInstanceEventWindow",
    "ec2.modifyinstancemaintenanceoptions": "ec2:ModifyInstanceMaintenanceOptions",
    "ec2.modifyinstancemetadataoptions": "ec2:ModifyInstanceMetadataOptions",
    "ec2.modifyinstanceplacement": "ec2:ModifyInstancePlacement",
    "ec2.modifyipam": "ec2:ModifyIpam",
    "ec2.modifyipampool": "ec2:ModifyIpamPool",
    "ec2.modifyipamresourcecidr": "ec2:ModifyIpamResourceCidr",
    "ec2.modifyipamscope": "ec2:ModifyIpamScope",
    "ec2.modifylaunchtemplate": "ec2:ModifyLaunchTemplate",
    "ec2.modifymanagedprefixlist": "ec2:ModifyManagedPrefixList",
    "ec2.modifynetworkinterfaceattribute": "ec2:ModifyNetworkInterfaceAttribute",
    "ec2.modifyprivatednsnameoptions": "ec2:ModifyPrivateDnsNameOptions",
    "ec2.modifyreservedinstances": "ec2:ModifyReservedInstances",
    "ec2.modifysecuritygrouprules": "ec2:ModifySecurityGroupRules",
    "ec2.modifysnapshotattribute": "ec2:ModifySnapshotAttribute",
    "ec2.modifysnapshottier": "ec2:ModifySnapshotTier",
    "ec2.modifyspotfleetrequest": "ec2:ModifySpotFleetRequest",
    "ec2.modifysubnetattribute": "ec2:ModifySubnetAttribute",
    "ec2.modifytrafficmirrorfilternetworkservices": "ec2:ModifyTrafficMirrorFilterNetworkServices",
    "ec2.modifytrafficmirrorfilterrule": "ec2:ModifyTrafficMirrorFilterRule",
    "ec2.modifytrafficmirrorsession": "ec2:ModifyTrafficMirrorSession",
    "ec2.modifytransitgateway": "ec2:ModifyTransitGateway",
    "ec2.modifytransitgatewayprefixlistreference": "ec2:ModifyTransitGatewayPrefixListReference",
    "ec2.modifytransitgatewayvpcattachment": "ec2:ModifyTransitGatewayVpcAttachment",
    "ec2.modifyvolume": "ec2:ModifyVolume",
    "ec2.modifyvolumeattribute": "ec2:ModifyVolumeAttribute",
    "ec2.modifyvpcattribute": "ec2:ModifyVpcAttribute",
    "ec2.modifyvpcendpoint": "ec2:ModifyVpcEndpoint",
    "ec2.modifyvpcendpointconnectionnotification": "ec2:ModifyVpcEndpointConnectionNotification",
    "ec2.modifyvpcendpointserviceconfiguration": "ec2:ModifyVpcEndpointServiceConfiguration",
    "ec2.modifyvpcendpointservicepayerresponsibility": "ec2:ModifyVpcEndpointServicePayerResponsibility",
    "ec2.modifyvpcendpointservicepermissions": "ec2:ModifyVpcEndpointServicePermissions",
    "ec2.modifyvpcpeeringconnectionoptions": "ec2:ModifyVpcPeeringConnectionOptions",
    "ec2.modifyvpctenancy": "ec2:ModifyVpcTenancy",
    "ec2.modifyvpnconnection": "ec2:ModifyVpnConnection",
    "ec2.modifyvpnconnectionoptions": "ec2:ModifyVpnConnectionOptions",
    "ec2.modifyvpntunnelcertificate": "ec2:ModifyVpnTunnelCertificate",
    "ec2.modifyvpntunneloptions": "ec2:ModifyVpnTunnelOptions",
    "ec2.monitorinstances": "ec2:MonitorInstances",
    "ec2.moveaddresstovpc": "ec2:MoveAddressToVpc",
    "ec2.movebyoipcidrtoipam": "ec2:MoveByoipCidrToIpam",
    "ec2.provisionbyoipcidr": "ec2:ProvisionByoipCidr",
    "ec2.provisionipampoolcidr": "ec2:ProvisionIpamPoolCidr",
    "ec2.provisionpublicipv4poolcidr": "ec2:ProvisionPublicIpv4PoolCidr",
    "ec2.purchasehostreservation": "ec2:PurchaseHostReservation",
    "ec2.purchasereservedinstancesoffering": "ec2:PurchaseReservedInstancesOffering",
    "ec2.purchasescheduledinstances": "ec2:PurchaseScheduledInstances",
    "ec2.rebootinstances": "ec2:RebootInstances",
    "ec2.registerimage": "ec2:RegisterImage",
    "ec2.registerinstanceeventnotificationattributes": "ec2:RegisterInstanceEventNotificationAttributes",
    "ec2.registertransitgatewaymulticastgroupmembers": "ec2:RegisterTransitGatewayMulticastGroupMembers",
    "ec2.registertransitgatewaymulticastgroupsources": "ec2:RegisterTransitGatewayMulticastGroupSources",
    "ec2.rejecttransitgatewaymulticastdomainassociations": "ec2:RejectTransitGatewayMulticastDomainAssociations",
    "ec2.rejecttransitgatewaypeeringattachment": "ec2:RejectTransitGatewayPeeringAttachment",
    "ec2.rejecttransitgatewayvpcattachment": "ec2:RejectTransitGatewayVpcAttachment",
    "ec2.rejectvpcendpointconnections": "ec2:RejectVpcEndpointConnections",
    "ec2.rejectvpcpeeringconnection": "ec2:RejectVpcPeeringConnection",
    "ec2.releaseaddress": "ec2:ReleaseAddress",
    "ec2.releasehosts": "ec2:ReleaseHosts",
    "ec2.releaseipampoolallocation": "ec2:ReleaseIpamPoolAllocation",
    "ec2.replaceiaminstanceprofileassociation": "ec2:ReplaceIamInstanceProfileAssociation",
    "ec2.replacenetworkaclassociation": "ec2:ReplaceNetworkAclAssociation",
    "ec2.replacenetworkaclentry": "ec2:ReplaceNetworkAclEntry",
    "ec2.replaceroute": "ec2:ReplaceRoute",
    "ec2.replaceroutetableassociation": "ec2:ReplaceRouteTableAssociation",
    "ec2.replacetransitgatewayroute": "ec2:ReplaceTransitGatewayRoute",
    "ec2.reportinstancestatus": "ec2:ReportInstanceStatus",
    "ec2.requestspotfleet": "ec2:RequestSpotFleet",
    "ec2.requestspotinstances": "ec2:RequestSpotInstances",
    "ec2.resetaddressattribute": "ec2:ResetAddressAttribute",
    "ec2.resetebsdefaultkmskeyid": "ec2:ResetEbsDefaultKmsKeyId",
    "ec2.resetfpgaimageattribute": "ec2:ResetFpgaImageAttribute",
    "ec2.resetimageattribute": "ec2:ResetImageAttribute",
    "ec2.resetinstanceattribute": "ec2:ResetInstanceAttribute",
    "ec2.resetnetworkinterfaceattribute": "ec2:ResetNetworkInterfaceAttribute",
    "ec2.resetsnapshotattribute": "ec2:ResetSnapshotAttribute",
    "ec2.restoreaddresstoclassic": "ec2:RestoreAddressToClassic",
    "ec2.restoreimagefromrecyclebin": "ec2:RestoreImageFromRecycleBin",
    "ec2.restoremanagedprefixlistversion": "ec2:RestoreManagedPrefixListVersion",
    "ec2.restoresnapshotfromrecyclebin": "ec2:RestoreSnapshotFromRecycleBin",
    "ec2.restoresnapshottier": "ec2:RestoreSnapshotTier",
    "ec2.revokeclientvpningress": "ec2:RevokeClientVpnIngress",
    "ec2.revokesecuritygroupegress": "ec2:RevokeSecurityGroupEgress",
    "ec2.revokesecuritygroupingress": "ec2:RevokeSecurityGroupIngress",
    "ec2.runinstances": "ec2:RunInstances",
    "ec2.runscheduledinstances": "ec2:RunScheduledInstances",
    "ec2.searchlocalgatewayroutes": "ec2:SearchLocalGatewayRoutes",
    "ec2.searchtransitgatewaymulticastgroups": "ec2:SearchTransitGatewayMulticastGroups",
    "ec2.searchtransitgatewayroutes": "ec2:SearchTransitGatewayRoutes",
    "ec2.senddiagnosticinterrupt": "ec2:SendDiagnosticInterrupt",
    "ec2.startinstances": "ec2:StartInstances",
    "ec2.startnetworkinsightsaccessscopeanalysis": "ec2:StartNetworkInsightsAccessScopeAnalysis",
    "ec2.startnetworkinsightsanalysis": "ec2:StartNetworkInsightsAnalysis",
    "ec2.startvpcendpointserviceprivatednsverification": "ec2:StartVpcEndpointServicePrivateDnsVerification",
    "ec2.stopinstances": "ec2:StopInstances",
    "ec2.terminateclientvpnconnections": "ec2:TerminateClientVpnConnections",
    "ec2.terminateinstances": "ec2:TerminateInstances",
    "ec2.unassignipv6addresses": "ec2:UnassignIpv6Addresses",
    "ec2.unassignprivateipaddresses": "ec2:UnassignPrivateIpAddresses",
    "ec2.unmonitorinstances": "ec2:UnmonitorInstances",
    "ec2.updatesecuritygroupruledescriptionsegress": "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
    "ec2.updatesecuritygroupruledescriptionsingress": "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
    "ec2.withdrawbyoipcidr": "ec2:WithdrawByoipCidr",
    "ec2instanceconnect.sendserialconsolesshpublickey": "ec2-instance-connect:SendSerialConsoleSSHPublicKey",
    "ec2instanceconnect.sendsshpublickey": "ec2-instance-connect:SendSSHPublicKey",
    "ecr.batchchecklayeravailability": "ecr:BatchCheckLayerAvailability",
    "ecr.batchdeleteimage": "ecr:BatchDeleteImage",
    "ecr.batchgetimage": "ecr:BatchGetImage",
    "ecr.batchgetrepositoryscanningconfiguration": "ecr:BatchGetRepositoryScanningConfiguration",
    "ecr.completelayerupload": "ecr:CompleteLayerUpload",
    "ecr.createpullthroughcacherule": "ecr:CreatePullThroughCacheRule",
    "ecr.createrepository": "ecr:CreateRepository",
    "ecr.deletelifecyclepolicy": "ecr:DeleteLifecyclePolicy",
    "ecr.deletepullthroughcacherule": "ecr:DeletePullThroughCacheRule",
    "ecr.deleteregistrypolicy": "ecr:DeleteRegistryPolicy",
    "ecr.deleterepository": "ecr:DeleteRepository",
    "ecr.deleterepositorypolicy": "ecr:DeleteRepositoryPolicy",
    "ecr.describeimagereplicationstatus": "ecr:DescribeImageReplicationStatus",
    "ecr.describeimages": "ecr:DescribeImages",
    "ecr.describeimagescanfindings": "ecr:DescribeImageScanFindings",
    "ecr.describepullthroughcacherules": "ecr:DescribePullThroughCacheRules",
    "ecr.describeregistry": "ecr:DescribeRegistry",
    "ecr.describerepositories": "ecr:DescribeRepositories",
    "ecr.getauthorizationtoken": "ecr:GetAuthorizationToken",
    "ecr.getdownloadurlforlayer": "ecr:GetDownloadUrlForLayer",
    "ecr.getlifecyclepolicy": "ecr:GetLifecyclePolicy",
    "ecr.getlifecyclepolicypreview": "ecr:GetLifecyclePolicyPreview",
    "ecr.getregistrypolicy": "ecr:GetRegistryPolicy",
    "ecr.getregistryscanningconfiguration": "ecr:GetRegistryScanningConfiguration",
    "ecr.getrepositorypolicy": "ecr:GetRepositoryPolicy",
    "ecr.initiatelayerupload": "ecr:InitiateLayerUpload",
    "ecr.listimages": "ecr:ListImages",
    "ecr.listtagsforresource": "ecr:ListTagsForResource",
    "ecr.putimage": "ecr:PutImage",
    "ecr.putimagescanningconfiguration": "ecr:PutImageScanningConfiguration",
    "ecr.putimagetagmutability": "ecr:PutImageTagMutability",
    "ecr.putlifecyclepolicy": "ecr:PutLifecyclePolicy",
    "ecr.putregistrypolicy": "ecr:PutRegistryPolicy",
    "ecr.putregistryscanningconfiguration": "ecr:PutRegistryScanningConfiguration",
    "ecr.putreplicationconfiguration": "ecr:PutReplicationConfiguration",
    "ecr.setrepositorypolicy": "ecr:SetRepositoryPolicy",
    "ecr.startimagescan": "ecr:StartImageScan",
    "ecr.startlifecyclepolicypreview": "ecr:StartLifecyclePolicyPreview",
    "ecr.tagresource": "ecr:TagResource",
    "ecr.untagresource": "ecr:UntagResource",
    "ecr.uploadlayerpart": "ecr:UploadLayerPart",
    "ecrpublic.batchchecklayeravailability": "ecr-public:BatchCheckLayerAvailability",
    "ecrpublic.batchdeleteimage": "ecr-public:BatchDeleteImage",
    "ecrpublic.completelayerupload": "ecr-public:CompleteLayerUpload",
    "ecrpublic.createrepository": "ecr-public:CreateRepository",
    "ecrpublic.deleterepository": "ecr-public:DeleteRepository",
    "ecrpublic.deleterepositorypolicy": "ecr-public:DeleteRepositoryPolicy",
    "ecrpublic.describeimages": "ecr-public:DescribeImages",
    "ecrpublic.describeimagetags": "ecr-public:DescribeImageTags",
    "ecrpublic.describeregistries": "ecr-public:DescribeRegistries",
    "ecrpublic.describerepositories": "ecr-public:DescribeRepositories",
    "ecrpublic.getauthorizationtoken": "ecr-public:GetAuthorizationToken",
    "ecrpublic.getregistrycatalogdata": "ecr-public:GetRegistryCatalogData",
    "ecrpublic.getrepositorycatalogdata": "ecr-public:GetRepositoryCatalogData",
    "ecrpublic.getrepositorypolicy": "ecr-public:GetRepositoryPolicy",
    "ecrpublic.initiatelayerupload": "ecr-public:InitiateLayerUpload",
    "ecrpublic.listtagsforresource": "ecr-public:ListTagsForResource",
    "ecrpublic.putimage": "ecr-public:PutImage",
    "ecrpublic.putregistrycatalogdata": "ecr-public:PutRegistryCatalogData",
    "ecrpublic.putrepositorycatalogdata": "ecr-public:PutRepositoryCatalogData",
    "ecrpublic.setrepositorypolicy": "ecr-public:SetRepositoryPolicy",
    "ecrpublic.tagresource": "ecr-public:TagResource",
    "ecrpublic.untagresource": "ecr-public:UntagResource",
    "ecrpublic.uploadlayerpart": "ecr-public:UploadLayerPart",
    "ecs.createcapacityprovider": "ecs:CreateCapacityProvider",
    "ecs.createcluster": "ecs:CreateCluster",
    "ecs.createservice": "ecs:CreateService",
    "ecs.createtaskset": "ecs:CreateTaskSet",
    "ecs.deleteaccountsetting": "ecs:DeleteAccountSetting",
    "ecs.deleteattributes": "ecs:DeleteAttributes",
    "ecs.deletecapacityprovider": "ecs:DeleteCapacityProvider",
    "ecs.deletecluster": "ecs:DeleteCluster",
    "ecs.deleteservice": "ecs:DeleteService",
    "ecs.deletetaskset": "ecs:DeleteTaskSet",
    "ecs.deregistercontainerinstance": "ecs:DeregisterContainerInstance",
    "ecs.deregistertaskdefinition": "ecs:DeregisterTaskDefinition",
    "ecs.describecapacityproviders": "ecs:DescribeCapacityProviders",
    "ecs.describeclusters": "ecs:DescribeClusters",
    "ecs.describecontainerinstances": "ecs:DescribeContainerInstances",
    "ecs.describeservices": "ecs:DescribeServices",
    "ecs.describetaskdefinition": "ecs:DescribeTaskDefinition",
    "ecs.describetasks": "ecs:DescribeTasks",
    "ecs.describetasksets": "ecs:DescribeTaskSets",
    "ecs.discoverpollendpoint": "ecs:DiscoverPollEndpoint",
    "ecs.executecommand": "ecs:ExecuteCommand",
    "ecs.listaccountsettings": "ecs:ListAccountSettings",
    "ecs.listattributes": "ecs:ListAttributes",
    "ecs.listclusters": "ecs:ListClusters",
    "ecs.listcontainerinstances": "ecs:ListContainerInstances",
    "ecs.listservices": "ecs:ListServices",
    "ecs.listtagsforresource": "ecs:ListTagsForResource",
    "ecs.listtaskdefinitionfamilies": "ecs:ListTaskDefinitionFamilies",
    "ecs.listtaskdefinitions": "ecs:ListTaskDefinitions",
    "ecs.listtasks": "ecs:ListTasks",
    "ecs.putaccountsetting": "ecs:PutAccountSetting",
    "ecs.putaccountsettingdefault": "ecs:PutAccountSettingDefault",
    "ecs.putattributes": "ecs:PutAttributes",
    "ecs.putclustercapacityproviders": "ecs:PutClusterCapacityProviders",
    "ecs.registercontainerinstance": "ecs:RegisterContainerInstance",
    "ecs.registertaskdefinition": "ecs:RegisterTaskDefinition",
    "ecs.runtask": "ecs:RunTask",
    "ecs.starttask": "ecs:StartTask",
    "ecs.stoptask": "ecs:StopTask",
    "ecs.submitattachmentstatechanges": "ecs:SubmitAttachmentStateChanges",
    "ecs.submitcontainerstatechange": "ecs:SubmitContainerStateChange",
    "ecs.submittaskstatechange": "ecs:SubmitTaskStateChange",
    "ecs.tagresource": "ecs:TagResource",
    "ecs.untagresource": "ecs:UntagResource",
    "ecs.updatecapacityprovider": "ecs:UpdateCapacityProvider",
    "ecs.updatecluster": "ecs:UpdateCluster",
    "ecs.updateclustersettings": "ecs:UpdateClusterSettings",
    "ecs.updatecontaineragent": "ecs:UpdateContainerAgent",
    "ecs.updatecontainerinstancesstate": "ecs:UpdateContainerInstancesState",
    "ecs.updateservice": "ecs:UpdateService",
    "ecs.updateserviceprimarytaskset": "ecs:UpdateServicePrimaryTaskSet",
    "ecs.updatetaskset": "ecs:UpdateTaskSet",
    "efs.createaccesspoint": "elasticfilesystem:CreateAccessPoint",
    "efs.createfilesystem": "elasticfilesystem:CreateFileSystem",
    "efs.createmounttarget": "elasticfilesystem:CreateMountTarget",
    "efs.createreplicationconfiguration": "elasticfilesystem:CreateReplicationConfiguration",
    "efs.createtags": "elasticfilesystem:CreateTags",
    "efs.deleteaccesspoint": "elasticfilesystem:DeleteAccessPoint",
    "efs.deletefilesystem": "elasticfilesystem:DeleteFileSystem",
    "efs.deletefilesystempolicy": "elasticfilesystem:DeleteFileSystemPolicy",
    "efs.deletemounttarget": "elasticfilesystem:DeleteMountTarget",
    "efs.deletereplicationconfiguration": "elasticfilesystem:DeleteReplicationConfiguration",
    "efs.deletetags": "elasticfilesystem:DeleteTags",
    "efs.describeaccesspoints": "elasticfilesystem:DescribeAccessPoints",
    "efs.describeaccountpreferences": "elasticfilesystem:DescribeAccountPreferences",
    "efs.describebackuppolicy": "elasticfilesystem:DescribeBackupPolicy",
    "efs.describefilesystempolicy": "elasticfilesystem:DescribeFileSystemPolicy",
    "efs.describefilesystems": "elasticfilesystem:DescribeFileSystems",
    "efs.describelifecycleconfiguration": "elasticfilesystem:DescribeLifecycleConfiguration",
    "efs.describemounttargets": "elasticfilesystem:DescribeMountTargets",
    "efs.describemounttargetsecuritygroups": "elasticfilesystem:DescribeMountTargetSecurityGroups",
    "efs.describereplicationconfigurations": "elasticfilesystem:DescribeReplicationConfigurations",
    "efs.describetags": "elasticfilesystem:DescribeTags",
    "efs.listtagsforresource": "elasticfilesystem:ListTagsForResource",
    "efs.modifymounttargetsecuritygroups": "elasticfilesystem:ModifyMountTargetSecurityGroups",
    "efs.putaccountpreferences": "elasticfilesystem:PutAccountPreferences",
    "efs.putbackuppolicy": "elasticfilesystem:PutBackupPolicy",
    "efs.putfilesystempolicy": "elasticfilesystem:PutFileSystemPolicy",
    "efs.putlifecycleconfiguration": "elasticfilesystem:PutLifecycleConfiguration",
    "efs.tagresource": "elasticfilesystem:TagResource",
    "efs.untagresource": "elasticfilesystem:UntagResource",
    "efs.updatefilesystem": "elasticfilesystem:UpdateFileSystem",
    "eks.associateencryptionconfig": "eks:AssociateEncryptionConfig",
    "eks.associateidentityproviderconfig": "eks:AssociateIdentityProviderConfig",
    "eks.createaddon": "eks:CreateAddon",
    "eks.createcluster": "eks:CreateCluster",
    "eks.createfargateprofile": "eks:CreateFargateProfile",
    "eks.createnodegroup": "eks:CreateNodegroup",
    "eks.deleteaddon": "eks:DeleteAddon",
    "eks.deletecluster": "eks:DeleteCluster",
    "eks.deletefargateprofile": "eks:DeleteFargateProfile",
    "eks.deletenodegroup": "eks:DeleteNodegroup",
    "eks.deregistercluster": "eks:DeregisterCluster",
    "eks.describeaddon": "eks:DescribeAddon",
    "eks.describeaddonversions": "eks:DescribeAddonVersions",
    "eks.describecluster": "eks:DescribeCluster",
    "eks.describefargateprofile": "eks:DescribeFargateProfile",
    "eks.describeidentityproviderconfig": "eks:DescribeIdentityProviderConfig",
    "eks.describenodegroup": "eks:DescribeNodegroup",
    "eks.describeupdate": "eks:DescribeUpdate",
    "eks.disassociateidentityproviderconfig": "eks:DisassociateIdentityProviderConfig",
    "eks.listaddons": "eks:ListAddons",
    "eks.listclusters": "eks:ListClusters",
    "eks.listfargateprofiles": "eks:ListFargateProfiles",
    "eks.listidentityproviderconfigs": "eks:ListIdentityProviderConfigs",
    "eks.listnodegroups": "eks:ListNodegroups",
    "eks.listtagsforresource": "eks:ListTagsForResource",
    "eks.listupdates": "eks:ListUpdates",
    "eks.registercluster": "eks:RegisterCluster",
    "eks.tagresource": "eks:TagResource",
    "eks.untagresource": "eks:UntagResource",
    "eks.updateaddon": "eks:UpdateAddon",
    "eks.updateclusterconfig": "eks:UpdateClusterConfig",
    "eks.updateclusterversion": "eks:UpdateClusterVersion",
    "eks.updatenodegroupconfig": "eks:UpdateNodegroupConfig",
    "eks.updatenodegroupversion": "eks:UpdateNodegroupVersion",
    "elasticache.addtagstoresource": "elasticache:AddTagsToResource",
    "elasticache.authorizecachesecuritygroupingress": "elasticache:AuthorizeCacheSecurityGroupIngress",
    "elasticache.batchapplyupdateaction": "elasticache:BatchApplyUpdateAction",
    "elasticache.batchstopupdateaction": "elasticache:BatchStopUpdateAction",
    "elasticache.completemigration": "elasticache:CompleteMigration",
    "elasticache.copysnapshot": "elasticache:CopySnapshot",
    "elasticache.createcachecluster": "elasticache:CreateCacheCluster",
    "elasticache.createcacheparametergroup": "elasticache:CreateCacheParameterGroup",
    "elasticache.createcachesecuritygroup": "elasticache:CreateCacheSecurityGroup",
    "elasticache.createcachesubnetgroup": "elasticache:CreateCacheSubnetGroup",
    "elasticache.createglobalreplicationgroup": "elasticache:CreateGlobalReplicationGroup",
    "elasticache.createreplicationgroup": "elasticache:CreateReplicationGroup",
    "elasticache.createsnapshot": "elasticache:CreateSnapshot",
    "elasticache.createuser": "elasticache:CreateUser",
    "elasticache.createusergroup": "elasticache:CreateUserGroup",
    "elasticache.decreasenodegroupsinglobalreplicationgroup": "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
    "elasticache.decreasereplicacount": "elasticache:DecreaseReplicaCount",
    "elasticache.deletecachecluster": "elasticache:DeleteCacheCluster",
    "elasticache.deletecacheparametergroup": "elasticache:DeleteCacheParameterGroup",
    "elasticache.deletecachesecuritygroup": "elasticache:DeleteCacheSecurityGroup",
    "elasticache.deletecachesubnetgroup": "elasticache:DeleteCacheSubnetGroup",
    "elasticache.deleteglobalreplicationgroup": "elasticache:DeleteGlobalReplicationGroup",
    "elasticache.deletereplicationgroup": "elasticache:DeleteReplicationGroup",
    "elasticache.deletesnapshot": "elasticache:DeleteSnapshot",
    "elasticache.deleteuser": "elasticache:DeleteUser",
    "elasticache.deleteusergroup": "elasticache:DeleteUserGroup",
    "elasticache.describecacheclusters": "elasticache:DescribeCacheClusters",
    "elasticache.describecacheengineversions": "elasticache:DescribeCacheEngineVersions",
    "elasticache.describecacheparametergroups": "elasticache:DescribeCacheParameterGroups",
    "elasticache.describecacheparameters": "elasticache:DescribeCacheParameters",
    "elasticache.describecachesecuritygroups": "elasticache:DescribeCacheSecurityGroups",
    "elasticache.describecachesubnetgroups": "elasticache:DescribeCacheSubnetGroups",
    "elasticache.describeenginedefaultparameters": "elasticache:DescribeEngineDefaultParameters",
    "elasticache.describeevents": "elasticache:DescribeEvents",
    "elasticache.describeglobalreplicationgroups": "elasticache:DescribeGlobalReplicationGroups",
    "elasticache.describereplicationgroups": "elasticache:DescribeReplicationGroups",
    "elasticache.describereservedcachenodes": "elasticache:DescribeReservedCacheNodes",
    "elasticache.describereservedcachenodesofferings": "elasticache:DescribeReservedCacheNodesOfferings",
    "elasticache.describeserviceupdates": "elasticache:DescribeServiceUpdates",
    "elasticache.describesnapshots": "elasticache:DescribeSnapshots",
    "elasticache.describeupdateactions": "elasticache:DescribeUpdateActions",
    "elasticache.describeusergroups": "elasticache:DescribeUserGroups",
    "elasticache.describeusers": "elasticache:DescribeUsers",
    "elasticache.disassociateglobalreplicationgroup": "elasticache:DisassociateGlobalReplicationGroup",
    "elasticache.failoverglobalreplicationgroup": "elasticache:FailoverGlobalReplicationGroup",
    "elasticache.increasenodegroupsinglobalreplicationgroup": "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
    "elasticache.increasereplicacount": "elasticache:IncreaseReplicaCount",
    "elasticache.listallowednodetypemodifications": "elasticache:ListAllowedNodeTypeModifications",
    "elasticache.listtagsforresource": "elasticache:ListTagsForResource",
    "elasticache.modifycachecluster": "elasticache:ModifyCacheCluster",
    "elasticache.modifycacheparametergroup": "elasticache:ModifyCacheParameterGroup",
    "elasticache.modifycachesubnetgroup": "elasticache:ModifyCacheSubnetGroup",
    "elasticache.modifyglobalreplicationgroup": "elasticache:ModifyGlobalReplicationGroup",
    "elasticache.modifyreplicationgroup": "elasticache:ModifyReplicationGroup",
    "elasticache.modifyreplicationgroupshardconfiguration": "elasticache:ModifyReplicationGroupShardConfiguration",
    "elasticache.modifyuser": "elasticache:ModifyUser",
    "elasticache.modifyusergroup": "elasticache:ModifyUserGroup",
    "elasticache.purchasereservedcachenodesoffering": "elasticache:PurchaseReservedCacheNodesOffering",
    "elasticache.rebalanceslotsinglobalreplicationgroup": "elasticache:RebalanceSlotsInGlobalReplicationGroup",
    "elasticache.rebootcachecluster": "elasticache:RebootCacheCluster",
    "elasticache.removetagsfromresource": "elasticache:RemoveTagsFromResource",
    "elasticache.resetcacheparametergroup": "elasticache:ResetCacheParameterGroup",
    "elasticache.revokecachesecuritygroupingress": "elasticache:RevokeCacheSecurityGroupIngress",
    "elasticache.startmigration": "elasticache:StartMigration",
    "elasticache.testfailover": "elasticache:TestFailover",
    "elasticbeanstalk.abortenvironmentupdate": "elasticbeanstalk:AbortEnvironmentUpdate",
    "elasticbeanstalk.applyenvironmentmanagedaction": "elasticbeanstalk:ApplyEnvironmentManagedAction",
    "elasticbeanstalk.associateenvironmentoperationsrole": "elasticbeanstalk:AssociateEnvironmentOperationsRole",
    "elasticbeanstalk.checkdnsavailability": "elasticbeanstalk:CheckDNSAvailability",
    "elasticbeanstalk.composeenvironments": "elasticbeanstalk:ComposeEnvironments",
    "elasticbeanstalk.createapplication": "elasticbeanstalk:CreateApplication",
    "elasticbeanstalk.createapplicationversion": "elasticbeanstalk:CreateApplicationVersion",
    "elasticbeanstalk.createconfigurationtemplate": "elasticbeanstalk:CreateConfigurationTemplate",
    "elasticbeanstalk.createenvironment": "elasticbeanstalk:CreateEnvironment",
    "elasticbeanstalk.createplatformversion": "elasticbeanstalk:CreatePlatformVersion",
    "elasticbeanstalk.createstoragelocation": "elasticbeanstalk:CreateStorageLocation",
    "elasticbeanstalk.deleteapplication": "elasticbeanstalk:DeleteApplication",
    "elasticbeanstalk.deleteapplicationversion": "elasticbeanstalk:DeleteApplicationVersion",
    "elasticbeanstalk.deleteconfigurationtemplate": "elasticbeanstalk:DeleteConfigurationTemplate",
    "elasticbeanstalk.deleteenvironmentconfiguration": "elasticbeanstalk:DeleteEnvironmentConfiguration",
    "elasticbeanstalk.deleteplatformversion": "elasticbeanstalk:DeletePlatformVersion",
    "elasticbeanstalk.describeaccountattributes": "elasticbeanstalk:DescribeAccountAttributes",
    "elasticbeanstalk.describeapplications": "elasticbeanstalk:DescribeApplications",
    "elasticbeanstalk.describeapplicationversions": "elasticbeanstalk:DescribeApplicationVersions",
    "elasticbeanstalk.describeconfigurationoptions": "elasticbeanstalk:DescribeConfigurationOptions",
    "elasticbeanstalk.describeconfigurationsettings": "elasticbeanstalk:DescribeConfigurationSettings",
    "elasticbeanstalk.describeenvironmenthealth": "elasticbeanstalk:DescribeEnvironmentHealth",
    "elasticbeanstalk.describeenvironmentmanagedactionhistory": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
    "elasticbeanstalk.describeenvironmentmanagedactions": "elasticbeanstalk:DescribeEnvironmentManagedActions",
    "elasticbeanstalk.describeenvironmentresources": "elasticbeanstalk:DescribeEnvironmentResources",
    "elasticbeanstalk.describeenvironments": "elasticbeanstalk:DescribeEnvironments",
    "elasticbeanstalk.describeevents": "elasticbeanstalk:DescribeEvents",
    "elasticbeanstalk.describeinstanceshealth": "elasticbeanstalk:DescribeInstancesHealth",
    "elasticbeanstalk.describeplatformversion": "elasticbeanstalk:DescribePlatformVersion",
    "elasticbeanstalk.disassociateenvironmentoperationsrole": "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
    "elasticbeanstalk.listavailablesolutionstacks": "elasticbeanstalk:ListAvailableSolutionStacks",
    "elasticbeanstalk.listplatformbranches": "elasticbeanstalk:ListPlatformBranches",
    "elasticbeanstalk.listplatformversions": "elasticbeanstalk:ListPlatformVersions",
    "elasticbeanstalk.listtagsforresource": "elasticbeanstalk:ListTagsForResource",
    "elasticbeanstalk.rebuildenvironment": "elasticbeanstalk:RebuildEnvironment",
    "elasticbeanstalk.requestenvironmentinfo": "elasticbeanstalk:RequestEnvironmentInfo",
    "elasticbeanstalk.restartappserver": "elasticbeanstalk:RestartAppServer",
    "elasticbeanstalk.retrieveenvironmentinfo": "elasticbeanstalk:RetrieveEnvironmentInfo",
    "elasticbeanstalk.swapenvironmentcnames": "elasticbeanstalk:SwapEnvironmentCNAMEs",
    "elasticbeanstalk.terminateenvironment": "elasticbeanstalk:TerminateEnvironment",
    "elasticbeanstalk.updateapplication": "elasticbeanstalk:UpdateApplication",
    "elasticbeanstalk.updateapplicationresourcelifecycle": "elasticbeanstalk:UpdateApplicationResourceLifecycle",
    "elasticbeanstalk.updateapplicationversion": "elasticbeanstalk:UpdateApplicationVersion",
    "elasticbeanstalk.updateconfigurationtemplate": "elasticbeanstalk:UpdateConfigurationTemplate",
    "elasticbeanstalk.updateenvironment": "elasticbeanstalk:UpdateEnvironment",
    "elasticbeanstalk.updatetagsforresource": "elasticbeanstalk:UpdateTagsForResource",
    "elasticbeanstalk.validateconfigurationsettings": "elasticbeanstalk:ValidateConfigurationSettings",
    "elasticinference.describeacceleratorofferings": "elastic-inference:DescribeAcceleratorOfferings",
    "elasticinference.describeaccelerators": "elastic-inference:DescribeAccelerators",
    "elasticinference.describeacceleratortypes": "elastic-inference:DescribeAcceleratorTypes",
    "elasticinference.listtagsforresource": "elastic-inference:ListTagsForResource",
    "elasticinference.tagresource": "elastic-inference:TagResource",
    "elasticinference.untagresource": "elastic-inference:UntagResource",
    "elastictranscoder.canceljob": "elastictranscoder:CancelJob",
    "elastictranscoder.createjob": "elastictranscoder:CreateJob",
    "elastictranscoder.createpipeline": "elastictranscoder:CreatePipeline",
    "elastictranscoder.createpreset": "elastictranscoder:CreatePreset",
    "elastictranscoder.deletepipeline": "elastictranscoder:DeletePipeline",
    "elastictranscoder.deletepreset": "elastictranscoder:DeletePreset",
    "elastictranscoder.listjobsbypipeline": "elastictranscoder:ListJobsByPipeline",
    "elastictranscoder.listjobsbystatus": "elastictranscoder:ListJobsByStatus",
    "elastictranscoder.listpipelines": "elastictranscoder:ListPipelines",
    "elastictranscoder.listpresets": "elastictranscoder:ListPresets",
    "elastictranscoder.readjob": "elastictranscoder:ReadJob",
    "elastictranscoder.readpipeline": "elastictranscoder:ReadPipeline",
    "elastictranscoder.readpreset": "elastictranscoder:ReadPreset",
    "elastictranscoder.testrole": "elastictranscoder:TestRole",
    "elastictranscoder.updatepipeline": "elastictranscoder:UpdatePipeline",
    "elastictranscoder.updatepipelinenotifications": "elastictranscoder:UpdatePipelineNotifications",
    "elastictranscoder.updatepipelinestatus": "elastictranscoder:UpdatePipeline",
    "elb.addtags": "elasticloadbalancing:AddTags",
    "elb.applysecuritygroupstoloadbalancer": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
    "elb.attachloadbalancertosubnets": "elasticloadbalancing:AttachLoadBalancerToSubnets",
    "elb.configurehealthcheck": "elasticloadbalancing:ConfigureHealthCheck",
    "elb.createappcookiestickinesspolicy": "elasticloadbalancing:CreateAppCookieStickinessPolicy",
    "elb.createlbcookiestickinesspolicy": "elasticloadbalancing:CreateLBCookieStickinessPolicy",
    "elb.createloadbalancer": "elasticloadbalancing:CreateLoadBalancer",
    "elb.createloadbalancerlisteners": "elasticloadbalancing:CreateLoadBalancerListeners",
    "elb.createloadbalancerpolicy": "elasticloadbalancing:CreateLoadBalancerPolicy",
    "elb.deleteloadbalancer": "elasticloadbalancing:DeleteLoadBalancer",
    "elb.deleteloadbalancerlisteners": "elasticloadbalancing:DeleteLoadBalancerListeners",
    "elb.deleteloadbalancerpolicy": "elasticloadbalancing:DeleteLoadBalancerPolicy",
    "elb.deregisterinstancesfromloadbalancer": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
    "elb.describeaccountlimits": "elasticloadbalancing:DescribeAccountLimits",
    "elb.describeinstancehealth": "elasticloadbalancing:DescribeInstanceHealth",
    "elb.describeloadbalancerattributes": "elasticloadbalancing:DescribeLoadBalancerAttributes",
    "elb.describeloadbalancerpolicies": "elasticloadbalancing:DescribeLoadBalancerPolicies",
    "elb.describeloadbalancerpolicytypes": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
    "elb.describeloadbalancers": "elasticloadbalancing:DescribeLoadBalancers",
    "elb.describetags": "elasticloadbalancing:DescribeTags",
    "elb.detachloadbalancerfromsubnets": "elasticloadbalancing:DetachLoadBalancerFromSubnets",
    "elb.disableavailabilityzonesforloadbalancer": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
    "elb.enableavailabilityzonesforloadbalancer": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
    "elb.modifyloadbalancerattributes": "elasticloadbalancing:ModifyLoadBalancerAttributes",
    "elb.registerinstanceswithloadbalancer": "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
    "elb.removetags": "elasticloadbalancing:RemoveTags",
    "elb.setloadbalancerlistenersslcertificate": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
    "elb.setloadbalancerpoliciesforbackendserver": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
    "elb.setloadbalancerpoliciesoflistener": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
    "elbv2.addlistenercertificates": "elasticloadbalancing:AddListenerCertificates",
    "elbv2.addtags": "elasticloadbalancing:AddTags",
    "elbv2.createlistener": "elasticloadbalancing:CreateListener",
    "elbv2.createloadbalancer": "elasticloadbalancing:CreateLoadBalancer",
    "elbv2.createrule": "elasticloadbalancing:CreateRule",
    "elbv2.createtargetgroup": "elasticloadbalancing:CreateTargetGroup",
    "elbv2.deletelistener": "elasticloadbalancing:DeleteListener",
    "elbv2.deleteloadbalancer": "elasticloadbalancing:DeleteLoadBalancer",
    "elbv2.deleterule": "elasticloadbalancing:DeleteRule",
    "elbv2.deletetargetgroup": "elasticloadbalancing:DeleteTargetGroup",
    "elbv2.deregistertargets": "elasticloadbalancing:DeregisterTargets",
    "elbv2.describeaccountlimits": "elasticloadbalancing:DescribeAccountLimits",
    "elbv2.describelistenercertificates": "elasticloadbalancing:DescribeListenerCertificates",
    "elbv2.describelisteners": "elasticloadbalancing:DescribeListeners",
    "elbv2.describeloadbalancerattributes": "elasticloadbalancing:DescribeLoadBalancerAttributes",
    "elbv2.describeloadbalancers": "elasticloadbalancing:DescribeLoadBalancers",
    "elbv2.describerules": "elasticloadbalancing:DescribeRules",
    "elbv2.describesslpolicies": "elasticloadbalancing:DescribeSSLPolicies",
    "elbv2.describetags": "elasticloadbalancing:DescribeTags",
    "elbv2.describetargetgroupattributes": "elasticloadbalancing:DescribeTargetGroupAttributes",
    "elbv2.describetargetgroups": "elasticloadbalancing:DescribeTargetGroups",
    "elbv2.describetargethealth": "elasticloadbalancing:DescribeTargetHealth",
    "elbv2.modifylistener": "elasticloadbalancing:ModifyListener",
    "elbv2.modifyloadbalancerattributes": "elasticloadbalancing:ModifyLoadBalancerAttributes",
    "elbv2.modifyrule": "elasticloadbalancing:ModifyRule",
    "elbv2.modifytargetgroup": "elasticloadbalancing:ModifyTargetGroup",
    "elbv2.modifytargetgroupattributes": "elasticloadbalancing:ModifyTargetGroupAttributes",
    "elbv2.registertargets": "elasticloadbalancing:RegisterTargets",
    "elbv2.removelistenercertificates": "elasticloadbalancing:RemoveListenerCertificates",
    "elbv2.removetags": "elasticloadbalancing:RemoveTags",
    "elbv2.setipaddresstype": "elasticloadbalancing:SetIpAddressType",
    "elbv2.setrulepriorities": "elasticloadbalancing:SetRulePriorities",
    "elbv2.setsecuritygroups": "elasticloadbalancing:SetSecurityGroups",
    "elbv2.setsubnets": "elasticloadbalancing:SetSubnets",
    "emr.addinstancefleet": "elasticmapreduce:AddInstanceFleet",
    "emr.addinstancegroups": "elasticmapreduce:AddInstanceGroups",
    "emr.addjobflowsteps": "elasticmapreduce:AddJobFlowSteps",
    "emr.addtags": "elasticmapreduce:AddTags",
    "emr.cancelsteps": "elasticmapreduce:CancelSteps",
    "emr.createsecurityconfiguration": "elasticmapreduce:CreateSecurityConfiguration",
    "emr.createstudio": "elasticmapreduce:CreateStudio",
    "emr.createstudiosessionmapping": "elasticmapreduce:CreateStudioSessionMapping",
    "emr.deletesecurityconfiguration": "elasticmapreduce:DeleteSecurityConfiguration",
    "emr.deletestudio": "elasticmapreduce:DeleteStudio",
    "emr.deletestudiosessionmapping": "elasticmapreduce:DeleteStudioSessionMapping",
    "emr.describecluster": "elasticmapreduce:DescribeCluster",
    "emr.describejobflows": "elasticmapreduce:DescribeJobFlows",
    "emr.describenotebookexecution": "elasticmapreduce:DescribeNotebookExecution",
    "emr.describereleaselabel": "elasticmapreduce:DescribeReleaseLabel",
    "emr.describesecurityconfiguration": "elasticmapreduce:DescribeSecurityConfiguration",
    "emr.describestep": "elasticmapreduce:DescribeStep",
    "emr.describestudio": "elasticmapreduce:DescribeStudio",
    "emr.getautoterminationpolicy": "elasticmapreduce:GetAutoTerminationPolicy",
    "emr.getblockpublicaccessconfiguration": "elasticmapreduce:GetBlockPublicAccessConfiguration",
    "emr.getmanagedscalingpolicy": "elasticmapreduce:GetManagedScalingPolicy",
    "emr.getstudiosessionmapping": "elasticmapreduce:GetStudioSessionMapping",
    "emr.listbootstrapactions": "elasticmapreduce:ListBootstrapActions",
    "emr.listclusters": "elasticmapreduce:ListClusters",
    "emr.listinstancefleets": "elasticmapreduce:ListInstanceFleets",
    "emr.listinstancegroups": "elasticmapreduce:ListInstanceGroups",
    "emr.listinstances": "elasticmapreduce:ListInstances",
    "emr.listnotebookexecutions": "elasticmapreduce:ListNotebookExecutions",
    "emr.listreleaselabels": "elasticmapreduce:ListReleaseLabels",
    "emr.listsecurityconfigurations": "elasticmapreduce:ListSecurityConfigurations",
    "emr.liststeps": "elasticmapreduce:ListSteps",
    "emr.liststudios": "elasticmapreduce:ListStudios",
    "emr.liststudiosessionmappings": "elasticmapreduce:ListStudioSessionMappings",
    "emr.modifycluster": "elasticmapreduce:ModifyCluster",
    "emr.modifyinstancefleet": "elasticmapreduce:ModifyInstanceFleet",
    "emr.modifyinstancegroups": "elasticmapreduce:ModifyInstanceGroups",
    "emr.putautoscalingpolicy": "elasticmapreduce:PutAutoScalingPolicy",
    "emr.putautoterminationpolicy": "elasticmapreduce:PutAutoTerminationPolicy",
    "emr.putblockpublicaccessconfiguration": "elasticmapreduce:PutBlockPublicAccessConfiguration",
    "emr.putmanagedscalingpolicy": "elasticmapreduce:PutManagedScalingPolicy",
    "emr.removeautoscalingpolicy": "elasticmapreduce:RemoveAutoScalingPolicy",
    "emr.removeautoterminationpolicy": "elasticmapreduce:RemoveAutoTerminationPolicy",
    "emr.removemanagedscalingpolicy": "elasticmapreduce:RemoveManagedScalingPolicy",
    "emr.removetags": "elasticmapreduce:RemoveTags",
    "emr.runjobflow": "elasticmapreduce:RunJobFlow",
    "emr.setterminationprotection": "elasticmapreduce:SetTerminationProtection",
    "emr.setvisibletoallusers": "elasticmapreduce:SetVisibleToAllUsers",
    "emr.startnotebookexecution": "elasticmapreduce:StartNotebookExecution",
    "emr.stopnotebookexecution": "elasticmapreduce:StopNotebookExecution",
    "emr.terminatejobflows": "elasticmapreduce:TerminateJobFlows",
    "emr.updatestudio": "elasticmapreduce:UpdateStudio",
    "emr.updatestudiosessionmapping": "elasticmapreduce:UpdateStudioSessionMapping",
    "emrcontainers.canceljobrun": "emr-containers:CancelJobRun",
    "emrcontainers.createmanagedendpoint": "emr-containers:CreateManagedEndpoint",
    "emrcontainers.createvirtualcluster": "emr-containers:CreateVirtualCluster",
    "emrcontainers.deletemanagedendpoint": "emr-containers:DeleteManagedEndpoint",
    "emrcontainers.deletevirtualcluster": "emr-containers:DeleteVirtualCluster",
    "emrcontainers.describejobrun": "emr-containers:DescribeJobRun",
    "emrcontainers.describemanagedendpoint": "emr-containers:DescribeManagedEndpoint",
    "emrcontainers.describevirtualcluster": "emr-containers:DescribeVirtualCluster",
    "emrcontainers.listjobruns": "emr-containers:ListJobRuns",
    "emrcontainers.listmanagedendpoints": "emr-containers:ListManagedEndpoints",
    "emrcontainers.listtagsforresource": "emr-containers:ListTagsForResource",
    "emrcontainers.listvirtualclusters": "emr-containers:ListVirtualClusters",
    "emrcontainers.startjobrun": "emr-containers:StartJobRun",
    "emrcontainers.tagresource": "emr-containers:TagResource",
    "emrcontainers.untagresource": "emr-containers:UntagResource",
    "es.acceptinboundcrossclustersearchconnection": "es:AcceptInboundCrossClusterSearchConnection",
    "es.addtags": "es:AddTags",
    "es.associatepackage": "es:AssociatePackage",
    "es.cancelelasticsearchservicesoftwareupdate": "es:CancelElasticsearchServiceSoftwareUpdate",
    "es.createelasticsearchdomain": "es:CreateElasticsearchDomain",
    "es.createoutboundcrossclustersearchconnection": "es:CreateOutboundCrossClusterSearchConnection",
    "es.createpackage": "es:CreatePackage",
    "es.deleteelasticsearchdomain": "es:DeleteElasticsearchDomain",
    "es.deleteelasticsearchservicerole": "es:DeleteElasticsearchServiceRole",
    "es.deleteinboundcrossclustersearchconnection": "es:DeleteInboundCrossClusterSearchConnection",
    "es.deleteoutboundcrossclustersearchconnection": "es:DeleteOutboundCrossClusterSearchConnection",
    "es.deletepackage": "es:DeletePackage",
    "es.describedomainautotunes": "es:DescribeDomainAutoTunes",
    "es.describedomainchangeprogress": "es:DescribeDomainChangeProgress",
    "es.describeelasticsearchdomain": "es:DescribeElasticsearchDomain",
    "es.describeelasticsearchdomainconfig": "es:DescribeElasticsearchDomainConfig",
    "es.describeelasticsearchdomains": "es:DescribeElasticsearchDomains",
    "es.describeelasticsearchinstancetypelimits": "es:DescribeElasticsearchInstanceTypeLimits",
    "es.describeinboundcrossclustersearchconnections": "es:DescribeInboundCrossClusterSearchConnections",
    "es.describeoutboundcrossclustersearchconnections": "es:DescribeOutboundCrossClusterSearchConnections",
    "es.describepackages": "es:DescribePackages",
    "es.describereservedelasticsearchinstanceofferings": "es:DescribeReservedElasticsearchInstanceOfferings",
    "es.describereservedelasticsearchinstances": "es:DescribeReservedElasticsearchInstances",
    "es.dissociatepackage": "es:DissociatePackage",
    "es.getcompatibleelasticsearchversions": "es:GetCompatibleElasticsearchVersions",
    "es.getpackageversionhistory": "es:GetPackageVersionHistory",
    "es.getupgradehistory": "es:GetUpgradeHistory",
    "es.getupgradestatus": "es:GetUpgradeStatus",
    "es.listdomainnames": "es:ListDomainNames",
    "es.listdomainsforpackage": "es:ListDomainsForPackage",
    "es.listelasticsearchinstancetypes": "es:ListElasticsearchInstanceTypes",
    "es.listelasticsearchversions": "es:ListElasticsearchVersions",
    "es.listpackagesfordomain": "es:ListPackagesForDomain",
    "es.listtags": "es:ListTags",
    "es.purchasereservedelasticsearchinstanceoffering": "es:PurchaseReservedElasticsearchInstanceOffering",
    "es.rejectinboundcrossclustersearchconnection": "es:RejectInboundCrossClusterSearchConnection",
    "es.removetags": "es:RemoveTags",
    "es.startelasticsearchservicesoftwareupdate": "es:StartElasticsearchServiceSoftwareUpdate",
    "es.updateelasticsearchdomainconfig": "es:UpdateElasticsearchDomainConfig",
    "es.updatepackage": "es:UpdatePackage",
    "es.upgradeelasticsearchdomain": "es:UpgradeElasticsearchDomain",
    "eventbridge.activateeventsource": "events:ActivateEventSource",
    "eventbridge.cancelreplay": "events:CancelReplay",
    "eventbridge.createapidestination": "events:CreateApiDestination",
    "eventbridge.createarchive": "events:CreateArchive",
    "eventbridge.createconnection": "events:CreateConnection",
    "eventbridge.createendpoint": "events:CreateEndpoint",
    "eventbridge.createeventbus": "events:CreateEventBus",
    "eventbridge.createpartnereventsource": "events:CreatePartnerEventSource",
    "eventbridge.deactivateeventsource": "events:DeactivateEventSource",
    "eventbridge.deauthorizeconnection": "events:DeauthorizeConnection",
    "eventbridge.deleteapidestination": "events:DeleteApiDestination",
    "eventbridge.deletearchive": "events:DeleteArchive",
    "eventbridge.deleteconnection": "events:DeleteConnection",
    "eventbridge.deleteendpoint": "events:DeleteEndpoint",
    "eventbridge.deleteeventbus": "events:DeleteEventBus",
    "eventbridge.deletepartnereventsource": "events:DeletePartnerEventSource",
    "eventbridge.deleterule": "events:DeleteRule",
    "eventbridge.describeapidestination": "events:DescribeApiDestination",
    "eventbridge.describearchive": "events:DescribeArchive",
    "eventbridge.describeconnection": "events:DescribeConnection",
    "eventbridge.describeendpoint": "events:DescribeEndpoint",
    "eventbridge.describeeventbus": "events:DescribeEventBus",
    "eventbridge.describeeventsource": "events:DescribeEventSource",
    "eventbridge.describepartnereventsource": "events:DescribePartnerEventSource",
    "eventbridge.describereplay": "events:DescribeReplay",
    "eventbridge.describerule": "events:DescribeRule",
    "eventbridge.disablerule": "events:DisableRule",
    "eventbridge.enablerule": "events:EnableRule",
    "eventbridge.listapidestinations": "events:ListApiDestinations",
    "eventbridge.listarchives": "events:ListArchives",
    "eventbridge.listconnections": "events:ListConnections",
    "eventbridge.listendpoints": "events:ListEndpoints",
    "eventbridge.listeventbuses": "events:ListEventBuses",
    "eventbridge.listeventsources": "events:ListEventSources",
    "eventbridge.listpartnereventsourceaccounts": "events:ListPartnerEventSourceAccounts",
    "eventbridge.listpartnereventsources": "events:ListPartnerEventSources",
    "eventbridge.listreplays": "events:ListReplays",
    "eventbridge.listrulenamesbytarget": "events:ListRuleNamesByTarget",
    "eventbridge.listrules": "events:ListRules",
    "eventbridge.listtagsforresource": "events:ListTagsForResource",
    "eventbridge.listtargetsbyrule": "events:ListTargetsByRule",
    "eventbridge.putevents": "events:PutEvents",
    "eventbridge.putpartnerevents": "events:PutPartnerEvents",
    "eventbridge.putpermission": "events:PutPermission",
    "eventbridge.putrule": "events:PutRule",
    "eventbridge.puttargets": "events:PutTargets",
    "eventbridge.removepermission": "events:RemovePermission",
    "eventbridge.removetargets": "events:RemoveTargets",
    "eventbridge.startreplay": "events:StartReplay",
    "eventbridge.tagresource": "events:TagResource",
    "eventbridge.testeventpattern": "events:TestEventPattern",
    "eventbridge.untagresource": "events:UntagResource",
    "eventbridge.updateapidestination": "events:UpdateApiDestination",
    "eventbridge.updatearchive": "events:UpdateArchive",
    "eventbridge.updateconnection": "events:UpdateConnection",
    "eventbridge.updateendpoint": "events:UpdateEndpoint",
    "evidently.batchevaluatefeature": "evidently:BatchEvaluateFeature",
    "evidently.createexperiment": "evidently:CreateExperiment",
    "evidently.createfeature": "evidently:CreateFeature",
    "evidently.createlaunch": "evidently:CreateLaunch",
    "evidently.createproject": "evidently:CreateProject",
    "evidently.deleteexperiment": "evidently:DeleteExperiment",
    "evidently.deletefeature": "evidently:DeleteFeature",
    "evidently.deletelaunch": "evidently:DeleteLaunch",
    "evidently.deleteproject": "evidently:DeleteProject",
    "evidently.evaluatefeature": "evidently:EvaluateFeature",
    "evidently.getexperiment": "evidently:GetExperiment",
    "evidently.getexperimentresults": "evidently:GetExperimentResults",
    "evidently.getfeature": "evidently:GetFeature",
    "evidently.getlaunch": "evidently:GetLaunch",
    "evidently.getproject": "evidently:GetProject",
    "evidently.listexperiments": "evidently:ListExperiments",
    "evidently.listfeatures": "evidently:ListFeatures",
    "evidently.listlaunches": "evidently:ListLaunches",
    "evidently.listprojects": "evidently:ListProjects",
    "evidently.listtagsforresource": "evidently:ListTagsForResource",
    "evidently.putprojectevents": "evidently:PutProjectEvents",
    "evidently.startexperiment": "evidently:StartExperiment",
    "evidently.startlaunch": "evidently:StartLaunch",
    "evidently.stopexperiment": "evidently:StopExperiment",
    "evidently.stoplaunch": "evidently:StopLaunch",
    "evidently.tagresource": "evidently:TagResource",
    "evidently.untagresource": "evidently:UntagResource",
    "evidently.updateexperiment": "evidently:UpdateExperiment",
    "evidently.updatefeature": "evidently:UpdateFeature",
    "evidently.updatelaunch": "evidently:UpdateLaunch",
    "evidently.updateproject": "evidently:UpdateProject",
    "evidently.updateprojectdatadelivery": "evidently:UpdateProjectDataDelivery",
    "finspace.createenvironment": "finspace:CreateEnvironment",
    "finspace.deleteenvironment": "finspace:DeleteEnvironment",
    "finspace.getenvironment": "finspace:GetEnvironment",
    "finspace.listenvironments": "finspace:ListEnvironments",
    "finspace.listtagsforresource": "finspace:ListTagsForResource",
    "finspace.tagresource": "finspace:TagResource",
    "finspace.untagresource": "finspace:UntagResource",
    "finspace.updateenvironment": "finspace:UpdateEnvironment",
    "finspacedata.createchangeset": "finspace-api:CreateChangeset",
    "finspacedata.createdataset": "finspace-api:CreateDatasetV2",
    "finspacedata.createpermissiongroup": "finspace-api:CreatePermissionGroupV2",
    "finspacedata.createuser": "finspace-api:CreateUserV2",
    "finspacedata.deletedataset": "finspace-api:DeleteDatasetV2",
    "finspacedata.deletepermissiongroup": "finspace-api:DeletePermissionGroupV2",
    "finspacedata.disableuser": "finspace-api:DisableUser",
    "finspacedata.enableuser": "finspace-api:EnableUser",
    "finspacedata.getchangeset": "finspace-api:GetChangesetV2",
    "finspacedata.getdataset": "finspace-api:GetDatasetV2",
    "finspacedata.getdataview": "finspace-api:GetDataViewV2",
    "finspacedata.getprogrammaticaccesscredentials": "finspace-api:GetProgrammaticAccessCredentials",
    "finspacedata.getuser": "finspace-api:GetUser",
    "finspacedata.getworkinglocation": "finspace-api:GetWorkingLocation",
    "finspacedata.listchangesets": "finspace-api:ListChangesetsV2",
    "finspacedata.listdatasets": "finspace-api:ListDatasetsV2",
    "finspacedata.listdataviews": "finspace-api:ListDataViewsV2",
    "finspacedata.listpermissiongroups": "finspace-api:ListPermissionGroupsV2",
    "finspacedata.listusers": "finspace-api:ListUsersV2",
    "finspacedata.resetuserpassword": "finspace-api:ResetUserPasswordV2",
    "finspacedata.updatedataset": "finspace-api:UpdateDatasetV2",
    "finspacedata.updatepermissiongroup": "finspace-api:UpdatePermissionGroupV2",
    "finspacedata.updateuser": "finspace-api:UpdateUserV2",
    "firehose.createdeliverystream": "firehose:CreateDeliveryStream",
    "firehose.deletedeliverystream": "firehose:DeleteDeliveryStream",
    "firehose.describedeliverystream": "firehose:DescribeDeliveryStream",
    "firehose.listdeliverystreams": "firehose:ListDeliveryStreams",
    "firehose.listtagsfordeliverystream": "firehose:ListTagsForDeliveryStream",
    "firehose.putrecord": "firehose:PutRecord",
    "firehose.putrecordbatch": "firehose:PutRecordBatch",
    "firehose.startdeliverystreamencryption": "firehose:StartDeliveryStreamEncryption",
    "firehose.stopdeliverystreamencryption": "firehose:StopDeliveryStreamEncryption",
    "firehose.tagdeliverystream": "firehose:TagDeliveryStream",
    "firehose.untagdeliverystream": "firehose:UntagDeliveryStream",
    "firehose.updatedestination": "firehose:UpdateDestination",
    "fis.createexperimenttemplate": "fis:CreateExperimentTemplate",
    "fis.deleteexperimenttemplate": "fis:DeleteExperimentTemplate",
    "fis.getaction": "fis:GetAction",
    "fis.getexperiment": "fis:GetExperiment",
    "fis.getexperimenttemplate": "fis:GetExperimentTemplate",
    "fis.gettargetresourcetype": "fis:GetTargetResourceType",
    "fis.listactions": "fis:ListActions",
    "fis.listexperiments": "fis:ListExperiments",
    "fis.listexperimenttemplates": "fis:ListExperimentTemplates",
    "fis.listtagsforresource": "fis:ListTagsForResource",
    "fis.listtargetresourcetypes": "fis:ListTargetResourceTypes",
    "fis.startexperiment": "fis:StartExperiment",
    "fis.stopexperiment": "fis:StopExperiment",
    "fis.tagresource": "fis:TagResource",
    "fis.untagresource": "fis:UntagResource",
    "fis.updateexperimenttemplate": "fis:UpdateExperimentTemplate",
    "fms.associateadminaccount": "fms:AssociateAdminAccount",
    "fms.associatethirdpartyfirewall": "fms:AssociateThirdPartyFirewall",
    "fms.deleteappslist": "fms:DeleteAppsList",
    "fms.deletenotificationchannel": "fms:DeleteNotificationChannel",
    "fms.deletepolicy": "fms:DeletePolicy",
    "fms.deleteprotocolslist": "fms:DeleteProtocolsList",
    "fms.disassociateadminaccount": "fms:DisassociateAdminAccount",
    "fms.disassociatethirdpartyfirewall": "fms:DisassociateThirdPartyFirewall",
    "fms.getadminaccount": "fms:GetAdminAccount",
    "fms.getappslist": "fms:GetAppsList",
    "fms.getcompliancedetail": "fms:GetComplianceDetail",
    "fms.getnotificationchannel": "fms:GetNotificationChannel",
    "fms.getpolicy": "fms:GetPolicy",
    "fms.getprotectionstatus": "fms:GetProtectionStatus",
    "fms.getprotocolslist": "fms:GetProtocolsList",
    "fms.getthirdpartyfirewallassociationstatus": "fms:GetThirdPartyFirewallAssociationStatus",
    "fms.getviolationdetails": "fms:GetViolationDetails",
    "fms.listappslists": "fms:ListAppsLists",
    "fms.listcompliancestatus": "fms:ListComplianceStatus",
    "fms.listmemberaccounts": "fms:ListMemberAccounts",
    "fms.listpolicies": "fms:ListPolicies",
    "fms.listprotocolslists": "fms:ListProtocolsLists",
    "fms.listtagsforresource": "fms:ListTagsForResource",
    "fms.listthirdpartyfirewallfirewallpolicies": "fms:ListThirdPartyFirewallFirewallPolicies",
    "fms.putappslist": "fms:PutAppsList",
    "fms.putnotificationchannel": "fms:PutNotificationChannel",
    "fms.putpolicy": "fms:PutPolicy",
    "fms.putprotocolslist": "fms:PutProtocolsList",
    "fms.tagresource": "fms:TagResource",
    "fms.untagresource": "fms:UntagResource",
    "forecastqueryservice.queryforecast": "forecast:QueryForecast",
    "forecastservice.createautopredictor": "forecast:CreateAutoPredictor",
    "forecastservice.createdataset": "forecast:CreateDataset",
    "forecastservice.createdatasetgroup": "forecast:CreateDatasetGroup",
    "forecastservice.createdatasetimportjob": "forecast:CreateDatasetImportJob",
    "forecastservice.createexplainability": "forecast:CreateExplainability",
    "forecastservice.createexplainabilityexport": "forecast:CreateExplainabilityExport",
    "forecastservice.createforecast": "forecast:CreateForecast",
    "forecastservice.createforecastexportjob": "forecast:CreateForecastExportJob",
    "forecastservice.createpredictor": "forecast:CreatePredictor",
    "forecastservice.createpredictorbacktestexportjob": "forecast:CreatePredictorBacktestExportJob",
    "forecastservice.deletedataset": "forecast:DeleteDataset",
    "forecastservice.deletedatasetgroup": "forecast:DeleteDatasetGroup",
    "forecastservice.deletedatasetimportjob": "forecast:DeleteDatasetImportJob",
    "forecastservice.deleteexplainability": "forecast:DeleteExplainability",
    "forecastservice.deleteexplainabilityexport": "forecast:DeleteExplainabilityExport",
    "forecastservice.deleteforecast": "forecast:DeleteForecast",
    "forecastservice.deleteforecastexportjob": "forecast:DeleteForecastExportJob",
    "forecastservice.deletepredictor": "forecast:DeletePredictor",
    "forecastservice.deletepredictorbacktestexportjob": "forecast:DeletePredictorBacktestExportJob",
    "forecastservice.deleteresourcetree": "forecast:DeleteResourceTree",
    "forecastservice.describeautopredictor": "forecast:DescribeAutoPredictor",
    "forecastservice.describedataset": "forecast:DescribeDataset",
    "forecastservice.describedatasetgroup": "forecast:DescribeDatasetGroup",
    "forecastservice.describedatasetimportjob": "forecast:DescribeDatasetImportJob",
    "forecastservice.describeexplainability": "forecast:DescribeExplainability",
    "forecastservice.describeexplainabilityexport": "forecast:DescribeExplainabilityExport",
    "forecastservice.describeforecast": "forecast:DescribeForecast",
    "forecastservice.describeforecastexportjob": "forecast:DescribeForecastExportJob",
    "forecastservice.describepredictor": "forecast:DescribePredictor",
    "forecastservice.describepredictorbacktestexportjob": "forecast:DescribePredictorBacktestExportJob",
    "forecastservice.getaccuracymetrics": "forecast:GetAccuracyMetrics",
    "forecastservice.listdatasetgroups": "forecast:ListDatasetGroups",
    "forecastservice.listdatasetimportjobs": "forecast:ListDatasetImportJobs",
    "forecastservice.listdatasets": "forecast:ListDatasets",
    "forecastservice.listexplainabilities": "forecast:ListExplainabilities",
    "forecastservice.listexplainabilityexports": "forecast:ListExplainabilityExports",
    "forecastservice.listforecastexportjobs": "forecast:ListForecastExportJobs",
    "forecastservice.listforecasts": "forecast:ListForecasts",
    "forecastservice.listpredictorbacktestexportjobs": "forecast:ListPredictorBacktestExportJobs",
    "forecastservice.listpredictors": "forecast:ListPredictors",
    "forecastservice.listtagsforresource": "forecast:ListTagsForResource",
    "forecastservice.stopresource": "forecast:StopResource",
    "forecastservice.tagresource": "forecast:TagResource",
    "forecastservice.untagresource": "forecast:UntagResource",
    "forecastservice.updatedatasetgroup": "forecast:UpdateDatasetGroup",
    "frauddetector.batchcreatevariable": "frauddetector:BatchCreateVariable",
    "frauddetector.batchgetvariable": "frauddetector:BatchGetVariable",
    "frauddetector.cancelbatchimportjob": "frauddetector:CancelBatchImportJob",
    "frauddetector.cancelbatchpredictionjob": "frauddetector:CancelBatchPredictionJob",
    "frauddetector.createbatchimportjob": "frauddetector:CreateBatchImportJob",
    "frauddetector.createbatchpredictionjob": "frauddetector:CreateBatchPredictionJob",
    "frauddetector.createdetectorversion": "frauddetector:CreateDetectorVersion",
    "frauddetector.createmodel": "frauddetector:CreateModel",
    "frauddetector.createmodelversion": "frauddetector:CreateModelVersion",
    "frauddetector.createrule": "frauddetector:CreateRule",
    "frauddetector.createvariable": "frauddetector:CreateVariable",
    "frauddetector.deletebatchimportjob": "frauddetector:DeleteBatchImportJob",
    "frauddetector.deletebatchpredictionjob": "frauddetector:DeleteBatchPredictionJob",
    "frauddetector.deletedetector": "frauddetector:DeleteDetector",
    "frauddetector.deletedetectorversion": "frauddetector:DeleteDetectorVersion",
    "frauddetector.deleteentitytype": "frauddetector:DeleteEntityType",
    "frauddetector.deleteevent": "frauddetector:DeleteEvent",
    "frauddetector.deleteeventsbyeventtype": "frauddetector:DeleteEventsByEventType",
    "frauddetector.deleteeventtype": "frauddetector:DeleteEventType",
    "frauddetector.deleteexternalmodel": "frauddetector:DeleteExternalModel",
    "frauddetector.deletelabel": "frauddetector:DeleteLabel",
    "frauddetector.deletemodel": "frauddetector:DeleteModel",
    "frauddetector.deletemodelversion": "frauddetector:DeleteModelVersion",
    "frauddetector.deleteoutcome": "frauddetector:DeleteOutcome",
    "frauddetector.deleterule": "frauddetector:DeleteRule",
    "frauddetector.deletevariable": "frauddetector:DeleteVariable",
    "frauddetector.describedetector": "frauddetector:DescribeDetector",
    "frauddetector.describemodelversions": "frauddetector:DescribeModelVersions",
    "frauddetector.getbatchimportjobs": "frauddetector:GetBatchImportJobs",
    "frauddetector.getbatchpredictionjobs": "frauddetector:GetBatchPredictionJobs",
    "frauddetector.getdeleteeventsbyeventtypestatus": "frauddetector:GetDeleteEventsByEventTypeStatus",
    "frauddetector.getdetectors": "frauddetector:GetDetectors",
    "frauddetector.getdetectorversion": "frauddetector:GetDetectorVersion",
    "frauddetector.getentitytypes": "frauddetector:GetEntityTypes",
    "frauddetector.getevent": "frauddetector:GetEvent",
    "frauddetector.geteventprediction": "frauddetector:GetEventPrediction",
    "frauddetector.geteventpredictionmetadata": "frauddetector:GetEventPredictionMetadata",
    "frauddetector.geteventtypes": "frauddetector:GetEventTypes",
    "frauddetector.getexternalmodels": "frauddetector:GetExternalModels",
    "frauddetector.getkmsencryptionkey": "frauddetector:GetKMSEncryptionKey",
    "frauddetector.getlabels": "frauddetector:GetLabels",
    "frauddetector.getmodels": "frauddetector:GetModels",
    "frauddetector.getmodelversion": "frauddetector:GetModelVersion",
    "frauddetector.getoutcomes": "frauddetector:GetOutcomes",
    "frauddetector.getrules": "frauddetector:GetRules",
    "frauddetector.getvariables": "frauddetector:GetVariables",
    "frauddetector.listeventpredictions": "frauddetector:ListEventPredictions",
    "frauddetector.listtagsforresource": "frauddetector:ListTagsForResource",
    "frauddetector.putdetector": "frauddetector:PutDetector",
    "frauddetector.putentitytype": "frauddetector:PutEntityType",
    "frauddetector.puteventtype": "frauddetector:PutEventType",
    "frauddetector.putexternalmodel": "frauddetector:PutExternalModel",
    "frauddetector.putkmsencryptionkey": "frauddetector:PutKMSEncryptionKey",
    "frauddetector.putlabel": "frauddetector:PutLabel",
    "frauddetector.putoutcome": "frauddetector:PutOutcome",
    "frauddetector.sendevent": "frauddetector:SendEvent",
    "frauddetector.tagresource": "frauddetector:TagResource",
    "frauddetector.untagresource": "frauddetector:UntagResource",
    "frauddetector.updatedetectorversion": "frauddetector:UpdateDetectorVersion",
    "frauddetector.updatedetectorversionmetadata": "frauddetector:UpdateDetectorVersionMetadata",
    "frauddetector.updatedetectorversionstatus": "frauddetector:UpdateDetectorVersionStatus",
    "frauddetector.updateeventlabel": "frauddetector:UpdateEventLabel",
    "frauddetector.updatemodel": "frauddetector:UpdateModel",
    "frauddetector.updatemodelversion": "frauddetector:UpdateModelVersion",
    "frauddetector.updatemodelversionstatus": "frauddetector:UpdateModelVersionStatus",
    "frauddetector.updaterulemetadata": "frauddetector:UpdateRuleMetadata",
    "frauddetector.updateruleversion": "frauddetector:UpdateRuleVersion",
    "frauddetector.updatevariable": "frauddetector:UpdateVariable",
    "fsx.associatefilesystemaliases": "fsx:AssociateFileSystemAliases",
    "fsx.canceldatarepositorytask": "fsx:CancelDataRepositoryTask",
    "fsx.copybackup": "fsx:CopyBackup",
    "fsx.createbackup": "fsx:CreateBackup",
    "fsx.createdatarepositoryassociation": "fsx:CreateDataRepositoryAssociation",
    "fsx.createdatarepositorytask": "fsx:CreateDataRepositoryTask",
    "fsx.createfilesystem": "fsx:CreateFileSystem",
    "fsx.createfilesystemfrombackup": "fsx:CreateFileSystemFromBackup",
    "fsx.createsnapshot": "fsx:CreateSnapshot",
    "fsx.createstoragevirtualmachine": "fsx:CreateStorageVirtualMachine",
    "fsx.createvolume": "fsx:CreateVolume",
    "fsx.createvolumefrombackup": "fsx:CreateVolumeFromBackup",
    "fsx.deletebackup": "fsx:DeleteBackup",
    "fsx.deletedatarepositoryassociation": "fsx:DeleteDataRepositoryAssociation",
    "fsx.deletefilesystem": "fsx:DeleteFileSystem",
    "fsx.deletesnapshot": "fsx:DeleteSnapshot",
    "fsx.deletestoragevirtualmachine": "fsx:DeleteStorageVirtualMachine",
    "fsx.deletevolume": "fsx:DeleteVolume",
    "fsx.describebackups": "fsx:DescribeBackups",
    "fsx.describedatarepositoryassociations": "fsx:DescribeDataRepositoryAssociations",
    "fsx.describedatarepositorytasks": "fsx:DescribeDataRepositoryTasks",
    "fsx.describefilesystemaliases": "fsx:DescribeFileSystemAliases",
    "fsx.describefilesystems": "fsx:DescribeFileSystems",
    "fsx.describesnapshots": "fsx:DescribeSnapshots",
    "fsx.describestoragevirtualmachines": "fsx:DescribeStorageVirtualMachines",
    "fsx.describevolumes": "fsx:DescribeVolumes",
    "fsx.disassociatefilesystemaliases": "fsx:DisassociateFileSystemAliases",
    "fsx.listtagsforresource": "fsx:ListTagsForResource",
    "fsx.releasefilesystemnfsv3locks": "fsx:ReleaseFileSystemNfsV3Locks",
    "fsx.restorevolumefromsnapshot": "fsx:RestoreVolumeFromSnapshot",
    "fsx.tagresource": "fsx:TagResource",
    "fsx.untagresource": "fsx:UntagResource",
    "fsx.updatedatarepositoryassociation": "fsx:UpdateDataRepositoryAssociation",
    "fsx.updatefilesystem": "fsx:UpdateFileSystem",
    "fsx.updatesnapshot": "fsx:UpdateSnapshot",
    "fsx.updatestoragevirtualmachine": "fsx:UpdateStorageVirtualMachine",
    "fsx.updatevolume": "fsx:UpdateVolume",
    "gamelift.acceptmatch": "gamelift:AcceptMatch",
    "gamelift.claimgameserver": "gamelift:ClaimGameServer",
    "gamelift.createalias": "gamelift:CreateAlias",
    "gamelift.createbuild": "gamelift:CreateBuild",
    "gamelift.createfleet": "gamelift:CreateFleet",
    "gamelift.createfleetlocations": "gamelift:CreateFleetLocations",
    "gamelift.creategameservergroup": "gamelift:CreateGameServerGroup",
    "gamelift.creategamesession": "gamelift:CreateGameSession",
    "gamelift.creategamesessionqueue": "gamelift:CreateGameSessionQueue",
    "gamelift.creatematchmakingconfiguration": "gamelift:CreateMatchmakingConfiguration",
    "gamelift.creatematchmakingruleset": "gamelift:CreateMatchmakingRuleSet",
    "gamelift.createplayersession": "gamelift:CreatePlayerSession",
    "gamelift.createplayersessions": "gamelift:CreatePlayerSessions",
    "gamelift.createscript": "gamelift:CreateScript",
    "gamelift.createvpcpeeringauthorization": "gamelift:CreateVpcPeeringAuthorization",
    "gamelift.createvpcpeeringconnection": "gamelift:CreateVpcPeeringConnection",
    "gamelift.deletealias": "gamelift:DeleteAlias",
    "gamelift.deletebuild": "gamelift:DeleteBuild",
    "gamelift.deletefleet": "gamelift:DeleteFleet",
    "gamelift.deletefleetlocations": "gamelift:DeleteFleetLocations",
    "gamelift.deletegameservergroup": "gamelift:DeleteGameServerGroup",
    "gamelift.deletegamesessionqueue": "gamelift:DeleteGameSessionQueue",
    "gamelift.deletematchmakingconfiguration": "gamelift:DeleteMatchmakingConfiguration",
    "gamelift.deletematchmakingruleset": "gamelift:DeleteMatchmakingRuleSet",
    "gamelift.deletescalingpolicy": "gamelift:DeleteScalingPolicy",
    "gamelift.deletescript": "gamelift:DeleteScript",
    "gamelift.deletevpcpeeringauthorization": "gamelift:DeleteVpcPeeringAuthorization",
    "gamelift.deletevpcpeeringconnection": "gamelift:DeleteVpcPeeringConnection",
    "gamelift.deregistergameserver": "gamelift:DeregisterGameServer",
    "gamelift.describealias": "gamelift:DescribeAlias",
    "gamelift.describebuild": "gamelift:DescribeBuild",
    "gamelift.describeec2instancelimits": "gamelift:DescribeEC2InstanceLimits",
    "gamelift.describefleetattributes": "gamelift:DescribeFleetAttributes",
    "gamelift.describefleetcapacity": "gamelift:DescribeFleetCapacity",
    "gamelift.describefleetevents": "gamelift:DescribeFleetEvents",
    "gamelift.describefleetlocationattributes": "gamelift:DescribeFleetLocationAttributes",
    "gamelift.describefleetlocationcapacity": "gamelift:DescribeFleetLocationCapacity",
    "gamelift.describefleetlocationutilization": "gamelift:DescribeFleetLocationUtilization",
    "gamelift.describefleetportsettings": "gamelift:DescribeFleetPortSettings",
    "gamelift.describefleetutilization": "gamelift:DescribeFleetUtilization",
    "gamelift.describegameserver": "gamelift:DescribeGameServer",
    "gamelift.describegameservergroup": "gamelift:DescribeGameServerGroup",
    "gamelift.describegameserverinstances": "gamelift:DescribeGameServerInstances",
    "gamelift.describegamesessiondetails": "gamelift:DescribeGameSessionDetails",
    "gamelift.describegamesessionplacement": "gamelift:DescribeGameSessionPlacement",
    "gamelift.describegamesessionqueues": "gamelift:DescribeGameSessionQueues",
    "gamelift.describegamesessions": "gamelift:DescribeGameSessions",
    "gamelift.describeinstances": "gamelift:DescribeInstances",
    "gamelift.describematchmaking": "gamelift:DescribeMatchmaking",
    "gamelift.describematchmakingconfigurations": "gamelift:DescribeMatchmakingConfigurations",
    "gamelift.describematchmakingrulesets": "gamelift:DescribeMatchmakingRuleSets",
    "gamelift.describeplayersessions": "gamelift:DescribePlayerSessions",
    "gamelift.describeruntimeconfiguration": "gamelift:DescribeRuntimeConfiguration",
    "gamelift.describescalingpolicies": "gamelift:DescribeScalingPolicies",
    "gamelift.describescript": "gamelift:DescribeScript",
    "gamelift.describevpcpeeringauthorizations": "gamelift:DescribeVpcPeeringAuthorizations",
    "gamelift.describevpcpeeringconnections": "gamelift:DescribeVpcPeeringConnections",
    "gamelift.getgamesessionlogurl": "gamelift:GetGameSessionLogUrl",
    "gamelift.getinstanceaccess": "gamelift:GetInstanceAccess",
    "gamelift.listaliases": "gamelift:ListAliases",
    "gamelift.listbuilds": "gamelift:ListBuilds",
    "gamelift.listfleets": "gamelift:ListFleets",
    "gamelift.listgameservergroups": "gamelift:ListGameServerGroups",
    "gamelift.listgameservers": "gamelift:ListGameServers",
    "gamelift.listscripts": "gamelift:ListScripts",
    "gamelift.listtagsforresource": "gamelift:ListTagsForResource",
    "gamelift.putscalingpolicy": "gamelift:PutScalingPolicy",
    "gamelift.registergameserver": "gamelift:RegisterGameServer",
    "gamelift.requestuploadcredentials": "gamelift:RequestUploadCredentials",
    "gamelift.resolvealias": "gamelift:ResolveAlias",
    "gamelift.resumegameservergroup": "gamelift:ResumeGameServerGroup",
    "gamelift.searchgamesessions": "gamelift:SearchGameSessions",
    "gamelift.startfleetactions": "gamelift:StartFleetActions",
    "gamelift.startgamesessionplacement": "gamelift:StartGameSessionPlacement",
    "gamelift.startmatchbackfill": "gamelift:StartMatchBackfill",
    "gamelift.startmatchmaking": "gamelift:StartMatchmaking",
    "gamelift.stopfleetactions": "gamelift:StopFleetActions",
    "gamelift.stopgamesessionplacement": "gamelift:StopGameSessionPlacement",
    "gamelift.stopmatchmaking": "gamelift:StopMatchmaking",
    "gamelift.suspendgameservergroup": "gamelift:SuspendGameServerGroup",
    "gamelift.tagresource": "gamelift:TagResource",
    "gamelift.untagresource": "gamelift:UntagResource",
    "gamelift.updatealias": "gamelift:UpdateAlias",
    "gamelift.updatebuild": "gamelift:UpdateBuild",
    "gamelift.updatefleetattributes": "gamelift:UpdateFleetAttributes",
    "gamelift.updatefleetcapacity": "gamelift:UpdateFleetCapacity",
    "gamelift.updatefleetportsettings": "gamelift:UpdateFleetPortSettings",
    "gamelift.updategameserver": "gamelift:UpdateGameServer",
    "gamelift.updategameservergroup": "gamelift:UpdateGameServerGroup",
    "gamelift.updategamesession": "gamelift:UpdateGameSession",
    "gamelift.updategamesessionqueue": "gamelift:UpdateGameSessionQueue",
    "gamelift.updatematchmakingconfiguration": "gamelift:UpdateMatchmakingConfiguration",
    "gamelift.updateruntimeconfiguration": "gamelift:UpdateRuntimeConfiguration",
    "gamelift.updatescript": "gamelift:UpdateScript",
    "gamelift.validatematchmakingruleset": "gamelift:ValidateMatchmakingRuleSet",
    "gamesparks.creategame": "gamesparks:CreateGame",
    "gamesparks.createsnapshot": "gamesparks:CreateSnapshot",
    "gamesparks.createstage": "gamesparks:CreateStage",
    "gamesparks.deletegame": "gamesparks:DeleteGame",
    "gamesparks.deletestage": "gamesparks:DeleteStage",
    "gamesparks.disconnectplayer": "gamesparks:DisconnectPlayer",
    "gamesparks.exportsnapshot": "gamesparks:ExportSnapshot",
    "gamesparks.getextension": "gamesparks:GetExtension",
    "gamesparks.getextensionversion": "gamesparks:GetExtensionVersion",
    "gamesparks.getgame": "gamesparks:GetGame",
    "gamesparks.getgameconfiguration": "gamesparks:GetGameConfiguration",
    "gamesparks.getgeneratedcodejob": "gamesparks:GetGeneratedCodeJob",
    "gamesparks.getplayerconnectionstatus": "gamesparks:GetPlayerConnectionStatus",
    "gamesparks.getsnapshot": "gamesparks:GetSnapshot",
    "gamesparks.getstage": "gamesparks:GetStage",
    "gamesparks.getstagedeployment": "gamesparks:GetStageDeployment",
    "gamesparks.importgameconfiguration": "gamesparks:ImportGameConfiguration",
    "gamesparks.listextensions": "gamesparks:ListExtensions",
    "gamesparks.listextensionversions": "gamesparks:ListExtensionVersions",
    "gamesparks.listgames": "gamesparks:ListGames",
    "gamesparks.listgeneratedcodejobs": "gamesparks:ListGeneratedCodeJobs",
    "gamesparks.listsnapshots": "gamesparks:ListSnapshots",
    "gamesparks.liststagedeployments": "gamesparks:ListStageDeployments",
    "gamesparks.liststages": "gamesparks:ListStages",
    "gamesparks.listtagsforresource": "gamesparks:ListTagsForResource",
    "gamesparks.startgeneratedcodejob": "gamesparks:StartGeneratedCodeJob",
    "gamesparks.startstagedeployment": "gamesparks:StartStageDeployment",
    "gamesparks.tagresource": "gamesparks:TagResource",
    "gamesparks.untagresource": "gamesparks:UntagResource",
    "gamesparks.updategame": "gamesparks:UpdateGame",
    "gamesparks.updategameconfiguration": "gamesparks:UpdateGameConfiguration",
    "gamesparks.updatesnapshot": "gamesparks:UpdateSnapshot",
    "gamesparks.updatestage": "gamesparks:UpdateStage",
    "glacier.abortmultipartupload": "glacier:AbortMultipartUpload",
    "glacier.abortvaultlock": "glacier:AbortVaultLock",
    "glacier.addtagstovault": "glacier:AddTagsToVault",
    "glacier.completemultipartupload": "glacier:CompleteMultipartUpload",
    "glacier.completevaultlock": "glacier:CompleteVaultLock",
    "glacier.createvault": "glacier:CreateVault",
    "glacier.deletearchive": "glacier:DeleteArchive",
    "glacier.deletevault": "glacier:DeleteVault",
    "glacier.deletevaultaccesspolicy": "glacier:DeleteVaultAccessPolicy",
    "glacier.deletevaultnotifications": "glacier:DeleteVaultNotifications",
    "glacier.describejob": "glacier:DescribeJob",
    "glacier.describevault": "glacier:DescribeVault",
    "glacier.getdataretrievalpolicy": "glacier:GetDataRetrievalPolicy",
    "glacier.getjoboutput": "glacier:GetJobOutput",
    "glacier.getvaultaccesspolicy": "glacier:GetVaultAccessPolicy",
    "glacier.getvaultlock": "glacier:GetVaultLock",
    "glacier.getvaultnotifications": "glacier:GetVaultNotifications",
    "glacier.initiatejob": "glacier:InitiateJob",
    "glacier.initiatemultipartupload": "glacier:InitiateMultipartUpload",
    "glacier.initiatevaultlock": "glacier:InitiateVaultLock",
    "glacier.listjobs": "glacier:ListJobs",
    "glacier.listmultipartuploads": "glacier:ListMultipartUploads",
    "glacier.listparts": "glacier:ListParts",
    "glacier.listprovisionedcapacity": "glacier:ListProvisionedCapacity",
    "glacier.listtagsforvault": "glacier:ListTagsForVault",
    "glacier.listvaults": "glacier:ListVaults",
    "glacier.purchaseprovisionedcapacity": "glacier:PurchaseProvisionedCapacity",
    "glacier.removetagsfromvault": "glacier:RemoveTagsFromVault",
    "glacier.setdataretrievalpolicy": "glacier:SetDataRetrievalPolicy",
    "glacier.setvaultaccesspolicy": "glacier:SetVaultAccessPolicy",
    "glacier.setvaultnotifications": "glacier:SetVaultNotifications",
    "glacier.uploadarchive": "glacier:UploadArchive",
    "glacier.uploadmultipartpart": "glacier:UploadMultipartPart",
    "globalaccelerator.addcustomroutingendpoints": "globalaccelerator:AddCustomRoutingEndpoints",
    "globalaccelerator.advertisebyoipcidr": "globalaccelerator:AdvertiseByoipCidr",
    "globalaccelerator.allowcustomroutingtraffic": "globalaccelerator:AllowCustomRoutingTraffic",
    "globalaccelerator.createaccelerator": "globalaccelerator:CreateAccelerator",
    "globalaccelerator.createcustomroutingaccelerator": "globalaccelerator:CreateCustomRoutingAccelerator",
    "globalaccelerator.createcustomroutingendpointgroup": "globalaccelerator:CreateCustomRoutingEndpointGroup",
    "globalaccelerator.createcustomroutinglistener": "globalaccelerator:CreateCustomRoutingListener",
    "globalaccelerator.createendpointgroup": "globalaccelerator:CreateEndpointGroup",
    "globalaccelerator.createlistener": "globalaccelerator:CreateListener",
    "globalaccelerator.deleteaccelerator": "globalaccelerator:DeleteAccelerator",
    "globalaccelerator.deletecustomroutingaccelerator": "globalaccelerator:DeleteCustomRoutingAccelerator",
    "globalaccelerator.deletecustomroutingendpointgroup": "globalaccelerator:DeleteCustomRoutingEndpointGroup",
    "globalaccelerator.deletecustomroutinglistener": "globalaccelerator:DeleteCustomRoutingListener",
    "globalaccelerator.deleteendpointgroup": "globalaccelerator:DeleteEndpointGroup",
    "globalaccelerator.deletelistener": "globalaccelerator:DeleteListener",
    "globalaccelerator.denycustomroutingtraffic": "globalaccelerator:DenyCustomRoutingTraffic",
    "globalaccelerator.deprovisionbyoipcidr": "globalaccelerator:DeprovisionByoipCidr",
    "globalaccelerator.describeaccelerator": "globalaccelerator:DescribeAccelerator",
    "globalaccelerator.describeacceleratorattributes": "globalaccelerator:DescribeAcceleratorAttributes",
    "globalaccelerator.describecustomroutingaccelerator": "globalaccelerator:DescribeCustomRoutingAccelerator",
    "globalaccelerator.describecustomroutingacceleratorattributes": "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes",
    "globalaccelerator.describecustomroutingendpointgroup": "globalaccelerator:DescribeCustomRoutingEndpointGroup",
    "globalaccelerator.describecustomroutinglistener": "globalaccelerator:DescribeCustomRoutingListener",
    "globalaccelerator.describeendpointgroup": "globalaccelerator:DescribeEndpointGroup",
    "globalaccelerator.describelistener": "globalaccelerator:DescribeListener",
    "globalaccelerator.listaccelerators": "globalaccelerator:ListAccelerators",
    "globalaccelerator.listbyoipcidrs": "globalaccelerator:ListByoipCidrs",
    "globalaccelerator.listcustomroutingaccelerators": "globalaccelerator:ListCustomRoutingAccelerators",
    "globalaccelerator.listcustomroutingendpointgroups": "globalaccelerator:ListCustomRoutingEndpointGroups",
    "globalaccelerator.listcustomroutinglisteners": "globalaccelerator:ListCustomRoutingListeners",
    "globalaccelerator.listcustomroutingportmappings": "globalaccelerator:ListCustomRoutingPortMappings",
    "globalaccelerator.listcustomroutingportmappingsbydestination": "globalaccelerator:ListCustomRoutingPortMappingsByDestination",
    "globalaccelerator.listendpointgroups": "globalaccelerator:ListEndpointGroups",
    "globalaccelerator.listlisteners": "globalaccelerator:ListListeners",
    "globalaccelerator.listtagsforresource": "globalaccelerator:ListTagsForResource",
    "globalaccelerator.provisionbyoipcidr": "globalaccelerator:ProvisionByoipCidr",
    "globalaccelerator.removecustomroutingendpoints": "globalaccelerator:RemoveCustomRoutingEndpoints",
    "globalaccelerator.tagresource": "globalaccelerator:TagResource",
    "globalaccelerator.untagresource": "globalaccelerator:UntagResource",
    "globalaccelerator.updateaccelerator": "globalaccelerator:UpdateAccelerator",
    "globalaccelerator.updateacceleratorattributes": "globalaccelerator:UpdateAcceleratorAttributes",
    "globalaccelerator.updatecustomroutingaccelerator": "globalaccelerator:UpdateCustomRoutingAccelerator",
    "globalaccelerator.updatecustomroutingacceleratorattributes": "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes",
    "globalaccelerator.updatecustomroutinglistener": "globalaccelerator:UpdateCustomRoutingListener",
    "globalaccelerator.updateendpointgroup": "globalaccelerator:UpdateEndpointGroup",
    "globalaccelerator.updatelistener": "globalaccelerator:UpdateListener",
    "globalaccelerator.withdrawbyoipcidr": "globalaccelerator:WithdrawByoipCidr",
    "glue.batchcreatepartition": "glue:BatchCreatePartition",
    "glue.batchdeleteconnection": "glue:BatchDeleteConnection",
    "glue.batchdeletepartition": "glue:BatchDeletePartition",
    "glue.batchdeletetable": "glue:BatchDeleteTable",
    "glue.batchdeletetableversion": "glue:BatchDeleteTableVersion",
    "glue.batchgetblueprints": "glue:BatchGetBlueprints",
    "glue.batchgetcrawlers": "glue:BatchGetCrawlers",
    "glue.batchgetcustomentitytypes": "glue:BatchGetCustomEntityTypes",
    "glue.batchgetdevendpoints": "glue:BatchGetDevEndpoints",
    "glue.batchgetjobs": "glue:BatchGetJobs",
    "glue.batchgetpartition": "glue:BatchGetPartition",
    "glue.batchgettriggers": "glue:BatchGetTriggers",
    "glue.batchgetworkflows": "glue:BatchGetWorkflows",
    "glue.batchstopjobrun": "glue:BatchStopJobRun",
    "glue.batchupdatepartition": "glue:UpdatePartition",
    "glue.cancelmltaskrun": "glue:CancelMLTaskRun",
    "glue.cancelstatement": "glue:CancelStatement",
    "glue.checkschemaversionvalidity": "glue:CheckSchemaVersionValidity",
    "glue.createblueprint": "glue:CreateBlueprint",
    "glue.createclassifier": "glue:CreateClassifier",
    "glue.createconnection": "glue:CreateConnection",
    "glue.createcrawler": "glue:CreateCrawler",
    "glue.createcustomentitytype": "glue:CreateCustomEntityType",
    "glue.createdatabase": "glue:CreateDatabase",
    "glue.createdevendpoint": "glue:CreateDevEndpoint",
    "glue.createjob": "glue:CreateJob",
    "glue.createmltransform": "glue:CreateMLTransform",
    "glue.createpartition": "glue:CreatePartition",
    "glue.createpartitionindex": "glue:UpdateTable",
    "glue.createregistry": "glue:CreateRegistry",
    "glue.createschema": "glue:CreateSchema",
    "glue.createscript": "glue:CreateScript",
    "glue.createsecurityconfiguration": "glue:CreateSecurityConfiguration",
    "glue.createsession": "glue:CreateSession",
    "glue.createtable": "glue:CreateTable",
    "glue.createtrigger": "glue:CreateTrigger",
    "glue.createuserdefinedfunction": "glue:CreateUserDefinedFunction",
    "glue.createworkflow": "glue:CreateWorkflow",
    "glue.deleteblueprint": "glue:DeleteBlueprint",
    "glue.deleteclassifier": "glue:DeleteClassifier",
    "glue.deletecolumnstatisticsforpartition": "glue:UpdatePartition",
    "glue.deletecolumnstatisticsfortable": "glue:UpdateTable",
    "glue.deleteconnection": "glue:DeleteConnection",
    "glue.deletecrawler": "glue:DeleteCrawler",
    "glue.deletecustomentitytype": "glue:DeleteCustomEntityType",
    "glue.deletedatabase": "glue:DeleteDatabase",
    "glue.deletedevendpoint": "glue:DeleteDevEndpoint",
    "glue.deletejob": "glue:DeleteJob",
    "glue.deletemltransform": "glue:DeleteMLTransform",
    "glue.deletepartition": "glue:DeletePartition",
    "glue.deletepartitionindex": "glue:UpdateTable",
    "glue.deleteregistry": "glue:DeleteRegistry",
    "glue.deleteresourcepolicy": "glue:DeleteResourcePolicy",
    "glue.deleteschema": "glue:DeleteSchema",
    "glue.deleteschemaversions": "glue:DeleteSchemaVersions",
    "glue.deletesecurityconfiguration": "glue:DeleteSecurityConfiguration",
    "glue.deletesession": "glue:DeleteSession",
    "glue.deletetable": "glue:DeleteTable",
    "glue.deletetableversion": "glue:DeleteTableVersion",
    "glue.deletetrigger": "glue:DeleteTrigger",
    "glue.deleteuserdefinedfunction": "glue:DeleteUserDefinedFunction",
    "glue.deleteworkflow": "glue:DeleteWorkflow",
    "glue.getblueprint": "glue:GetBlueprint",
    "glue.getblueprintrun": "glue:GetBlueprintRun",
    "glue.getblueprintruns": "glue:GetBlueprintRuns",
    "glue.getcatalogimportstatus": "glue:GetCatalogImportStatus",
    "glue.getclassifier": "glue:GetClassifier",
    "glue.getclassifiers": "glue:GetClassifiers",
    "glue.getcolumnstatisticsforpartition": "glue:GetPartition",
    "glue.getcolumnstatisticsfortable": "glue:GetTable",
    "glue.getconnection": "glue:GetConnection",
    "glue.getconnections": "glue:GetConnections",
    "glue.getcrawler": "glue:GetCrawler",
    "glue.getcrawlermetrics": "glue:GetCrawlerMetrics",
    "glue.getcrawlers": "glue:GetCrawlers",
    "glue.getcustomentitytype": "glue:GetCustomEntityType",
    "glue.getdatabase": "glue:GetDatabase",
    "glue.getdatabases": "glue:GetDatabases",
    "glue.getdatacatalogencryptionsettings": "glue:GetDataCatalogEncryptionSettings",
    "glue.getdataflowgraph": "glue:GetDataflowGraph",
    "glue.getdevendpoint": "glue:GetDevEndpoint",
    "glue.getdevendpoints": "glue:GetDevEndpoints",
    "glue.getjob": "glue:GetJob",
    "glue.getjobbookmark": "glue:GetJobBookmark",
    "glue.getjobrun": "glue:GetJobRun",
    "glue.getjobruns": "glue:GetJobRuns",
    "glue.getjobs": "glue:GetJobs",
    "glue.getmapping": "glue:GetMapping",
    "glue.getmltaskrun": "glue:GetMLTaskRun",
    "glue.getmltaskruns": "glue:GetMLTaskRuns",
    "glue.getmltransform": "glue:GetMLTransform",
    "glue.getmltransforms": "glue:GetMLTransforms",
    "glue.getpartition": "glue:GetPartition",
    "glue.getpartitionindexes": "glue:GetTable",
    "glue.getpartitions": "glue:GetPartitions",
    "glue.getplan": "glue:GetPlan",
    "glue.getregistry": "glue:GetRegistry",
    "glue.getresourcepolicies": "glue:GetResourcePolicies",
    "glue.getresourcepolicy": "glue:GetResourcePolicy",
    "glue.getschema": "glue:GetSchema",
    "glue.getschemabydefinition": "glue:GetSchemaByDefinition",
    "glue.getschemaversion": "glue:GetSchemaVersion",
    "glue.getschemaversionsdiff": "glue:GetSchemaVersionsDiff",
    "glue.getsecurityconfiguration": "glue:GetSecurityConfiguration",
    "glue.getsecurityconfigurations": "glue:GetSecurityConfigurations",
    "glue.getsession": "glue:GetSession",
    "glue.getstatement": "glue:GetStatement",
    "glue.gettable": "glue:GetTable",
    "glue.gettables": "glue:GetTables",
    "glue.gettableversion": "glue:GetTableVersion",
    "glue.gettableversions": "glue:GetTableVersions",
    "glue.gettags": "glue:GetTags",
    "glue.gettrigger": "glue:GetTrigger",
    "glue.gettriggers": "glue:GetTriggers",
    "glue.getuserdefinedfunction": "glue:GetUserDefinedFunction",
    "glue.getuserdefinedfunctions": "glue:GetUserDefinedFunctions",
    "glue.getworkflow": "glue:GetWorkflow",
    "glue.getworkflowrun": "glue:GetWorkflowRun",
    "glue.getworkflowrunproperties": "glue:GetWorkflowRunProperties",
    "glue.getworkflowruns": "glue:GetWorkflowRuns",
    "glue.importcatalogtoglue": "glue:ImportCatalogToGlue",
    "glue.listblueprints": "glue:ListBlueprints",
    "glue.listcrawlers": "glue:ListCrawlers",
    "glue.listcustomentitytypes": "glue:ListCustomEntityTypes",
    "glue.listdevendpoints": "glue:ListDevEndpoints",
    "glue.listjobs": "glue:ListJobs",
    "glue.listmltransforms": "glue:ListMLTransforms",
    "glue.listregistries": "glue:ListRegistries",
    "glue.listschemas": "glue:ListSchemas",
    "glue.listschemaversions": "glue:ListSchemaVersions",
    "glue.listsessions": "glue:ListSessions",
    "glue.liststatements": "glue:ListStatements",
    "glue.listtriggers": "glue:ListTriggers",
    "glue.listworkflows": "glue:ListWorkflows",
    "glue.putdatacatalogencryptionsettings": "glue:PutDataCatalogEncryptionSettings",
    "glue.putresourcepolicy": "glue:PutResourcePolicy",
    "glue.putschemaversionmetadata": "glue:PutSchemaVersionMetadata",
    "glue.putworkflowrunproperties": "glue:PutWorkflowRunProperties",
    "glue.queryschemaversionmetadata": "glue:QuerySchemaVersionMetadata",
    "glue.registerschemaversion": "glue:RegisterSchemaVersion",
    "glue.removeschemaversionmetadata": "glue:RemoveSchemaVersionMetadata",
    "glue.resetjobbookmark": "glue:ResetJobBookmark",
    "glue.resumeworkflowrun": "glue:ResumeWorkflowRun",
    "glue.runstatement": "glue:RunStatement",
    "glue.searchtables": "glue:SearchTables",
    "glue.startblueprintrun": "glue:StartBlueprintRun",
    "glue.startcrawler": "glue:StartCrawler",
    "glue.startcrawlerschedule": "glue:StartCrawlerSchedule",
    "glue.startexportlabelstaskrun": "glue:StartExportLabelsTaskRun",
    "glue.startimportlabelstaskrun": "glue:StartImportLabelsTaskRun",
    "glue.startjobrun": "glue:StartJobRun",
    "glue.startmlevaluationtaskrun": "glue:StartMLEvaluationTaskRun",
    "glue.startmllabelingsetgenerationtaskrun": "glue:StartMLLabelingSetGenerationTaskRun",
    "glue.starttrigger": "glue:StartTrigger",
    "glue.startworkflowrun": "glue:StartWorkflowRun",
    "glue.stopcrawler": "glue:StopCrawler",
    "glue.stopcrawlerschedule": "glue:StopCrawlerSchedule",
    "glue.stopsession": "glue:StopSession",
    "glue.stoptrigger": "glue:StopTrigger",
    "glue.stopworkflowrun": "glue:StopWorkflowRun",
    "glue.tagresource": "glue:TagResource",
    "glue.untagresource": "glue:UntagResource",
    "glue.updateblueprint": "glue:UpdateBlueprint",
    "glue.updateclassifier": "glue:UpdateClassifier",
    "glue.updatecolumnstatisticsforpartition": "glue:UpdateColumnStatisticsForPartition",
    "glue.updatecolumnstatisticsfortable": "glue:UpdateColumnStatisticsForTable",
    "glue.updateconnection": "glue:UpdateConnection",
    "glue.updatecrawler": "glue:UpdateCrawler",
    "glue.updatecrawlerschedule": "glue:UpdateCrawlerSchedule",
    "glue.updatedatabase": "glue:UpdateDatabase",
    "glue.updatedevendpoint": "glue:UpdateDevEndpoint",
    "glue.updatejob": "glue:UpdateJob",
    "glue.updatemltransform": "glue:UpdateMLTransform",
    "glue.updatepartition": "glue:UpdatePartition",
    "glue.updateregistry": "glue:UpdateRegistry",
    "glue.updateschema": "glue:UpdateSchema",
    "glue.updatetable": "glue:UpdateTable",
    "glue.updatetrigger": "glue:UpdateTrigger",
    "glue.updateuserdefinedfunction": "glue:UpdateUserDefinedFunction",
    "glue.updateworkflow": "glue:UpdateWorkflow",
    "grafana.associatelicense": "grafana:AssociateLicense",
    "grafana.createworkspace": "grafana:CreateWorkspace",
    "grafana.createworkspaceapikey": "grafana:CreateWorkspaceApiKey",
    "grafana.deleteworkspace": "grafana:DeleteWorkspace",
    "grafana.deleteworkspaceapikey": "grafana:DeleteWorkspaceApiKey",
    "grafana.describeworkspace": "grafana:DescribeWorkspace",
    "grafana.describeworkspaceauthentication": "grafana:DescribeWorkspaceAuthentication",
    "grafana.disassociatelicense": "grafana:DisassociateLicense",
    "grafana.listpermissions": "grafana:ListPermissions",
    "grafana.listtagsforresource": "grafana:ListTagsForResource",
    "grafana.listworkspaces": "grafana:ListWorkspaces",
    "grafana.tagresource": "grafana:TagResource",
    "grafana.untagresource": "grafana:UntagResource",
    "grafana.updatepermissions": "grafana:UpdatePermissions",
    "grafana.updateworkspace": "grafana:UpdateWorkspace",
    "grafana.updateworkspaceauthentication": "grafana:UpdateWorkspaceAuthentication",
    "greengrass.associateroletogroup": "greengrass:AssociateRoleToGroup",
    "greengrass.associateserviceroletoaccount": "greengrass:AssociateServiceRoleToAccount",
    "greengrass.createconnectordefinition": "greengrass:CreateConnectorDefinition",
    "greengrass.createconnectordefinitionversion": "greengrass:CreateConnectorDefinitionVersion",
    "greengrass.createcoredefinition": "greengrass:CreateCoreDefinition",
    "greengrass.createcoredefinitionversion": "greengrass:CreateCoreDefinitionVersion",
    "greengrass.createdeployment": "greengrass:CreateDeployment",
    "greengrass.createdevicedefinition": "greengrass:CreateDeviceDefinition",
    "greengrass.createdevicedefinitionversion": "greengrass:CreateDeviceDefinitionVersion",
    "greengrass.createfunctiondefinition": "greengrass:CreateFunctionDefinition",
    "greengrass.createfunctiondefinitionversion": "greengrass:CreateFunctionDefinitionVersion",
    "greengrass.creategroup": "greengrass:CreateGroup",
    "greengrass.creategroupcertificateauthority": "greengrass:CreateGroupCertificateAuthority",
    "greengrass.creategroupversion": "greengrass:CreateGroupVersion",
    "greengrass.createloggerdefinition": "greengrass:CreateLoggerDefinition",
    "greengrass.createloggerdefinitionversion": "greengrass:CreateLoggerDefinitionVersion",
    "greengrass.createresourcedefinition": "greengrass:CreateResourceDefinition",
    "greengrass.createresourcedefinitionversion": "greengrass:CreateResourceDefinitionVersion",
    "greengrass.createsoftwareupdatejob": "greengrass:CreateSoftwareUpdateJob",
    "greengrass.createsubscriptiondefinition": "greengrass:CreateSubscriptionDefinition",
    "greengrass.createsubscriptiondefinitionversion": "greengrass:CreateSubscriptionDefinitionVersion",
    "greengrass.deleteconnectordefinition": "greengrass:DeleteConnectorDefinition",
    "greengrass.deletecoredefinition": "greengrass:DeleteCoreDefinition",
    "greengrass.deletedevicedefinition": "greengrass:DeleteDeviceDefinition",
    "greengrass.deletefunctiondefinition": "greengrass:DeleteFunctionDefinition",
    "greengrass.deletegroup": "greengrass:DeleteGroup",
    "greengrass.deleteloggerdefinition": "greengrass:DeleteLoggerDefinition",
    "greengrass.deleteresourcedefinition": "greengrass:DeleteResourceDefinition",
    "greengrass.deletesubscriptiondefinition": "greengrass:DeleteSubscriptionDefinition",
    "greengrass.disassociaterolefromgroup": "greengrass:DisassociateRoleFromGroup",
    "greengrass.disassociateservicerolefromaccount": "greengrass:DisassociateServiceRoleFromAccount",
    "greengrass.getassociatedrole": "greengrass:GetAssociatedRole",
    "greengrass.getbulkdeploymentstatus": "greengrass:GetBulkDeploymentStatus",
    "greengrass.getconnectivityinfo": "greengrass:GetConnectivityInfo",
    "greengrass.getconnectordefinition": "greengrass:GetConnectorDefinition",
    "greengrass.getconnectordefinitionversion": "greengrass:GetConnectorDefinitionVersion",
    "greengrass.getcoredefinition": "greengrass:GetCoreDefinition",
    "greengrass.getcoredefinitionversion": "greengrass:GetCoreDefinitionVersion",
    "greengrass.getdeploymentstatus": "greengrass:GetDeploymentStatus",
    "greengrass.getdevicedefinition": "greengrass:GetDeviceDefinition",
    "greengrass.getdevicedefinitionversion": "greengrass:GetDeviceDefinitionVersion",
    "greengrass.getfunctiondefinition": "greengrass:GetFunctionDefinition",
    "greengrass.getfunctiondefinitionversion": "greengrass:GetFunctionDefinitionVersion",
    "greengrass.getgroup": "greengrass:GetGroup",
    "greengrass.getgroupcertificateauthority": "greengrass:GetGroupCertificateAuthority",
    "greengrass.getgroupcertificateconfiguration": "greengrass:GetGroupCertificateConfiguration",
    "greengrass.getgroupversion": "greengrass:GetGroupVersion",
    "greengrass.getloggerdefinition": "greengrass:GetLoggerDefinition",
    "greengrass.getloggerdefinitionversion": "greengrass:GetLoggerDefinitionVersion",
    "greengrass.getresourcedefinition": "greengrass:GetResourceDefinition",
    "greengrass.getresourcedefinitionversion": "greengrass:GetResourceDefinitionVersion",
    "greengrass.getserviceroleforaccount": "greengrass:GetServiceRoleForAccount",
    "greengrass.getsubscriptiondefinition": "greengrass:GetSubscriptionDefinition",
    "greengrass.getsubscriptiondefinitionversion": "greengrass:GetSubscriptionDefinitionVersion",
    "greengrass.getthingruntimeconfiguration": "greengrass:GetThingRuntimeConfiguration",
    "greengrass.listbulkdeploymentdetailedreports": "greengrass:ListBulkDeploymentDetailedReports",
    "greengrass.listbulkdeployments": "greengrass:ListBulkDeployments",
    "greengrass.listconnectordefinitions": "greengrass:ListConnectorDefinitions",
    "greengrass.listconnectordefinitionversions": "greengrass:ListConnectorDefinitionVersions",
    "greengrass.listcoredefinitions": "greengrass:ListCoreDefinitions",
    "greengrass.listcoredefinitionversions": "greengrass:ListCoreDefinitionVersions",
    "greengrass.listdeployments": "greengrass:ListDeployments",
    "greengrass.listdevicedefinitions": "greengrass:ListDeviceDefinitions",
    "greengrass.listdevicedefinitionversions": "greengrass:ListDeviceDefinitionVersions",
    "greengrass.listfunctiondefinitions": "greengrass:ListFunctionDefinitions",
    "greengrass.listfunctiondefinitionversions": "greengrass:ListFunctionDefinitionVersions",
    "greengrass.listgroupcertificateauthorities": "greengrass:ListGroupCertificateAuthorities",
    "greengrass.listgroups": "greengrass:ListGroups",
    "greengrass.listgroupversions": "greengrass:ListGroupVersions",
    "greengrass.listloggerdefinitions": "greengrass:ListLoggerDefinitions",
    "greengrass.listloggerdefinitionversions": "greengrass:ListLoggerDefinitionVersions",
    "greengrass.listresourcedefinitions": "greengrass:ListResourceDefinitions",
    "greengrass.listresourcedefinitionversions": "greengrass:ListResourceDefinitionVersions",
    "greengrass.listsubscriptiondefinitions": "greengrass:ListSubscriptionDefinitions",
    "greengrass.listsubscriptiondefinitionversions": "greengrass:ListSubscriptionDefinitionVersions",
    "greengrass.listtagsforresource": "greengrass:ListTagsForResource",
    "greengrass.resetdeployments": "greengrass:ResetDeployments",
    "greengrass.startbulkdeployment": "greengrass:StartBulkDeployment",
    "greengrass.stopbulkdeployment": "greengrass:StopBulkDeployment",
    "greengrass.tagresource": "greengrass:TagResource",
    "greengrass.untagresource": "greengrass:UntagResource",
    "greengrass.updateconnectivityinfo": "greengrass:UpdateConnectivityInfo",
    "greengrass.updateconnectordefinition": "greengrass:UpdateConnectorDefinition",
    "greengrass.updatecoredefinition": "greengrass:UpdateCoreDefinition",
    "greengrass.updatedevicedefinition": "greengrass:UpdateDeviceDefinition",
    "greengrass.updatefunctiondefinition": "greengrass:UpdateFunctionDefinition",
    "greengrass.updategroup": "greengrass:UpdateGroup",
    "greengrass.updategroupcertificateconfiguration": "greengrass:UpdateGroupCertificateConfiguration",
    "greengrass.updateloggerdefinition": "greengrass:UpdateLoggerDefinition",
    "greengrass.updateresourcedefinition": "greengrass:UpdateResourceDefinition",
    "greengrass.updatesubscriptiondefinition": "greengrass:UpdateSubscriptionDefinition",
    "greengrass.updatethingruntimeconfiguration": "greengrass:UpdateThingRuntimeConfiguration",
    "greengrassv2.associateserviceroletoaccount": "greengrass:AssociateServiceRoleToAccount",
    "greengrassv2.batchassociateclientdevicewithcoredevice": "greengrass:BatchAssociateClientDeviceWithCoreDevice",
    "greengrassv2.batchdisassociateclientdevicefromcoredevice": "greengrass:BatchDisassociateClientDeviceFromCoreDevice",
    "greengrassv2.canceldeployment": "greengrass:CancelDeployment",
    "greengrassv2.createcomponentversion": "greengrass:CreateComponentVersion",
    "greengrassv2.createdeployment": "greengrass:CreateDeployment",
    "greengrassv2.deletecomponent": "greengrass:DeleteComponent",
    "greengrassv2.deletecoredevice": "greengrass:DeleteCoreDevice",
    "greengrassv2.describecomponent": "greengrass:DescribeComponent",
    "greengrassv2.disassociateservicerolefromaccount": "greengrass:DisassociateServiceRoleFromAccount",
    "greengrassv2.getcomponent": "greengrass:GetComponent",
    "greengrassv2.getcomponentversionartifact": "greengrass:GetComponentVersionArtifact",
    "greengrassv2.getconnectivityinfo": "greengrass:GetConnectivityInfo",
    "greengrassv2.getcoredevice": "greengrass:GetCoreDevice",
    "greengrassv2.getdeployment": "greengrass:GetDeployment",
    "greengrassv2.getserviceroleforaccount": "greengrass:GetServiceRoleForAccount",
    "greengrassv2.listclientdevicesassociatedwithcoredevice": "greengrass:ListClientDevicesAssociatedWithCoreDevice",
    "greengrassv2.listcomponents": "greengrass:ListComponents",
    "greengrassv2.listcomponentversions": "greengrass:ListComponentVersions",
    "greengrassv2.listcoredevices": "greengrass:ListCoreDevices",
    "greengrassv2.listdeployments": "greengrass:ListDeployments",
    "greengrassv2.listeffectivedeployments": "greengrass:ListEffectiveDeployments",
    "greengrassv2.listinstalledcomponents": "greengrass:ListInstalledComponents",
    "greengrassv2.listtagsforresource": "greengrass:ListTagsForResource",
    "greengrassv2.resolvecomponentcandidates": "greengrass:ResolveComponentCandidates",
    "greengrassv2.tagresource": "greengrass:TagResource",
    "greengrassv2.untagresource": "greengrass:UntagResource",
    "greengrassv2.updateconnectivityinfo": "greengrass:UpdateConnectivityInfo",
    "groundstation.cancelcontact": "groundstation:CancelContact",
    "groundstation.createconfig": "groundstation:CreateConfig",
    "groundstation.createdataflowendpointgroup": "groundstation:CreateDataflowEndpointGroup",
    "groundstation.createmissionprofile": "groundstation:CreateMissionProfile",
    "groundstation.deleteconfig": "groundstation:DeleteConfig",
    "groundstation.deletedataflowendpointgroup": "groundstation:DeleteDataflowEndpointGroup",
    "groundstation.deletemissionprofile": "groundstation:DeleteMissionProfile",
    "groundstation.describecontact": "groundstation:DescribeContact",
    "groundstation.getconfig": "groundstation:GetConfig",
    "groundstation.getdataflowendpointgroup": "groundstation:GetDataflowEndpointGroup",
    "groundstation.getminuteusage": "groundstation:GetMinuteUsage",
    "groundstation.getmissionprofile": "groundstation:GetMissionProfile",
    "groundstation.getsatellite": "groundstation:GetSatellite",
    "groundstation.listconfigs": "groundstation:ListConfigs",
    "groundstation.listcontacts": "groundstation:ListContacts",
    "groundstation.listdataflowendpointgroups": "groundstation:ListDataflowEndpointGroups",
    "groundstation.listgroundstations": "groundstation:ListGroundStations",
    "groundstation.listmissionprofiles": "groundstation:ListMissionProfiles",
    "groundstation.listsatellites": "groundstation:ListSatellites",
    "groundstation.listtagsforresource": "groundstation:ListTagsForResource",
    "groundstation.reservecontact": "groundstation:ReserveContact",
    "groundstation.tagresource": "groundstation:TagResource",
    "groundstation.untagresource": "groundstation:UntagResource",
    "groundstation.updateconfig": "groundstation:UpdateConfig",
    "groundstation.updatemissionprofile": "groundstation:UpdateMissionProfile",
    "guardduty.acceptinvitation": "guardduty:AcceptInvitation",
    "guardduty.archivefindings": "guardduty:ArchiveFindings",
    "guardduty.createdetector": "guardduty:CreateDetector",
    "guardduty.createfilter": "guardduty:CreateFilter",
    "guardduty.createipset": "guardduty:CreateIPSet",
    "guardduty.createmembers": "guardduty:CreateMembers",
    "guardduty.createpublishingdestination": "guardduty:CreatePublishingDestination",
    "guardduty.createsamplefindings": "guardduty:CreateSampleFindings",
    "guardduty.createthreatintelset": "guardduty:CreateThreatIntelSet",
    "guardduty.declineinvitations": "guardduty:DeclineInvitations",
    "guardduty.deletedetector": "guardduty:DeleteDetector",
    "guardduty.deletefilter": "guardduty:DeleteFilter",
    "guardduty.deleteinvitations": "guardduty:DeleteInvitations",
    "guardduty.deleteipset": "guardduty:DeleteIPSet",
    "guardduty.deletemembers": "guardduty:DeleteMembers",
    "guardduty.deletepublishingdestination": "guardduty:DeletePublishingDestination",
    "guardduty.deletethreatintelset": "guardduty:DeleteThreatIntelSet",
    "guardduty.describeorganizationconfiguration": "guardduty:DescribeOrganizationConfiguration",
    "guardduty.describepublishingdestination": "guardduty:DescribePublishingDestination",
    "guardduty.disableorganizationadminaccount": "guardduty:DisableOrganizationAdminAccount",
    "guardduty.disassociatefrommasteraccount": "guardduty:DisassociateFromMasterAccount",
    "guardduty.disassociatemembers": "guardduty:DisassociateMembers",
    "guardduty.enableorganizationadminaccount": "guardduty:EnableOrganizationAdminAccount",
    "guardduty.getdetector": "guardduty:GetDetector",
    "guardduty.getfilter": "guardduty:GetFilter",
    "guardduty.getfindings": "guardduty:GetFindings",
    "guardduty.getfindingsstatistics": "guardduty:GetFindingsStatistics",
    "guardduty.getinvitationscount": "guardduty:GetInvitationsCount",
    "guardduty.getipset": "guardduty:GetIPSet",
    "guardduty.getmasteraccount": "guardduty:GetMasterAccount",
    "guardduty.getmemberdetectors": "guardduty:GetMemberDetectors",
    "guardduty.getmembers": "guardduty:GetMembers",
    "guardduty.getthreatintelset": "guardduty:GetThreatIntelSet",
    "guardduty.getusagestatistics": "guardduty:GetUsageStatistics",
    "guardduty.invitemembers": "guardduty:InviteMembers",
    "guardduty.listdetectors": "guardduty:ListDetectors",
    "guardduty.listfilters": "guardduty:ListFilters",
    "guardduty.listfindings": "guardduty:ListFindings",
    "guardduty.listinvitations": "guardduty:ListInvitations",
    "guardduty.listipsets": "guardduty:ListIPSets",
    "guardduty.listmembers": "guardduty:ListMembers",
    "guardduty.listorganizationadminaccounts": "guardduty:ListOrganizationAdminAccounts",
    "guardduty.listpublishingdestinations": "guardduty:ListPublishingDestinations",
    "guardduty.listtagsforresource": "guardduty:ListTagsForResource",
    "guardduty.listthreatintelsets": "guardduty:ListThreatIntelSets",
    "guardduty.startmonitoringmembers": "guardduty:StartMonitoringMembers",
    "guardduty.stopmonitoringmembers": "guardduty:StopMonitoringMembers",
    "guardduty.tagresource": "guardduty:TagResource",
    "guardduty.unarchivefindings": "guardduty:UnarchiveFindings",
    "guardduty.untagresource": "guardduty:UntagResource",
    "guardduty.updatedetector": "guardduty:UpdateDetector",
    "guardduty.updatefilter": "guardduty:UpdateFilter",
    "guardduty.updatefindingsfeedback": "guardduty:UpdateFindingsFeedback",
    "guardduty.updateipset": "guardduty:UpdateIPSet",
    "guardduty.updatememberdetectors": "guardduty:UpdateMemberDetectors",
    "guardduty.updateorganizationconfiguration": "guardduty:UpdateOrganizationConfiguration",
    "guardduty.updatepublishingdestination": "guardduty:UpdatePublishingDestination",
    "guardduty.updatethreatintelset": "guardduty:UpdateThreatIntelSet",
    "health.describeaffectedaccountsfororganization": "health:DescribeAffectedAccountsForOrganization",
    "health.describeaffectedentities": "health:DescribeAffectedEntities",
    "health.describeaffectedentitiesfororganization": "health:DescribeAffectedEntitiesForOrganization",
    "health.describeentityaggregates": "health:DescribeEntityAggregates",
    "health.describeeventaggregates": "health:DescribeEventAggregates",
    "health.describeeventdetails": "health:DescribeEventDetails",
    "health.describeeventdetailsfororganization": "health:DescribeEventDetailsForOrganization",
    "health.describeevents": "health:DescribeEvents",
    "health.describeeventsfororganization": "health:DescribeEventsForOrganization",
    "health.describeeventtypes": "health:DescribeEventTypes",
    "health.describehealthservicestatusfororganization": "health:DescribeHealthServiceStatusForOrganization",
    "health.disablehealthserviceaccessfororganization": "health:DisableHealthServiceAccessForOrganization",
    "health.enablehealthserviceaccessfororganization": "health:EnableHealthServiceAccessForOrganization",
    "healthlake.createfhirdatastore": "healthlake:CreateFHIRDatastore",
    "healthlake.deletefhirdatastore": "healthlake:DeleteFHIRDatastore",
    "healthlake.describefhirdatastore": "healthlake:DescribeFHIRDatastore",
    "healthlake.describefhirexportjob": "healthlake:DescribeFHIRExportJob",
    "healthlake.describefhirimportjob": "healthlake:DescribeFHIRImportJob",
    "healthlake.listfhirdatastores": "healthlake:ListFHIRDatastores",
    "healthlake.listfhirexportjobs": "healthlake:ListFHIRExportJobs",
    "healthlake.listfhirimportjobs": "healthlake:ListFHIRImportJobs",
    "healthlake.listtagsforresource": "healthlake:ListTagsForResource",
    "healthlake.startfhirexportjob": "healthlake:StartFHIRExportJob",
    "healthlake.startfhirimportjob": "healthlake:StartFHIRImportJob",
    "healthlake.tagresource": "healthlake:TagResource",
    "healthlake.untagresource": "healthlake:UntagResource",
    "honeycode.batchcreatetablerows": "honeycode:BatchCreateTableRows",
    "honeycode.batchdeletetablerows": "honeycode:BatchDeleteTableRows",
    "honeycode.batchupdatetablerows": "honeycode:BatchUpdateTableRows",
    "honeycode.batchupserttablerows": "honeycode:BatchUpsertTableRows",
    "honeycode.describetabledataimportjob": "honeycode:DescribeTableDataImportJob",
    "honeycode.getscreendata": "honeycode:GetScreenData",
    "honeycode.invokescreenautomation": "honeycode:InvokeScreenAutomation",
    "honeycode.listtablecolumns": "honeycode:ListTableColumns",
    "honeycode.listtablerows": "honeycode:ListTableRows",
    "honeycode.listtables": "honeycode:ListTables",
    "honeycode.listtagsforresource": "honeycode:ListTagsForResource",
    "honeycode.querytablerows": "honeycode:QueryTableRows",
    "honeycode.starttabledataimportjob": "honeycode:StartTableDataImportJob",
    "honeycode.tagresource": "honeycode:TagResource",
    "honeycode.untagresource": "honeycode:UntagResource",
    "iam.addclientidtoopenidconnectprovider": "iam:AddClientIDToOpenIDConnectProvider",
    "iam.addroletoinstanceprofile": "iam:AddRoleToInstanceProfile",
    "iam.addusertogroup": "iam:AddUserToGroup",
    "iam.attachgrouppolicy": "iam:AttachGroupPolicy",
    "iam.attachrolepolicy": "iam:AttachRolePolicy",
    "iam.attachuserpolicy": "iam:AttachUserPolicy",
    "iam.changepassword": "iam:ChangePassword",
    "iam.createaccesskey": "iam:CreateAccessKey",
    "iam.createaccountalias": "iam:CreateAccountAlias",
    "iam.creategroup": "iam:CreateGroup",
    "iam.createinstanceprofile": "iam:CreateInstanceProfile",
    "iam.createloginprofile": "iam:CreateLoginProfile",
    "iam.createopenidconnectprovider": "iam:CreateOpenIDConnectProvider",
    "iam.createpolicy": "iam:CreatePolicy",
    "iam.createpolicyversion": "iam:CreatePolicyVersion",
    "iam.createrole": "iam:CreateRole",
    "iam.createsamlprovider": "iam:CreateSAMLProvider",
    "iam.createservicelinkedrole": "iam:CreateServiceLinkedRole",
    "iam.createservicespecificcredential": "iam:CreateServiceSpecificCredential",
    "iam.createuser": "iam:CreateUser",
    "iam.createvirtualmfadevice": "iam:CreateVirtualMFADevice",
    "iam.deactivatemfadevice": "iam:DeactivateMFADevice",
    "iam.deleteaccesskey": "iam:DeleteAccessKey",
    "iam.deleteaccountalias": "iam:DeleteAccountAlias",
    "iam.deleteaccountpasswordpolicy": "iam:DeleteAccountPasswordPolicy",
    "iam.deletegroup": "iam:DeleteGroup",
    "iam.deletegrouppolicy": "iam:DeleteGroupPolicy",
    "iam.deleteinstanceprofile": "iam:DeleteInstanceProfile",
    "iam.deleteloginprofile": "iam:DeleteLoginProfile",
    "iam.deleteopenidconnectprovider": "iam:DeleteOpenIDConnectProvider",
    "iam.deletepolicy": "iam:DeletePolicy",
    "iam.deletepolicyversion": "iam:DeletePolicyVersion",
    "iam.deleterole": "iam:DeleteRole",
    "iam.deleterolepermissionsboundary": "iam:DeleteRolePermissionsBoundary",
    "iam.deleterolepolicy": "iam:DeleteRolePolicy",
    "iam.deletesamlprovider": "iam:DeleteSAMLProvider",
    "iam.deleteservercertificate": "iam:DeleteServerCertificate",
    "iam.deleteservicelinkedrole": "iam:DeleteServiceLinkedRole",
    "iam.deleteservicespecificcredential": "iam:DeleteServiceSpecificCredential",
    "iam.deletesigningcertificate": "iam:DeleteSigningCertificate",
    "iam.deletesshpublickey": "iam:DeleteSSHPublicKey",
    "iam.deleteuser": "iam:DeleteUser",
    "iam.deleteuserpermissionsboundary": "iam:DeleteUserPermissionsBoundary",
    "iam.deleteuserpolicy": "iam:DeleteUserPolicy",
    "iam.deletevirtualmfadevice": "iam:DeleteVirtualMFADevice",
    "iam.detachgrouppolicy": "iam:DetachGroupPolicy",
    "iam.detachrolepolicy": "iam:DetachRolePolicy",
    "iam.detachuserpolicy": "iam:DetachUserPolicy",
    "iam.enablemfadevice": "iam:EnableMFADevice",
    "iam.generatecredentialreport": "iam:GenerateCredentialReport",
    "iam.generateorganizationsaccessreport": "iam:GenerateOrganizationsAccessReport",
    "iam.generateservicelastaccesseddetails": "iam:GenerateServiceLastAccessedDetails",
    "iam.getaccesskeylastused": "iam:GetAccessKeyLastUsed",
    "iam.getaccountauthorizationdetails": "iam:GetAccountAuthorizationDetails",
    "iam.getaccountpasswordpolicy": "iam:GetAccountPasswordPolicy",
    "iam.getaccountsummary": "iam:GetAccountSummary",
    "iam.getcontextkeysforcustompolicy": "iam:GetContextKeysForCustomPolicy",
    "iam.getcontextkeysforprincipalpolicy": "iam:GetContextKeysForPrincipalPolicy",
    "iam.getcredentialreport": "iam:GetCredentialReport",
    "iam.getgroup": "iam:GetGroup",
    "iam.getgrouppolicy": "iam:GetGroupPolicy",
    "iam.getinstanceprofile": "iam:GetInstanceProfile",
    "iam.getloginprofile": "iam:GetLoginProfile",
    "iam.getopenidconnectprovider": "iam:GetOpenIDConnectProvider",
    "iam.getorganizationsaccessreport": "iam:GetOrganizationsAccessReport",
    "iam.getpolicy": "iam:GetPolicy",
    "iam.getpolicyversion": "iam:GetPolicyVersion",
    "iam.getrole": "iam:GetRole",
    "iam.getrolepolicy": "iam:GetRolePolicy",
    "iam.getsamlprovider": "iam:GetSAMLProvider",
    "iam.getservercertificate": "iam:GetServerCertificate",
    "iam.getservicelastaccesseddetails": "iam:GetServiceLastAccessedDetails",
    "iam.getservicelastaccesseddetailswithentities": "iam:GetServiceLastAccessedDetailsWithEntities",
    "iam.getservicelinkedroledeletionstatus": "iam:GetServiceLinkedRoleDeletionStatus",
    "iam.getsshpublickey": "iam:GetSSHPublicKey",
    "iam.getuser": "iam:GetUser",
    "iam.getuserpolicy": "iam:GetUserPolicy",
    "iam.listaccesskeys": "iam:ListAccessKeys",
    "iam.listaccountaliases": "iam:ListAccountAliases",
    "iam.listattachedgrouppolicies": "iam:ListAttachedGroupPolicies",
    "iam.listattachedrolepolicies": "iam:ListAttachedRolePolicies",
    "iam.listattacheduserpolicies": "iam:ListAttachedUserPolicies",
    "iam.listentitiesforpolicy": "iam:ListEntitiesForPolicy",
    "iam.listgrouppolicies": "iam:ListGroupPolicies",
    "iam.listgroups": "iam:ListGroups",
    "iam.listgroupsforuser": "iam:ListGroupsForUser",
    "iam.listinstanceprofiles": "iam:ListInstanceProfiles",
    "iam.listinstanceprofilesforrole": "iam:ListInstanceProfilesForRole",
    "iam.listinstanceprofiletags": "iam:ListInstanceProfileTags",
    "iam.listmfadevices": "iam:ListMFADevices",
    "iam.listmfadevicetags": "iam:ListMFADeviceTags",
    "iam.listopenidconnectproviders": "iam:ListOpenIDConnectProviders",
    "iam.listopenidconnectprovidertags": "iam:ListOpenIDConnectProviderTags",
    "iam.listpolicies": "iam:ListPolicies",
    "iam.listpoliciesgrantingserviceaccess": "iam:ListPoliciesGrantingServiceAccess",
    "iam.listpolicytags": "iam:ListPolicyTags",
    "iam.listpolicyversions": "iam:ListPolicyVersions",
    "iam.listrolepolicies": "iam:ListRolePolicies",
    "iam.listroles": "iam:ListRoles",
    "iam.listroletags": "iam:ListRoleTags",
    "iam.listsamlproviders": "iam:ListSAMLProviders",
    "iam.listsamlprovidertags": "iam:ListSAMLProviderTags",
    "iam.listservercertificates": "iam:ListServerCertificates",
    "iam.listservercertificatetags": "iam:ListServerCertificateTags",
    "iam.listservicespecificcredentials": "iam:ListServiceSpecificCredentials",
    "iam.listsigningcertificates": "iam:ListSigningCertificates",
    "iam.listsshpublickeys": "iam:ListSSHPublicKeys",
    "iam.listuserpolicies": "iam:ListUserPolicies",
    "iam.listusers": "iam:ListUsers",
    "iam.listusertags": "iam:ListUserTags",
    "iam.listvirtualmfadevices": "iam:ListVirtualMFADevices",
    "iam.putgrouppolicy": "iam:PutGroupPolicy",
    "iam.putrolepermissionsboundary": "iam:PutRolePermissionsBoundary",
    "iam.putrolepolicy": "iam:PutRolePolicy",
    "iam.putuserpermissionsboundary": "iam:PutUserPermissionsBoundary",
    "iam.putuserpolicy": "iam:PutUserPolicy",
    "iam.removeclientidfromopenidconnectprovider": "iam:RemoveClientIDFromOpenIDConnectProvider",
    "iam.removerolefrominstanceprofile": "iam:RemoveRoleFromInstanceProfile",
    "iam.removeuserfromgroup": "iam:RemoveUserFromGroup",
    "iam.resetservicespecificcredential": "iam:ResetServiceSpecificCredential",
    "iam.resyncmfadevice": "iam:ResyncMFADevice",
    "iam.setdefaultpolicyversion": "iam:SetDefaultPolicyVersion",
    "iam.setsecuritytokenservicepreferences": "iam:SetSecurityTokenServicePreferences",
    "iam.simulatecustompolicy": "iam:SimulateCustomPolicy",
    "iam.simulateprincipalpolicy": "iam:SimulatePrincipalPolicy",
    "iam.taginstanceprofile": "iam:TagInstanceProfile",
    "iam.tagmfadevice": "iam:TagMFADevice",
    "iam.tagopenidconnectprovider": "iam:TagOpenIDConnectProvider",
    "iam.tagpolicy": "iam:TagPolicy",
    "iam.tagrole": "iam:TagRole",
    "iam.tagsamlprovider": "iam:TagSAMLProvider",
    "iam.tagservercertificate": "iam:TagServerCertificate",
    "iam.taguser": "iam:TagUser",
    "iam.untaginstanceprofile": "iam:UntagInstanceProfile",
    "iam.untagmfadevice": "iam:UntagMFADevice",
    "iam.untagopenidconnectprovider": "iam:UntagOpenIDConnectProvider",
    "iam.untagpolicy": "iam:UntagPolicy",
    "iam.untagrole": "iam:UntagRole",
    "iam.untagsamlprovider": "iam:UntagSAMLProvider",
    "iam.untagservercertificate": "iam:UntagServerCertificate",
    "iam.untaguser": "iam:UntagUser",
    "iam.updateaccesskey": "iam:UpdateAccessKey",
    "iam.updateaccountpasswordpolicy": "iam:UpdateAccountPasswordPolicy",
    "iam.updateassumerolepolicy": "iam:UpdateAssumeRolePolicy",
    "iam.updategroup": "iam:UpdateGroup",
    "iam.updateloginprofile": "iam:UpdateLoginProfile",
    "iam.updateopenidconnectproviderthumbprint": "iam:UpdateOpenIDConnectProviderThumbprint",
    "iam.updaterole": "iam:UpdateRole",
    "iam.updateroledescription": "iam:UpdateRoleDescription",
    "iam.updatesamlprovider": "iam:UpdateSAMLProvider",
    "iam.updateservercertificate": "iam:UpdateServerCertificate",
    "iam.updateservicespecificcredential": "iam:UpdateServiceSpecificCredential",
    "iam.updatesigningcertificate": "iam:UpdateSigningCertificate",
    "iam.updatesshpublickey": "iam:UpdateSSHPublicKey",
    "iam.updateuser": "iam:UpdateUser",
    "iam.uploadservercertificate": "iam:UploadServerCertificate",
    "iam.uploadsigningcertificate": "iam:UploadSigningCertificate",
    "iam.uploadsshpublickey": "iam:UploadSSHPublicKey",
    "identitystore.describegroup": "identitystore:DescribeGroup",
    "identitystore.describeuser": "identitystore:DescribeUser",
    "identitystore.listgroups": "identitystore:ListGroups",
    "identitystore.listusers": "identitystore:ListUsers",
    "imagebuilder.cancelimagecreation": "imagebuilder:CancelImageCreation",
    "imagebuilder.createcomponent": "imagebuilder:CreateComponent",
    "imagebuilder.createcontainerrecipe": "imagebuilder:CreateContainerRecipe",
    "imagebuilder.createdistributionconfiguration": "imagebuilder:CreateDistributionConfiguration",
    "imagebuilder.createimage": "imagebuilder:CreateImage",
    "imagebuilder.createimagepipeline": "imagebuilder:CreateImagePipeline",
    "imagebuilder.createimagerecipe": "imagebuilder:CreateImageRecipe",
    "imagebuilder.createinfrastructureconfiguration": "imagebuilder:CreateInfrastructureConfiguration",
    "imagebuilder.deletecomponent": "imagebuilder:DeleteComponent",
    "imagebuilder.deletecontainerrecipe": "imagebuilder:DeleteContainerRecipe",
    "imagebuilder.deletedistributionconfiguration": "imagebuilder:DeleteDistributionConfiguration",
    "imagebuilder.deleteimage": "imagebuilder:DeleteImage",
    "imagebuilder.deleteimagepipeline": "imagebuilder:DeleteImagePipeline",
    "imagebuilder.deleteimagerecipe": "imagebuilder:DeleteImageRecipe",
    "imagebuilder.deleteinfrastructureconfiguration": "imagebuilder:DeleteInfrastructureConfiguration",
    "imagebuilder.getcomponent": "imagebuilder:GetComponent",
    "imagebuilder.getcomponentpolicy": "imagebuilder:GetComponentPolicy",
    "imagebuilder.getcontainerrecipe": "imagebuilder:GetContainerRecipe",
    "imagebuilder.getcontainerrecipepolicy": "imagebuilder:GetContainerRecipePolicy",
    "imagebuilder.getdistributionconfiguration": "imagebuilder:GetDistributionConfiguration",
    "imagebuilder.getimage": "imagebuilder:GetImage",
    "imagebuilder.getimagepipeline": "imagebuilder:GetImagePipeline",
    "imagebuilder.getimagepolicy": "imagebuilder:GetImagePolicy",
    "imagebuilder.getimagerecipe": "imagebuilder:GetImageRecipe",
    "imagebuilder.getimagerecipepolicy": "imagebuilder:GetImageRecipePolicy",
    "imagebuilder.getinfrastructureconfiguration": "imagebuilder:GetInfrastructureConfiguration",
    "imagebuilder.importcomponent": "imagebuilder:ImportComponent",
    "imagebuilder.importvmimage": "imagebuilder:ImportVmImage",
    "imagebuilder.listcomponentbuildversions": "imagebuilder:ListComponentBuildVersions",
    "imagebuilder.listcomponents": "imagebuilder:ListComponents",
    "imagebuilder.listcontainerrecipes": "imagebuilder:ListContainerRecipes",
    "imagebuilder.listdistributionconfigurations": "imagebuilder:ListDistributionConfigurations",
    "imagebuilder.listimagebuildversions": "imagebuilder:ListImageBuildVersions",
    "imagebuilder.listimagepackages": "imagebuilder:ListImagePackages",
    "imagebuilder.listimagepipelineimages": "imagebuilder:ListImagePipelineImages",
    "imagebuilder.listimagepipelines": "imagebuilder:ListImagePipelines",
    "imagebuilder.listimagerecipes": "imagebuilder:ListImageRecipes",
    "imagebuilder.listimages": "imagebuilder:ListImages",
    "imagebuilder.listinfrastructureconfigurations": "imagebuilder:ListInfrastructureConfigurations",
    "imagebuilder.listtagsforresource": "imagebuilder:ListTagsForResource",
    "imagebuilder.putcomponentpolicy": "imagebuilder:PutComponentPolicy",
    "imagebuilder.putcontainerrecipepolicy": "imagebuilder:PutContainerRecipePolicy",
    "imagebuilder.putimagepolicy": "imagebuilder:PutImagePolicy",
    "imagebuilder.putimagerecipepolicy": "imagebuilder:PutImageRecipePolicy",
    "imagebuilder.startimagepipelineexecution": "imagebuilder:StartImagePipelineExecution",
    "imagebuilder.tagresource": "imagebuilder:TagResource",
    "imagebuilder.untagresource": "imagebuilder:UntagResource",
    "imagebuilder.updatedistributionconfiguration": "imagebuilder:UpdateDistributionConfiguration",
    "imagebuilder.updateimagepipeline": "imagebuilder:UpdateImagePipeline",
    "imagebuilder.updateinfrastructureconfiguration": "imagebuilder:UpdateInfrastructureConfiguration",
    "importexport.canceljob": "importexport:CancelJob",
    "importexport.createjob": "importexport:CreateJob",
    "importexport.getshippinglabel": "importexport:GetShippingLabel",
    "importexport.getstatus": "importexport:GetStatus",
    "importexport.listjobs": "importexport:ListJobs",
    "importexport.updatejob": "importexport:UpdateJob",
    "inspector.addattributestofindings": "inspector:AddAttributesToFindings",
    "inspector.createassessmenttarget": "inspector:CreateAssessmentTarget",
    "inspector.createassessmenttemplate": "inspector:CreateAssessmentTemplate",
    "inspector.createexclusionspreview": "inspector:CreateExclusionsPreview",
    "inspector.createresourcegroup": "inspector:CreateResourceGroup",
    "inspector.deleteassessmentrun": "inspector:DeleteAssessmentRun",
    "inspector.deleteassessmenttarget": "inspector:DeleteAssessmentTarget",
    "inspector.deleteassessmenttemplate": "inspector:DeleteAssessmentTemplate",
    "inspector.describeassessmentruns": "inspector:DescribeAssessmentRuns",
    "inspector.describeassessmenttargets": "inspector:DescribeAssessmentTargets",
    "inspector.describeassessmenttemplates": "inspector:DescribeAssessmentTemplates",
    "inspector.describecrossaccountaccessrole": "inspector:DescribeCrossAccountAccessRole",
    "inspector.describeexclusions": "inspector:DescribeExclusions",
    "inspector.describefindings": "inspector:DescribeFindings",
    "inspector.describeresourcegroups": "inspector:DescribeResourceGroups",
    "inspector.describerulespackages": "inspector:DescribeRulesPackages",
    "inspector.getassessmentreport": "inspector:GetAssessmentReport",
    "inspector.getexclusionspreview": "inspector:GetExclusionsPreview",
    "inspector.gettelemetrymetadata": "inspector:GetTelemetryMetadata",
    "inspector.listassessmentrunagents": "inspector:ListAssessmentRunAgents",
    "inspector.listassessmentruns": "inspector:ListAssessmentRuns",
    "inspector.listassessmenttargets": "inspector:ListAssessmentTargets",
    "inspector.listassessmenttemplates": "inspector:ListAssessmentTemplates",
    "inspector.listeventsubscriptions": "inspector:ListEventSubscriptions",
    "inspector.listexclusions": "inspector:ListExclusions",
    "inspector.listfindings": "inspector:ListFindings",
    "inspector.listrulespackages": "inspector:ListRulesPackages",
    "inspector.listtagsforresource": "inspector:ListTagsForResource",
    "inspector.previewagents": "inspector:PreviewAgents",
    "inspector.registercrossaccountaccessrole": "inspector:RegisterCrossAccountAccessRole",
    "inspector.removeattributesfromfindings": "inspector:RemoveAttributesFromFindings",
    "inspector.settagsforresource": "inspector:SetTagsForResource",
    "inspector.startassessmentrun": "inspector:StartAssessmentRun",
    "inspector.stopassessmentrun": "inspector:StopAssessmentRun",
    "inspector.subscribetoevent": "inspector:SubscribeToEvent",
    "inspector.unsubscribefromevent": "inspector:UnsubscribeFromEvent",
    "inspector.updateassessmenttarget": "inspector:UpdateAssessmentTarget",
    "inspector2.associatemember": "inspector2:AssociateMember",
    "inspector2.batchgetaccountstatus": "inspector2:BatchGetAccountStatus",
    "inspector2.batchgetfreetrialinfo": "inspector2:BatchGetFreeTrialInfo",
    "inspector2.cancelfindingsreport": "inspector2:CancelFindingsReport",
    "inspector2.createfilter": "inspector2:CreateFilter",
    "inspector2.createfindingsreport": "inspector2:CreateFindingsReport",
    "inspector2.deletefilter": "inspector2:DeleteFilter",
    "inspector2.describeorganizationconfiguration": "inspector2:DescribeOrganizationConfiguration",
    "inspector2.disable": "inspector2:Disable",
    "inspector2.disabledelegatedadminaccount": "inspector2:DisableDelegatedAdminAccount",
    "inspector2.disassociatemember": "inspector2:DisassociateMember",
    "inspector2.enable": "inspector2:Enable",
    "inspector2.enabledelegatedadminaccount": "inspector2:EnableDelegatedAdminAccount",
    "inspector2.getdelegatedadminaccount": "inspector2:GetDelegatedAdminAccount",
    "inspector2.getfindingsreportstatus": "inspector2:GetFindingsReportStatus",
    "inspector2.getmember": "inspector2:GetMember",
    "inspector2.listaccountpermissions": "inspector2:ListAccountPermissions",
    "inspector2.listcoverage": "inspector2:ListCoverage",
    "inspector2.listcoveragestatistics": "inspector2:ListCoverageStatistics",
    "inspector2.listdelegatedadminaccounts": "inspector2:ListDelegatedAdminAccounts",
    "inspector2.listfilters": "inspector2:ListFilters",
    "inspector2.listfindingaggregations": "inspector2:ListFindingAggregations",
    "inspector2.listfindings": "inspector2:ListFindings",
    "inspector2.listmembers": "inspector2:ListMembers",
    "inspector2.listtagsforresource": "inspector2:ListTagsForResource",
    "inspector2.listusagetotals": "inspector2:ListUsageTotals",
    "inspector2.tagresource": "inspector2:TagResource",
    "inspector2.untagresource": "inspector2:UntagResource",
    "inspector2.updatefilter": "inspector2:UpdateFilter",
    "inspector2.updateorganizationconfiguration": "inspector2:UpdateOrganizationConfiguration",
    "iot.acceptcertificatetransfer": "iot:AcceptCertificateTransfer",
    "iot.addthingtobillinggroup": "iot:AddThingToBillingGroup",
    "iot.addthingtothinggroup": "iot:AddThingToThingGroup",
    "iot.associatetargetswithjob": "iot:AssociateTargetsWithJob",
    "iot.attachpolicy": "iot:AttachPolicy",
    "iot.attachprincipalpolicy": "iot:AttachPrincipalPolicy",
    "iot.attachsecurityprofile": "iot:AttachSecurityProfile",
    "iot.attachthingprincipal": "iot:AttachThingPrincipal",
    "iot.cancelauditmitigationactionstask": "iot:CancelAuditMitigationActionsTask",
    "iot.cancelaudittask": "iot:CancelAuditTask",
    "iot.cancelcertificatetransfer": "iot:CancelCertificateTransfer",
    "iot.canceldetectmitigationactionstask": "iot:CancelDetectMitigationActionsTask",
    "iot.canceljob": "iot:CancelJob",
    "iot.canceljobexecution": "iot:CancelJobExecution",
    "iot.cleardefaultauthorizer": "iot:ClearDefaultAuthorizer",
    "iot.confirmtopicruledestination": "iot:ConfirmTopicRuleDestination",
    "iot.createauditsuppression": "iot:CreateAuditSuppression",
    "iot.createauthorizer": "iot:CreateAuthorizer",
    "iot.createbillinggroup": "iot:CreateBillingGroup",
    "iot.createcertificatefromcsr": "iot:CreateCertificateFromCsr",
    "iot.createcustommetric": "iot:CreateCustomMetric",
    "iot.createdimension": "iot:CreateDimension",
    "iot.createdomainconfiguration": "iot:CreateDomainConfiguration",
    "iot.createdynamicthinggroup": "iot:CreateDynamicThingGroup",
    "iot.createfleetmetric": "iot:CreateFleetMetric",
    "iot.createjob": "iot:CreateJob",
    "iot.createjobtemplate": "iot:CreateJobTemplate",
    "iot.createkeysandcertificate": "iot:CreateKeysAndCertificate",
    "iot.createmitigationaction": "iot:CreateMitigationAction",
    "iot.createotaupdate": "iot:CreateOTAUpdate",
    "iot.createpolicy": "iot:CreatePolicy",
    "iot.createpolicyversion": "iot:CreatePolicyVersion",
    "iot.createprovisioningclaim": "iot:CreateProvisioningClaim",
    "iot.createprovisioningtemplate": "iot:CreateProvisioningTemplate",
    "iot.createprovisioningtemplateversion": "iot:CreateProvisioningTemplateVersion",
    "iot.createrolealias": "iot:CreateRoleAlias",
    "iot.createscheduledaudit": "iot:CreateScheduledAudit",
    "iot.createsecurityprofile": "iot:CreateSecurityProfile",
    "iot.createstream": "iot:CreateStream",
    "iot.creatething": "iot:CreateThing",
    "iot.createthinggroup": "iot:CreateThingGroup",
    "iot.createthingtype": "iot:CreateThingType",
    "iot.createtopicrule": "iot:CreateTopicRule",
    "iot.createtopicruledestination": "iot:CreateTopicRuleDestination",
    "iot.deleteaccountauditconfiguration": "iot:DeleteAccountAuditConfiguration",
    "iot.deleteauditsuppression": "iot:DeleteAuditSuppression",
    "iot.deleteauthorizer": "iot:DeleteAuthorizer",
    "iot.deletebillinggroup": "iot:DeleteBillingGroup",
    "iot.deletecacertificate": "iot:DeleteCACertificate",
    "iot.deletecertificate": "iot:DeleteCertificate",
    "iot.deletecustommetric": "iot:DeleteCustomMetric",
    "iot.deletedimension": "iot:DeleteDimension",
    "iot.deletedomainconfiguration": "iot:DeleteDomainConfiguration",
    "iot.deletedynamicthinggroup": "iot:DeleteDynamicThingGroup",
    "iot.deletefleetmetric": "iot:DeleteFleetMetric",
    "iot.deletejob": "iot:DeleteJob",
    "iot.deletejobexecution": "iot:DeleteJobExecution",
    "iot.deletejobtemplate": "iot:DeleteJobTemplate",
    "iot.deletemitigationaction": "iot:DeleteMitigationAction",
    "iot.deleteotaupdate": "iot:DeleteOTAUpdate",
    "iot.deletepolicy": "iot:DeletePolicy",
    "iot.deletepolicyversion": "iot:DeletePolicyVersion",
    "iot.deleteprovisioningtemplate": "iot:DeleteProvisioningTemplate",
    "iot.deleteprovisioningtemplateversion": "iot:DeleteProvisioningTemplateVersion",
    "iot.deleteregistrationcode": "iot:DeleteRegistrationCode",
    "iot.deleterolealias": "iot:DeleteRoleAlias",
    "iot.deletescheduledaudit": "iot:DeleteScheduledAudit",
    "iot.deletesecurityprofile": "iot:DeleteSecurityProfile",
    "iot.deletestream": "iot:DeleteStream",
    "iot.deletething": "iot:DeleteThing",
    "iot.deletethinggroup": "iot:DeleteThingGroup",
    "iot.deletethingtype": "iot:DeleteThingType",
    "iot.deletetopicrule": "iot:DeleteTopicRule",
    "iot.deletetopicruledestination": "iot:DeleteTopicRuleDestination",
    "iot.deletev2logginglevel": "iot:DeleteV2LoggingLevel",
    "iot.deprecatethingtype": "iot:DeprecateThingType",
    "iot.describeaccountauditconfiguration": "iot:DescribeAccountAuditConfiguration",
    "iot.describeauditfinding": "iot:DescribeAuditFinding",
    "iot.describeauditmitigationactionstask": "iot:DescribeAuditMitigationActionsTask",
    "iot.describeauditsuppression": "iot:DescribeAuditSuppression",
    "iot.describeaudittask": "iot:DescribeAuditTask",
    "iot.describeauthorizer": "iot:DescribeAuthorizer",
    "iot.describebillinggroup": "iot:DescribeBillingGroup",
    "iot.describecacertificate": "iot:DescribeCACertificate",
    "iot.describecertificate": "iot:DescribeCertificate",
    "iot.describecustommetric": "iot:DescribeCustomMetric",
    "iot.describedefaultauthorizer": "iot:DescribeDefaultAuthorizer",
    "iot.describedetectmitigationactionstask": "iot:DescribeDetectMitigationActionsTask",
    "iot.describedimension": "iot:DescribeDimension",
    "iot.describedomainconfiguration": "iot:DescribeDomainConfiguration",
    "iot.describeendpoint": "iot:DescribeEndpoint",
    "iot.describeeventconfigurations": "iot:DescribeEventConfigurations",
    "iot.describefleetmetric": "iot:DescribeFleetMetric",
    "iot.describeindex": "iot:DescribeIndex",
    "iot.describejob": "iot:DescribeJob",
    "iot.describejobexecution": "iot:DescribeJobExecution",
    "iot.describejobtemplate": "iot:DescribeJobTemplate",
    "iot.describemanagedjobtemplate": "iot:DescribeManagedJobTemplate",
    "iot.describemitigationaction": "iot:DescribeMitigationAction",
    "iot.describeprovisioningtemplate": "iot:DescribeProvisioningTemplate",
    "iot.describeprovisioningtemplateversion": "iot:DescribeProvisioningTemplateVersion",
    "iot.describerolealias": "iot:DescribeRoleAlias",
    "iot.describescheduledaudit": "iot:DescribeScheduledAudit",
    "iot.describesecurityprofile": "iot:DescribeSecurityProfile",
    "iot.describestream": "iot:DescribeStream",
    "iot.describething": "iot:DescribeThing",
    "iot.describethinggroup": "iot:DescribeThingGroup",
    "iot.describethingregistrationtask": "iot:DescribeThingRegistrationTask",
    "iot.describethingtype": "iot:DescribeThingType",
    "iot.detachpolicy": "iot:DetachPolicy",
    "iot.detachprincipalpolicy": "iot:DetachPrincipalPolicy",
    "iot.detachsecurityprofile": "iot:DetachSecurityProfile",
    "iot.detachthingprincipal": "iot:DetachThingPrincipal",
    "iot.disabletopicrule": "iot:DisableTopicRule",
    "iot.enabletopicrule": "iot:EnableTopicRule",
    "iot.getbehaviormodeltrainingsummaries": "iot:GetBehaviorModelTrainingSummaries",
    "iot.getbucketsaggregation": "iot:GetBucketsAggregation",
    "iot.getcardinality": "iot:GetCardinality",
    "iot.geteffectivepolicies": "iot:GetEffectivePolicies",
    "iot.getindexingconfiguration": "iot:GetIndexingConfiguration",
    "iot.getjobdocument": "iot:GetJobDocument",
    "iot.getloggingoptions": "iot:GetLoggingOptions",
    "iot.getotaupdate": "iot:GetOTAUpdate",
    "iot.getpercentiles": "iot:GetPercentiles",
    "iot.getpolicy": "iot:GetPolicy",
    "iot.getpolicyversion": "iot:GetPolicyVersion",
    "iot.getregistrationcode": "iot:GetRegistrationCode",
    "iot.getstatistics": "iot:GetStatistics",
    "iot.gettopicrule": "iot:GetTopicRule",
    "iot.gettopicruledestination": "iot:GetTopicRuleDestination",
    "iot.getv2loggingoptions": "iot:GetV2LoggingOptions",
    "iot.listactiveviolations": "iot:ListActiveViolations",
    "iot.listattachedpolicies": "iot:ListAttachedPolicies",
    "iot.listauditfindings": "iot:ListAuditFindings",
    "iot.listauditmitigationactionsexecutions": "iot:ListAuditMitigationActionsExecutions",
    "iot.listauditmitigationactionstasks": "iot:ListAuditMitigationActionsTasks",
    "iot.listauditsuppressions": "iot:ListAuditSuppressions",
    "iot.listaudittasks": "iot:ListAuditTasks",
    "iot.listauthorizers": "iot:ListAuthorizers",
    "iot.listbillinggroups": "iot:ListBillingGroups",
    "iot.listcacertificates": "iot:ListCACertificates",
    "iot.listcertificates": "iot:ListCertificates",
    "iot.listcertificatesbyca": "iot:ListCertificatesByCA",
    "iot.listcustommetrics": "iot:ListCustomMetrics",
    "iot.listdetectmitigationactionsexecutions": "iot:ListDetectMitigationActionsExecutions",
    "iot.listdetectmitigationactionstasks": "iot:ListDetectMitigationActionsTasks",
    "iot.listdimensions": "iot:ListDimensions",
    "iot.listdomainconfigurations": "iot:ListDomainConfigurations",
    "iot.listfleetmetrics": "iot:ListFleetMetrics",
    "iot.listindices": "iot:ListIndices",
    "iot.listjobexecutionsforjob": "iot:ListJobExecutionsForJob",
    "iot.listjobexecutionsforthing": "iot:ListJobExecutionsForThing",
    "iot.listjobs": "iot:ListJobs",
    "iot.listjobtemplates": "iot:ListJobTemplates",
    "iot.listmanagedjobtemplates": "iot:ListManagedJobTemplates",
    "iot.listmetricvalues": "iot:ListMetricValues",
    "iot.listmitigationactions": "iot:ListMitigationActions",
    "iot.listotaupdates": "iot:ListOTAUpdates",
    "iot.listoutgoingcertificates": "iot:ListOutgoingCertificates",
    "iot.listpolicies": "iot:ListPolicies",
    "iot.listpolicyprincipals": "iot:ListPolicyPrincipals",
    "iot.listpolicyversions": "iot:ListPolicyVersions",
    "iot.listprincipalpolicies": "iot:ListPrincipalPolicies",
    "iot.listprincipalthings": "iot:ListPrincipalThings",
    "iot.listprovisioningtemplates": "iot:ListProvisioningTemplates",
    "iot.listprovisioningtemplateversions": "iot:ListProvisioningTemplateVersions",
    "iot.listrolealiases": "iot:ListRoleAliases",
    "iot.listscheduledaudits": "iot:ListScheduledAudits",
    "iot.listsecurityprofiles": "iot:ListSecurityProfiles",
    "iot.listsecurityprofilesfortarget": "iot:ListSecurityProfilesForTarget",
    "iot.liststreams": "iot:ListStreams",
    "iot.listtagsforresource": "iot:ListTagsForResource",
    "iot.listtargetsforpolicy": "iot:ListTargetsForPolicy",
    "iot.listtargetsforsecurityprofile": "iot:ListTargetsForSecurityProfile",
    "iot.listthinggroups": "iot:ListThingGroups",
    "iot.listthinggroupsforthing": "iot:ListThingGroupsForThing",
    "iot.listthingprincipals": "iot:ListThingPrincipals",
    "iot.listthingregistrationtaskreports": "iot:ListThingRegistrationTaskReports",
    "iot.listthingregistrationtasks": "iot:ListThingRegistrationTasks",
    "iot.listthings": "iot:ListThings",
    "iot.listthingsinbillinggroup": "iot:ListThingsInBillingGroup",
    "iot.listthingsinthinggroup": "iot:ListThingsInThingGroup",
    "iot.listthingtypes": "iot:ListThingTypes",
    "iot.listtopicruledestinations": "iot:ListTopicRuleDestinations",
    "iot.listtopicrules": "iot:ListTopicRules",
    "iot.listv2logginglevels": "iot:ListV2LoggingLevels",
    "iot.listviolationevents": "iot:ListViolationEvents",
    "iot.putverificationstateonviolation": "iot:PutVerificationStateOnViolation",
    "iot.registercacertificate": "iot:RegisterCACertificate",
    "iot.registercertificate": "iot:RegisterCertificate",
    "iot.registercertificatewithoutca": "iot:RegisterCertificateWithoutCA",
    "iot.registerthing": "iot:RegisterThing",
    "iot.rejectcertificatetransfer": "iot:RejectCertificateTransfer",
    "iot.removethingfrombillinggroup": "iot:RemoveThingFromBillingGroup",
    "iot.removethingfromthinggroup": "iot:RemoveThingFromThingGroup",
    "iot.replacetopicrule": "iot:ReplaceTopicRule",
    "iot.searchindex": "iot:SearchIndex",
    "iot.setdefaultauthorizer": "iot:SetDefaultAuthorizer",
    "iot.setdefaultpolicyversion": "iot:SetDefaultPolicyVersion",
    "iot.setloggingoptions": "iot:SetLoggingOptions",
    "iot.setv2logginglevel": "iot:SetV2LoggingLevel",
    "iot.setv2loggingoptions": "iot:SetV2LoggingOptions",
    "iot.startauditmitigationactionstask": "iot:StartAuditMitigationActionsTask",
    "iot.startdetectmitigationactionstask": "iot:StartDetectMitigationActionsTask",
    "iot.startondemandaudittask": "iot:StartOnDemandAuditTask",
    "iot.startthingregistrationtask": "iot:StartThingRegistrationTask",
    "iot.stopthingregistrationtask": "iot:StopThingRegistrationTask",
    "iot.tagresource": "iot:TagResource",
    "iot.testauthorization": "iot:TestAuthorization",
    "iot.testinvokeauthorizer": "iot:TestInvokeAuthorizer",
    "iot.transfercertificate": "iot:TransferCertificate",
    "iot.untagresource": "iot:UntagResource",
    "iot.updateaccountauditconfiguration": "iot:UpdateAccountAuditConfiguration",
    "iot.updateauditsuppression": "iot:UpdateAuditSuppression",
    "iot.updateauthorizer": "iot:UpdateAuthorizer",
    "iot.updatebillinggroup": "iot:UpdateBillingGroup",
    "iot.updatecacertificate": "iot:UpdateCACertificate",
    "iot.updatecertificate": "iot:UpdateCertificate",
    "iot.updatecustommetric": "iot:UpdateCustomMetric",
    "iot.updatedimension": "iot:UpdateDimension",
    "iot.updatedomainconfiguration": "iot:UpdateDomainConfiguration",
    "iot.updatedynamicthinggroup": "iot:UpdateDynamicThingGroup",
    "iot.updateeventconfigurations": "iot:UpdateEventConfigurations",
    "iot.updatefleetmetric": "iot:UpdateFleetMetric",
    "iot.updateindexingconfiguration": "iot:UpdateIndexingConfiguration",
    "iot.updatejob": "iot:UpdateJob",
    "iot.updatemitigationaction": "iot:UpdateMitigationAction",
    "iot.updateprovisioningtemplate": "iot:UpdateProvisioningTemplate",
    "iot.updaterolealias": "iot:UpdateRoleAlias",
    "iot.updatescheduledaudit": "iot:UpdateScheduledAudit",
    "iot.updatesecurityprofile": "iot:UpdateSecurityProfile",
    "iot.updatestream": "iot:UpdateStream",
    "iot.updatething": "iot:UpdateThing",
    "iot.updatethinggroup": "iot:UpdateThingGroup",
    "iot.updatethinggroupsforthing": "iot:UpdateThingGroupsForThing",
    "iot.updatetopicruledestination": "iot:UpdateTopicRuleDestination",
    "iot.validatesecurityprofilebehaviors": "iot:ValidateSecurityProfileBehaviors",
    "iot1clickdevicesservice.claimdevicesbyclaimcode": "iot1click:ClaimDevicesByClaimCode",
    "iot1clickdevicesservice.describedevice": "iot1click:DescribeDevice",
    "iot1clickdevicesservice.finalizedeviceclaim": "iot1click:FinalizeDeviceClaim",
    "iot1clickdevicesservice.getdevicemethods": "iot1click:GetDeviceMethods",
    "iot1clickdevicesservice.initiatedeviceclaim": "iot1click:InitiateDeviceClaim",
    "iot1clickdevicesservice.invokedevicemethod": "iot1click:InvokeDeviceMethod",
    "iot1clickdevicesservice.listdeviceevents": "iot1click:ListDeviceEvents",
    "iot1clickdevicesservice.listdevices": "iot1click:ListDevices",
    "iot1clickdevicesservice.listtagsforresource": "iot1click:ListTagsForResource",
    "iot1clickdevicesservice.tagresource": "iot1click:TagResource",
    "iot1clickdevicesservice.unclaimdevice": "iot1click:UnclaimDevice",
    "iot1clickdevicesservice.untagresource": "iot1click:UntagResource",
    "iot1clickdevicesservice.updatedevicestate": "iot1click:UpdateDeviceState",
    "iot1clickprojects.associatedevicewithplacement": "iot1click:AssociateDeviceWithPlacement",
    "iot1clickprojects.createplacement": "iot1click:CreatePlacement",
    "iot1clickprojects.createproject": "iot1click:CreateProject",
    "iot1clickprojects.deleteplacement": "iot1click:DeletePlacement",
    "iot1clickprojects.deleteproject": "iot1click:DeleteProject",
    "iot1clickprojects.describeplacement": "iot1click:DescribePlacement",
    "iot1clickprojects.describeproject": "iot1click:DescribeProject",
    "iot1clickprojects.disassociatedevicefromplacement": "iot1click:DisassociateDeviceFromPlacement",
    "iot1clickprojects.getdevicesinplacement": "iot1click:GetDevicesInPlacement",
    "iot1clickprojects.listplacements": "iot1click:ListPlacements",
    "iot1clickprojects.listprojects": "iot1click:ListProjects",
    "iot1clickprojects.listtagsforresource": "iot1click:ListTagsForResource",
    "iot1clickprojects.tagresource": "iot1click:TagResource",
    "iot1clickprojects.untagresource": "iot1click:UntagResource",
    "iot1clickprojects.updateplacement": "iot1click:UpdatePlacement",
    "iot1clickprojects.updateproject": "iot1click:UpdateProject",
    "iotanalytics.batchputmessage": "iotanalytics:BatchPutMessage",
    "iotanalytics.cancelpipelinereprocessing": "iotanalytics:CancelPipelineReprocessing",
    "iotanalytics.createchannel": "iotanalytics:CreateChannel",
    "iotanalytics.createdataset": "iotanalytics:CreateDataset",
    "iotanalytics.createdatasetcontent": "iotanalytics:CreateDatasetContent",
    "iotanalytics.createdatastore": "iotanalytics:CreateDatastore",
    "iotanalytics.createpipeline": "iotanalytics:CreatePipeline",
    "iotanalytics.deletechannel": "iotanalytics:DeleteChannel",
    "iotanalytics.deletedataset": "iotanalytics:DeleteDataset",
    "iotanalytics.deletedatasetcontent": "iotanalytics:DeleteDatasetContent",
    "iotanalytics.deletedatastore": "iotanalytics:DeleteDatastore",
    "iotanalytics.deletepipeline": "iotanalytics:DeletePipeline",
    "iotanalytics.describechannel": "iotanalytics:DescribeChannel",
    "iotanalytics.describedataset": "iotanalytics:DescribeDataset",
    "iotanalytics.describedatastore": "iotanalytics:DescribeDatastore",
    "iotanalytics.describeloggingoptions": "iotanalytics:DescribeLoggingOptions",
    "iotanalytics.describepipeline": "iotanalytics:DescribePipeline",
    "iotanalytics.getdatasetcontent": "iotanalytics:GetDatasetContent",
    "iotanalytics.listchannels": "iotanalytics:ListChannels",
    "iotanalytics.listdatasetcontents": "iotanalytics:ListDatasetContents",
    "iotanalytics.listdatasets": "iotanalytics:ListDatasets",
    "iotanalytics.listdatastores": "iotanalytics:ListDatastores",
    "iotanalytics.listpipelines": "iotanalytics:ListPipelines",
    "iotanalytics.listtagsforresource": "iotanalytics:ListTagsForResource",
    "iotanalytics.putloggingoptions": "iotanalytics:PutLoggingOptions",
    "iotanalytics.runpipelineactivity": "iotanalytics:RunPipelineActivity",
    "iotanalytics.samplechanneldata": "iotanalytics:SampleChannelData",
    "iotanalytics.startpipelinereprocessing": "iotanalytics:StartPipelineReprocessing",
    "iotanalytics.tagresource": "iotanalytics:TagResource",
    "iotanalytics.untagresource": "iotanalytics:UntagResource",
    "iotanalytics.updatechannel": "iotanalytics:UpdateChannel",
    "iotanalytics.updatedataset": "iotanalytics:UpdateDataset",
    "iotanalytics.updatedatastore": "iotanalytics:UpdateDatastore",
    "iotanalytics.updatepipeline": "iotanalytics:UpdatePipeline",
    "iotdata.deletethingshadow": "iot:DeleteThingShadow",
    "iotdata.getretainedmessage": "iot:GetRetainedMessage",
    "iotdata.getthingshadow": "iot:GetThingShadow",
    "iotdata.listnamedshadowsforthing": "iot:ListNamedShadowsForThing",
    "iotdata.listretainedmessages": "iot:ListRetainedMessages",
    "iotdata.publish": "iot:Publish",
    "iotdata.updatethingshadow": "iot:UpdateThingShadow",
    "iotdeviceadvisor.createsuitedefinition": "iotdeviceadvisor:CreateSuiteDefinition",
    "iotdeviceadvisor.deletesuitedefinition": "iotdeviceadvisor:DeleteSuiteDefinition",
    "iotdeviceadvisor.getendpoint": "iotdeviceadvisor:GetEndpoint",
    "iotdeviceadvisor.getsuitedefinition": "iotdeviceadvisor:GetSuiteDefinition",
    "iotdeviceadvisor.getsuiterun": "iotdeviceadvisor:GetSuiteRun",
    "iotdeviceadvisor.getsuiterunreport": "iotdeviceadvisor:GetSuiteRunReport",
    "iotdeviceadvisor.listsuitedefinitions": "iotdeviceadvisor:ListSuiteDefinitions",
    "iotdeviceadvisor.listsuiteruns": "iotdeviceadvisor:ListSuiteRuns",
    "iotdeviceadvisor.listtagsforresource": "iotdeviceadvisor:ListTagsForResource",
    "iotdeviceadvisor.startsuiterun": "iotdeviceadvisor:StartSuiteRun",
    "iotdeviceadvisor.stopsuiterun": "iotdeviceadvisor:StopSuiteRun",
    "iotdeviceadvisor.tagresource": "iotdeviceadvisor:TagResource",
    "iotdeviceadvisor.untagresource": "iotdeviceadvisor:UntagResource",
    "iotdeviceadvisor.updatesuitedefinition": "iotdeviceadvisor:UpdateSuiteDefinition",
    "iotevents.createalarmmodel": "iotevents:CreateAlarmModel",
    "iotevents.createdetectormodel": "iotevents:CreateDetectorModel",
    "iotevents.createinput": "iotevents:CreateInput",
    "iotevents.deletealarmmodel": "iotevents:DeleteAlarmModel",
    "iotevents.deletedetectormodel": "iotevents:DeleteDetectorModel",
    "iotevents.deleteinput": "iotevents:DeleteInput",
    "iotevents.describealarmmodel": "iotevents:DescribeAlarmModel",
    "iotevents.describedetectormodel": "iotevents:DescribeDetectorModel",
    "iotevents.describedetectormodelanalysis": "iotevents:DescribeDetectorModelAnalysis",
    "iotevents.describeinput": "iotevents:DescribeInput",
    "iotevents.describeloggingoptions": "iotevents:DescribeLoggingOptions",
    "iotevents.getdetectormodelanalysisresults": "iotevents:GetDetectorModelAnalysisResults",
    "iotevents.listalarmmodels": "iotevents:ListAlarmModels",
    "iotevents.listalarmmodelversions": "iotevents:ListAlarmModelVersions",
    "iotevents.listdetectormodels": "iotevents:ListDetectorModels",
    "iotevents.listdetectormodelversions": "iotevents:ListDetectorModelVersions",
    "iotevents.listinputroutings": "iotevents:ListInputRoutings",
    "iotevents.listinputs": "iotevents:ListInputs",
    "iotevents.listtagsforresource": "iotevents:ListTagsForResource",
    "iotevents.putloggingoptions": "iotevents:PutLoggingOptions",
    "iotevents.startdetectormodelanalysis": "iotevents:StartDetectorModelAnalysis",
    "iotevents.tagresource": "iotevents:TagResource",
    "iotevents.untagresource": "iotevents:UntagResource",
    "iotevents.updatealarmmodel": "iotevents:UpdateAlarmModel",
    "iotevents.updatedetectormodel": "iotevents:UpdateDetectorModel",
    "iotevents.updateinput": "iotevents:UpdateInput",
    "ioteventsdata.batchacknowledgealarm": "iotevents:BatchAcknowledgeAlarm",
    "ioteventsdata.batchdeletedetector": "iotevents:BatchDeleteDetector",
    "ioteventsdata.batchdisablealarm": "iotevents:BatchDisableAlarm",
    "ioteventsdata.batchenablealarm": "iotevents:BatchEnableAlarm",
    "ioteventsdata.batchputmessage": "iotevents:BatchPutMessage",
    "ioteventsdata.batchresetalarm": "iotevents:BatchResetAlarm",
    "ioteventsdata.batchsnoozealarm": "iotevents:BatchSnoozeAlarm",
    "ioteventsdata.batchupdatedetector": "iotevents:BatchUpdateDetector",
    "ioteventsdata.describealarm": "iotevents:DescribeAlarm",
    "ioteventsdata.describedetector": "iotevents:DescribeDetector",
    "ioteventsdata.listalarms": "iotevents:ListAlarms",
    "ioteventsdata.listdetectors": "iotevents:ListDetectors",
    "iotfleethub.createapplication": "iotfleethub:CreateApplication",
    "iotfleethub.deleteapplication": "iotfleethub:DeleteApplication",
    "iotfleethub.describeapplication": "iotfleethub:DescribeApplication",
    "iotfleethub.listapplications": "iotfleethub:ListApplications",
    "iotfleethub.listtagsforresource": "iotfleethub:ListTagsForResource",
    "iotfleethub.tagresource": "iotfleethub:TagResource",
    "iotfleethub.untagresource": "iotfleethub:UntagResource",
    "iotfleethub.updateapplication": "iotfleethub:UpdateApplication",
    "iotjobsdataplane.describejobexecution": "iot:DescribeJobExecution",
    "iotjobsdataplane.getpendingjobexecutions": "iot:GetPendingJobExecutions",
    "iotjobsdataplane.startnextpendingjobexecution": "iot:StartNextPendingJobExecution",
    "iotjobsdataplane.updatejobexecution": "iot:UpdateJobExecution",
    "iotsecuretunneling.closetunnel": "iot:CloseTunnel",
    "iotsecuretunneling.describetunnel": "iot:DescribeTunnel",
    "iotsecuretunneling.listtagsforresource": "iot:ListTagsForResource",
    "iotsecuretunneling.listtunnels": "iot:ListTunnels",
    "iotsecuretunneling.opentunnel": "iot:OpenTunnel",
    "iotsecuretunneling.rotatetunnelaccesstoken": "iot:RotateTunnelAccessToken",
    "iotsecuretunneling.tagresource": "iot:TagResource",
    "iotsecuretunneling.untagresource": "iot:UntagResource",
    "iotsitewise.associateassets": "iotsitewise:AssociateAssets",
    "iotsitewise.associatetimeseriestoassetproperty": "iotsitewise:AssociateTimeSeriesToAssetProperty",
    "iotsitewise.batchassociateprojectassets": "iotsitewise:BatchAssociateProjectAssets",
    "iotsitewise.batchdisassociateprojectassets": "iotsitewise:BatchDisassociateProjectAssets",
    "iotsitewise.batchgetassetpropertyaggregates": "iotsitewise:BatchGetAssetPropertyAggregates",
    "iotsitewise.batchgetassetpropertyvalue": "iotsitewise:BatchGetAssetPropertyValue",
    "iotsitewise.batchgetassetpropertyvaluehistory": "iotsitewise:BatchGetAssetPropertyValueHistory",
    "iotsitewise.batchputassetpropertyvalue": "iotsitewise:BatchPutAssetPropertyValue",
    "iotsitewise.createaccesspolicy": "iotsitewise:CreateAccessPolicy",
    "iotsitewise.createasset": "iotsitewise:CreateAsset",
    "iotsitewise.createassetmodel": "iotsitewise:CreateAssetModel",
    "iotsitewise.createdashboard": "iotsitewise:CreateDashboard",
    "iotsitewise.creategateway": "iotsitewise:CreateGateway",
    "iotsitewise.createportal": "iotsitewise:CreatePortal",
    "iotsitewise.createproject": "iotsitewise:CreateProject",
    "iotsitewise.deleteaccesspolicy": "iotsitewise:DeleteAccessPolicy",
    "iotsitewise.deleteasset": "iotsitewise:DeleteAsset",
    "iotsitewise.deleteassetmodel": "iotsitewise:DeleteAssetModel",
    "iotsitewise.deletedashboard": "iotsitewise:DeleteDashboard",
    "iotsitewise.deletegateway": "iotsitewise:DeleteGateway",
    "iotsitewise.deleteportal": "iotsitewise:DeletePortal",
    "iotsitewise.deleteproject": "iotsitewise:DeleteProject",
    "iotsitewise.deletetimeseries": "iotsitewise:DeleteTimeSeries",
    "iotsitewise.describeaccesspolicy": "iotsitewise:DescribeAccessPolicy",
    "iotsitewise.describeasset": "iotsitewise:DescribeAsset",
    "iotsitewise.describeassetmodel": "iotsitewise:DescribeAssetModel",
    "iotsitewise.describeassetproperty": "iotsitewise:DescribeAssetProperty",
    "iotsitewise.describedashboard": "iotsitewise:DescribeDashboard",
    "iotsitewise.describedefaultencryptionconfiguration": "iotsitewise:DescribeDefaultEncryptionConfiguration",
    "iotsitewise.describegateway": "iotsitewise:DescribeGateway",
    "iotsitewise.describegatewaycapabilityconfiguration": "iotsitewise:DescribeGatewayCapabilityConfiguration",
    "iotsitewise.describeloggingoptions": "iotsitewise:DescribeLoggingOptions",
    "iotsitewise.describeportal": "iotsitewise:DescribePortal",
    "iotsitewise.describeproject": "iotsitewise:DescribeProject",
    "iotsitewise.describestorageconfiguration": "iotsitewise:DescribeStorageConfiguration",
    "iotsitewise.describetimeseries": "iotsitewise:DescribeTimeSeries",
    "iotsitewise.disassociateassets": "iotsitewise:DisassociateAssets",
    "iotsitewise.disassociatetimeseriesfromassetproperty": "iotsitewise:DisassociateTimeSeriesFromAssetProperty",
    "iotsitewise.getassetpropertyaggregates": "iotsitewise:GetAssetPropertyAggregates",
    "iotsitewise.getassetpropertyvalue": "iotsitewise:GetAssetPropertyValue",
    "iotsitewise.getassetpropertyvaluehistory": "iotsitewise:GetAssetPropertyValueHistory",
    "iotsitewise.getinterpolatedassetpropertyvalues": "iotsitewise:GetInterpolatedAssetPropertyValues",
    "iotsitewise.listaccesspolicies": "iotsitewise:ListAccessPolicies",
    "iotsitewise.listassetmodels": "iotsitewise:ListAssetModels",
    "iotsitewise.listassetrelationships": "iotsitewise:ListAssetRelationships",
    "iotsitewise.listassets": "iotsitewise:ListAssets",
    "iotsitewise.listassociatedassets": "iotsitewise:ListAssociatedAssets",
    "iotsitewise.listdashboards": "iotsitewise:ListDashboards",
    "iotsitewise.listgateways": "iotsitewise:ListGateways",
    "iotsitewise.listportals": "iotsitewise:ListPortals",
    "iotsitewise.listprojectassets": "iotsitewise:ListProjectAssets",
    "iotsitewise.listprojects": "iotsitewise:ListProjects",
    "iotsitewise.listtagsforresource": "iotsitewise:ListTagsForResource",
    "iotsitewise.listtimeseries": "iotsitewise:ListTimeSeries",
    "iotsitewise.putdefaultencryptionconfiguration": "iotsitewise:PutDefaultEncryptionConfiguration",
    "iotsitewise.putloggingoptions": "iotsitewise:PutLoggingOptions",
    "iotsitewise.putstorageconfiguration": "iotsitewise:PutStorageConfiguration",
    "iotsitewise.tagresource": "iotsitewise:TagResource",
    "iotsitewise.untagresource": "iotsitewise:UntagResource",
    "iotsitewise.updateaccesspolicy": "iotsitewise:UpdateAccessPolicy",
    "iotsitewise.updateasset": "iotsitewise:UpdateAsset",
    "iotsitewise.updateassetmodel": "iotsitewise:UpdateAssetModel",
    "iotsitewise.updateassetproperty": "iotsitewise:UpdateAssetProperty",
    "iotsitewise.updatedashboard": "iotsitewise:UpdateDashboard",
    "iotsitewise.updategateway": "iotsitewise:UpdateGateway",
    "iotsitewise.updategatewaycapabilityconfiguration": "iotsitewise:UpdateGatewayCapabilityConfiguration",
    "iotsitewise.updateportal": "iotsitewise:UpdatePortal",
    "iotsitewise.updateproject": "iotsitewise:UpdateProject",
    "iotthingsgraph.associateentitytothing": "iotthingsgraph:AssociateEntityToThing",
    "iotthingsgraph.createflowtemplate": "iotthingsgraph:CreateFlowTemplate",
    "iotthingsgraph.createsysteminstance": "iotthingsgraph:CreateSystemInstance",
    "iotthingsgraph.createsystemtemplate": "iotthingsgraph:CreateSystemTemplate",
    "iotthingsgraph.deleteflowtemplate": "iotthingsgraph:DeleteFlowTemplate",
    "iotthingsgraph.deletenamespace": "iotthingsgraph:DeleteNamespace",
    "iotthingsgraph.deletesysteminstance": "iotthingsgraph:DeleteSystemInstance",
    "iotthingsgraph.deletesystemtemplate": "iotthingsgraph:DeleteSystemTemplate",
    "iotthingsgraph.deploysysteminstance": "iotthingsgraph:DeploySystemInstance",
    "iotthingsgraph.deprecateflowtemplate": "iotthingsgraph:DeprecateFlowTemplate",
    "iotthingsgraph.deprecatesystemtemplate": "iotthingsgraph:DeprecateSystemTemplate",
    "iotthingsgraph.describenamespace": "iotthingsgraph:DescribeNamespace",
    "iotthingsgraph.dissociateentityfromthing": "iotthingsgraph:DissociateEntityFromThing",
    "iotthingsgraph.getentities": "iotthingsgraph:GetEntities",
    "iotthingsgraph.getflowtemplate": "iotthingsgraph:GetFlowTemplate",
    "iotthingsgraph.getflowtemplaterevisions": "iotthingsgraph:GetFlowTemplateRevisions",
    "iotthingsgraph.getnamespacedeletionstatus": "iotthingsgraph:GetNamespaceDeletionStatus",
    "iotthingsgraph.getsysteminstance": "iotthingsgraph:GetSystemInstance",
    "iotthingsgraph.getsystemtemplate": "iotthingsgraph:GetSystemTemplate",
    "iotthingsgraph.getsystemtemplaterevisions": "iotthingsgraph:GetSystemTemplateRevisions",
    "iotthingsgraph.getuploadstatus": "iotthingsgraph:GetUploadStatus",
    "iotthingsgraph.listflowexecutionmessages": "iotthingsgraph:ListFlowExecutionMessages",
    "iotthingsgraph.listtagsforresource": "iotthingsgraph:ListTagsForResource",
    "iotthingsgraph.searchentities": "iotthingsgraph:SearchEntities",
    "iotthingsgraph.searchflowexecutions": "iotthingsgraph:SearchFlowExecutions",
    "iotthingsgraph.searchflowtemplates": "iotthingsgraph:SearchFlowTemplates",
    "iotthingsgraph.searchsysteminstances": "iotthingsgraph:SearchSystemInstances",
    "iotthingsgraph.searchsystemtemplates": "iotthingsgraph:SearchSystemTemplates",
    "iotthingsgraph.searchthings": "iotthingsgraph:SearchThings",
    "iotthingsgraph.tagresource": "iotthingsgraph:TagResource",
    "iotthingsgraph.undeploysysteminstance": "iotthingsgraph:UndeploySystemInstance",
    "iotthingsgraph.untagresource": "iotthingsgraph:UntagResource",
    "iotthingsgraph.updateflowtemplate": "iotthingsgraph:UpdateFlowTemplate",
    "iotthingsgraph.updatesystemtemplate": "iotthingsgraph:UpdateSystemTemplate",
    "iotthingsgraph.uploadentitydefinitions": "iotthingsgraph:UploadEntityDefinitions",
    "iottwinmaker.createcomponenttype": "iottwinmaker:CreateComponentType",
    "iottwinmaker.createentity": "iottwinmaker:CreateEntity",
    "iottwinmaker.createscene": "iottwinmaker:CreateScene",
    "iottwinmaker.createworkspace": "iottwinmaker:CreateWorkspace",
    "iottwinmaker.deletecomponenttype": "iottwinmaker:DeleteComponentType",
    "iottwinmaker.deleteentity": "iottwinmaker:DeleteEntity",
    "iottwinmaker.deletescene": "iottwinmaker:DeleteScene",
    "iottwinmaker.deleteworkspace": "iottwinmaker:DeleteWorkspace",
    "iottwinmaker.getcomponenttype": "iottwinmaker:GetComponentType",
    "iottwinmaker.getentity": "iottwinmaker:GetEntity",
    "iottwinmaker.getpropertyvalue": "iottwinmaker:GetPropertyValue",
    "iottwinmaker.getscene": "iottwinmaker:GetScene",
    "iottwinmaker.getworkspace": "iottwinmaker:GetWorkspace",
    "iottwinmaker.listcomponenttypes": "iottwinmaker:ListComponentTypes",
    "iottwinmaker.listentities": "iottwinmaker:ListEntities",
    "iottwinmaker.listscenes": "iottwinmaker:ListScenes",
    "iottwinmaker.listtagsforresource": "iottwinmaker:ListTagsForResource",
    "iottwinmaker.listworkspaces": "iottwinmaker:ListWorkspaces",
    "iottwinmaker.tagresource": "iottwinmaker:TagResource",
    "iottwinmaker.untagresource": "iottwinmaker:UntagResource",
    "iottwinmaker.updatecomponenttype": "iottwinmaker:UpdateComponentType",
    "iottwinmaker.updateentity": "iottwinmaker:UpdateEntity",
    "iottwinmaker.updatescene": "iottwinmaker:UpdateScene",
    "iottwinmaker.updateworkspace": "iottwinmaker:UpdateWorkspace",
    "iotwireless.associateawsaccountwithpartneraccount": "iotwireless:AssociateAwsAccountWithPartnerAccount",
    "iotwireless.associatemulticastgroupwithfuotatask": "iotwireless:AssociateMulticastGroupWithFuotaTask",
    "iotwireless.associatewirelessdevicewithfuotatask": "iotwireless:AssociateWirelessDeviceWithFuotaTask",
    "iotwireless.associatewirelessdevicewithmulticastgroup": "iotwireless:AssociateWirelessDeviceWithMulticastGroup",
    "iotwireless.associatewirelessdevicewiththing": "iotwireless:AssociateWirelessDeviceWithThing",
    "iotwireless.associatewirelessgatewaywithcertificate": "iotwireless:AssociateWirelessGatewayWithCertificate",
    "iotwireless.associatewirelessgatewaywiththing": "iotwireless:AssociateWirelessGatewayWithThing",
    "iotwireless.cancelmulticastgroupsession": "iotwireless:CancelMulticastGroupSession",
    "iotwireless.createdestination": "iotwireless:CreateDestination",
    "iotwireless.createdeviceprofile": "iotwireless:CreateDeviceProfile",
    "iotwireless.createfuotatask": "iotwireless:CreateFuotaTask",
    "iotwireless.createmulticastgroup": "iotwireless:CreateMulticastGroup",
    "iotwireless.createnetworkanalyzerconfiguration": "iotwireless:CreateNetworkAnalyzerConfiguration",
    "iotwireless.createserviceprofile": "iotwireless:CreateServiceProfile",
    "iotwireless.createwirelessdevice": "iotwireless:CreateWirelessDevice",
    "iotwireless.createwirelessgateway": "iotwireless:CreateWirelessGateway",
    "iotwireless.createwirelessgatewaytask": "iotwireless:CreateWirelessGatewayTask",
    "iotwireless.createwirelessgatewaytaskdefinition": "iotwireless:CreateWirelessGatewayTaskDefinition",
    "iotwireless.deletedestination": "iotwireless:DeleteDestination",
    "iotwireless.deletedeviceprofile": "iotwireless:DeleteDeviceProfile",
    "iotwireless.deletefuotatask": "iotwireless:DeleteFuotaTask",
    "iotwireless.deletemulticastgroup": "iotwireless:DeleteMulticastGroup",
    "iotwireless.deletenetworkanalyzerconfiguration": "iotwireless:DeleteNetworkAnalyzerConfiguration",
    "iotwireless.deletequeuedmessages": "iotwireless:DeleteQueuedMessages",
    "iotwireless.deleteserviceprofile": "iotwireless:DeleteServiceProfile",
    "iotwireless.deletewirelessdevice": "iotwireless:DeleteWirelessDevice",
    "iotwireless.deletewirelessgateway": "iotwireless:DeleteWirelessGateway",
    "iotwireless.deletewirelessgatewaytask": "iotwireless:DeleteWirelessGatewayTask",
    "iotwireless.deletewirelessgatewaytaskdefinition": "iotwireless:DeleteWirelessGatewayTaskDefinition",
    "iotwireless.disassociateawsaccountfrompartneraccount": "iotwireless:DisassociateAwsAccountFromPartnerAccount",
    "iotwireless.disassociatemulticastgroupfromfuotatask": "iotwireless:DisassociateMulticastGroupFromFuotaTask",
    "iotwireless.disassociatewirelessdevicefromfuotatask": "iotwireless:DisassociateWirelessDeviceFromFuotaTask",
    "iotwireless.disassociatewirelessdevicefrommulticastgroup": "iotwireless:DisassociateWirelessDeviceFromMulticastGroup",
    "iotwireless.disassociatewirelessdevicefromthing": "iotwireless:DisassociateWirelessDeviceFromThing",
    "iotwireless.disassociatewirelessgatewayfromcertificate": "iotwireless:DisassociateWirelessGatewayFromCertificate",
    "iotwireless.disassociatewirelessgatewayfromthing": "iotwireless:DisassociateWirelessGatewayFromThing",
    "iotwireless.getdestination": "iotwireless:GetDestination",
    "iotwireless.getdeviceprofile": "iotwireless:GetDeviceProfile",
    "iotwireless.geteventconfigurationbyresourcetypes": "iotwireless:GetEventConfigurationByResourceTypes",
    "iotwireless.getfuotatask": "iotwireless:GetFuotaTask",
    "iotwireless.getloglevelsbyresourcetypes": "iotwireless:GetLogLevelsByResourceTypes",
    "iotwireless.getmulticastgroup": "iotwireless:GetMulticastGroup",
    "iotwireless.getmulticastgroupsession": "iotwireless:GetMulticastGroupSession",
    "iotwireless.getnetworkanalyzerconfiguration": "iotwireless:GetNetworkAnalyzerConfiguration",
    "iotwireless.getpartneraccount": "iotwireless:GetPartnerAccount",
    "iotwireless.getresourceeventconfiguration": "iotwireless:GetResourceEventConfiguration",
    "iotwireless.getresourceloglevel": "iotwireless:GetResourceLogLevel",
    "iotwireless.getserviceendpoint": "iotwireless:GetServiceEndpoint",
    "iotwireless.getserviceprofile": "iotwireless:GetServiceProfile",
    "iotwireless.getwirelessdevice": "iotwireless:GetWirelessDevice",
    "iotwireless.getwirelessdevicestatistics": "iotwireless:GetWirelessDeviceStatistics",
    "iotwireless.getwirelessgateway": "iotwireless:GetWirelessGateway",
    "iotwireless.getwirelessgatewaycertificate": "iotwireless:GetWirelessGatewayCertificate",
    "iotwireless.getwirelessgatewayfirmwareinformation": "iotwireless:GetWirelessGatewayFirmwareInformation",
    "iotwireless.getwirelessgatewaystatistics": "iotwireless:GetWirelessGatewayStatistics",
    "iotwireless.getwirelessgatewaytask": "iotwireless:GetWirelessGatewayTask",
    "iotwireless.getwirelessgatewaytaskdefinition": "iotwireless:GetWirelessGatewayTaskDefinition",
    "iotwireless.listdestinations": "iotwireless:ListDestinations",
    "iotwireless.listdeviceprofiles": "iotwireless:ListDeviceProfiles",
    "iotwireless.listeventconfigurations": "iotwireless:ListEventConfigurations",
    "iotwireless.listfuotatasks": "iotwireless:ListFuotaTasks",
    "iotwireless.listmulticastgroups": "iotwireless:ListMulticastGroups",
    "iotwireless.listmulticastgroupsbyfuotatask": "iotwireless:ListMulticastGroupsByFuotaTask",
    "iotwireless.listnetworkanalyzerconfigurations": "iotwireless:ListNetworkAnalyzerConfigurations",
    "iotwireless.listpartneraccounts": "iotwireless:ListPartnerAccounts",
    "iotwireless.listqueuedmessages": "iotwireless:ListQueuedMessages",
    "iotwireless.listserviceprofiles": "iotwireless:ListServiceProfiles",
    "iotwireless.listtagsforresource": "iotwireless:ListTagsForResource",
    "iotwireless.listwirelessdevices": "iotwireless:ListWirelessDevices",
    "iotwireless.listwirelessgateways": "iotwireless:ListWirelessGateways",
    "iotwireless.listwirelessgatewaytaskdefinitions": "iotwireless:ListWirelessGatewayTaskDefinitions",
    "iotwireless.putresourceloglevel": "iotwireless:PutResourceLogLevel",
    "iotwireless.resetallresourceloglevels": "iotwireless:ResetAllResourceLogLevels",
    "iotwireless.resetresourceloglevel": "iotwireless:ResetResourceLogLevel",
    "iotwireless.senddatatomulticastgroup": "iotwireless:SendDataToMulticastGroup",
    "iotwireless.senddatatowirelessdevice": "iotwireless:SendDataToWirelessDevice",
    "iotwireless.startbulkassociatewirelessdevicewithmulticastgroup": "iotwireless:StartBulkAssociateWirelessDeviceWithMulticastGroup",
    "iotwireless.startbulkdisassociatewirelessdevicefrommulticastgroup": "iotwireless:StartBulkDisassociateWirelessDeviceFromMulticastGroup",
    "iotwireless.startfuotatask": "iotwireless:StartFuotaTask",
    "iotwireless.startmulticastgroupsession": "iotwireless:StartMulticastGroupSession",
    "iotwireless.tagresource": "iotwireless:TagResource",
    "iotwireless.testwirelessdevice": "iotwireless:TestWirelessDevice",
    "iotwireless.untagresource": "iotwireless:UntagResource",
    "iotwireless.updatedestination": "iotwireless:UpdateDestination",
    "iotwireless.updateeventconfigurationbyresourcetypes": "iotwireless:UpdateEventConfigurationByResourceTypes",
    "iotwireless.updatefuotatask": "iotwireless:UpdateFuotaTask",
    "iotwireless.updateloglevelsbyresourcetypes": "iotwireless:UpdateLogLevelsByResourceTypes",
    "iotwireless.updatemulticastgroup": "iotwireless:UpdateMulticastGroup",
    "iotwireless.updatenetworkanalyzerconfiguration": "iotwireless:UpdateNetworkAnalyzerConfiguration",
    "iotwireless.updatepartneraccount": "iotwireless:UpdatePartnerAccount",
    "iotwireless.updateresourceeventconfiguration": "iotwireless:UpdateResourceEventConfiguration",
    "iotwireless.updatewirelessdevice": "iotwireless:UpdateWirelessDevice",
    "iotwireless.updatewirelessgateway": "iotwireless:UpdateWirelessGateway",
    "ivs.batchgetchannel": "ivs:BatchGetChannel",
    "ivs.batchgetstreamkey": "ivs:BatchGetStreamKey",
    "ivs.createchannel": "ivs:CreateChannel",
    "ivs.createrecordingconfiguration": "ivs:CreateRecordingConfiguration",
    "ivs.createstreamkey": "ivs:CreateStreamKey",
    "ivs.deletechannel": "ivs:DeleteChannel",
    "ivs.deleteplaybackkeypair": "ivs:DeletePlaybackKeyPair",
    "ivs.deleterecordingconfiguration": "ivs:DeleteRecordingConfiguration",
    "ivs.deletestreamkey": "ivs:DeleteStreamKey",
    "ivs.getchannel": "ivs:GetChannel",
    "ivs.getplaybackkeypair": "ivs:GetPlaybackKeyPair",
    "ivs.getrecordingconfiguration": "ivs:GetRecordingConfiguration",
    "ivs.getstream": "ivs:GetStream",
    "ivs.getstreamkey": "ivs:GetStreamKey",
    "ivs.getstreamsession": "ivs:GetStreamSession",
    "ivs.importplaybackkeypair": "ivs:ImportPlaybackKeyPair",
    "ivs.listchannels": "ivs:ListChannels",
    "ivs.listplaybackkeypairs": "ivs:ListPlaybackKeyPairs",
    "ivs.listrecordingconfigurations": "ivs:ListRecordingConfigurations",
    "ivs.liststreamkeys": "ivs:ListStreamKeys",
    "ivs.liststreams": "ivs:ListStreams",
    "ivs.liststreamsessions": "ivs:ListStreamSessions",
    "ivs.listtagsforresource": "ivs:ListTagsForResource",
    "ivs.putmetadata": "ivs:PutMetadata",
    "ivs.stopstream": "ivs:StopStream",
    "ivs.tagresource": "ivs:TagResource",
    "ivs.untagresource": "ivs:UntagResource",
    "ivs.updatechannel": "ivs:UpdateChannel",
    "ivschat.createchattoken": "ivschat:CreateChatToken",
    "ivschat.createroom": "ivschat:CreateRoom",
    "ivschat.deletemessage": "ivschat:DeleteMessage",
    "ivschat.deleteroom": "ivschat:DeleteRoom",
    "ivschat.disconnectuser": "ivschat:DisconnectUser",
    "ivschat.getroom": "ivschat:GetRoom",
    "ivschat.listrooms": "ivschat:ListRooms",
    "ivschat.listtagsforresource": "ivschat:ListTagsForResource",
    "ivschat.sendevent": "ivschat:SendEvent",
    "ivschat.tagresource": "ivschat:TagResource",
    "ivschat.untagresource": "ivschat:UntagResource",
    "ivschat.updateroom": "ivschat:UpdateRoom",
    "kafka.batchassociatescramsecret": "kafka:BatchAssociateScramSecret",
    "kafka.batchdisassociatescramsecret": "kafka:BatchDisassociateScramSecret",
    "kafka.createcluster": "kafka:CreateCluster",
    "kafka.createclusterv2": "kafka:CreateClusterV2",
    "kafka.createconfiguration": "kafka:CreateConfiguration",
    "kafka.deletecluster": "kafka:DeleteCluster",
    "kafka.deleteconfiguration": "kafka:DeleteConfiguration",
    "kafka.describecluster": "kafka:DescribeCluster",
    "kafka.describeclusteroperation": "kafka:DescribeClusterOperation",
    "kafka.describeclusterv2": "kafka:DescribeClusterV2",
    "kafka.describeconfiguration": "kafka:DescribeConfiguration",
    "kafka.describeconfigurationrevision": "kafka:DescribeConfigurationRevision",
    "kafka.getbootstrapbrokers": "kafka:GetBootstrapBrokers",
    "kafka.getcompatiblekafkaversions": "kafka:GetCompatibleKafkaVersions",
    "kafka.listclusteroperations": "kafka:ListClusterOperations",
    "kafka.listclusters": "kafka:ListClusters",
    "kafka.listclustersv2": "kafka:ListClustersV2",
    "kafka.listconfigurationrevisions": "kafka:ListConfigurationRevisions",
    "kafka.listconfigurations": "kafka:ListConfigurations",
    "kafka.listkafkaversions": "kafka:ListKafkaVersions",
    "kafka.listnodes": "kafka:ListNodes",
    "kafka.listscramsecrets": "kafka:ListScramSecrets",
    "kafka.listtagsforresource": "kafka:ListTagsForResource",
    "kafka.rebootbroker": "kafka:RebootBroker",
    "kafka.tagresource": "kafka:TagResource",
    "kafka.untagresource": "kafka:UntagResource",
    "kafka.updatebrokercount": "kafka:UpdateBrokerCount",
    "kafka.updatebrokerstorage": "kafka:UpdateBrokerStorage",
    "kafka.updatebrokertype": "kafka:UpdateBrokerType",
    "kafka.updateclusterconfiguration": "kafka:UpdateClusterConfiguration",
    "kafka.updateclusterkafkaversion": "kafka:UpdateClusterKafkaVersion",
    "kafka.updateconfiguration": "kafka:UpdateConfiguration",
    "kafka.updateconnectivity": "kafka:UpdateConnectivity",
    "kafka.updatemonitoring": "kafka:UpdateMonitoring",
    "kafka.updatesecurity": "kafka:UpdateSecurity",
    "kafkaconnect.createconnector": "kafkaconnect:CreateConnector",
    "kafkaconnect.createcustomplugin": "kafkaconnect:CreateCustomPlugin",
    "kafkaconnect.createworkerconfiguration": "kafkaconnect:CreateWorkerConfiguration",
    "kafkaconnect.deleteconnector": "kafkaconnect:DeleteConnector",
    "kafkaconnect.deletecustomplugin": "kafkaconnect:DeleteCustomPlugin",
    "kafkaconnect.describeconnector": "kafkaconnect:DescribeConnector",
    "kafkaconnect.describecustomplugin": "kafkaconnect:DescribeCustomPlugin",
    "kafkaconnect.describeworkerconfiguration": "kafkaconnect:DescribeWorkerConfiguration",
    "kafkaconnect.listconnectors": "kafkaconnect:ListConnectors",
    "kafkaconnect.listcustomplugins": "kafkaconnect:ListCustomPlugins",
    "kafkaconnect.listworkerconfigurations": "kafkaconnect:ListWorkerConfigurations",
    "kafkaconnect.updateconnector": "kafkaconnect:UpdateConnector",
    "kendra.associateentitiestoexperience": "kendra:AssociateEntitiesToExperience",
    "kendra.associatepersonastoentities": "kendra:AssociatePersonasToEntities",
    "kendra.batchdeletedocument": "kendra:BatchDeleteDocument",
    "kendra.batchgetdocumentstatus": "kendra:BatchGetDocumentStatus",
    "kendra.batchputdocument": "kendra:BatchPutDocument",
    "kendra.clearquerysuggestions": "kendra:ClearQuerySuggestions",
    "kendra.createdatasource": "kendra:CreateDataSource",
    "kendra.createexperience": "kendra:CreateExperience",
    "kendra.createfaq": "kendra:CreateFaq",
    "kendra.createindex": "kendra:CreateIndex",
    "kendra.createquerysuggestionsblocklist": "kendra:CreateQuerySuggestionsBlockList",
    "kendra.createthesaurus": "kendra:CreateThesaurus",
    "kendra.deletedatasource": "kendra:DeleteDataSource",
    "kendra.deleteexperience": "kendra:DeleteExperience",
    "kendra.deletefaq": "kendra:DeleteFaq",
    "kendra.deleteindex": "kendra:DeleteIndex",
    "kendra.deleteprincipalmapping": "kendra:DeletePrincipalMapping",
    "kendra.deletequerysuggestionsblocklist": "kendra:DeleteQuerySuggestionsBlockList",
    "kendra.deletethesaurus": "kendra:DeleteThesaurus",
    "kendra.describedatasource": "kendra:DescribeDataSource",
    "kendra.describeexperience": "kendra:DescribeExperience",
    "kendra.describefaq": "kendra:DescribeFaq",
    "kendra.describeindex": "kendra:DescribeIndex",
    "kendra.describeprincipalmapping": "kendra:DescribePrincipalMapping",
    "kendra.describequerysuggestionsblocklist": "kendra:DescribeQuerySuggestionsBlockList",
    "kendra.describequerysuggestionsconfig": "kendra:DescribeQuerySuggestionsConfig",
    "kendra.describethesaurus": "kendra:DescribeThesaurus",
    "kendra.disassociateentitiesfromexperience": "kendra:DisassociateEntitiesFromExperience",
    "kendra.disassociatepersonasfromentities": "kendra:DisassociatePersonasFromEntities",
    "kendra.getquerysuggestions": "kendra:GetQuerySuggestions",
    "kendra.getsnapshots": "kendra:GetSnapshots",
    "kendra.listdatasources": "kendra:ListDataSources",
    "kendra.listdatasourcesyncjobs": "kendra:ListDataSourceSyncJobs",
    "kendra.listentitypersonas": "kendra:ListEntityPersonas",
    "kendra.listexperienceentities": "kendra:ListExperienceEntities",
    "kendra.listexperiences": "kendra:ListExperiences",
    "kendra.listfaqs": "kendra:ListFaqs",
    "kendra.listgroupsolderthanorderingid": "kendra:ListGroupsOlderThanOrderingId",
    "kendra.listindices": "kendra:ListIndices",
    "kendra.listquerysuggestionsblocklists": "kendra:ListQuerySuggestionsBlockLists",
    "kendra.listtagsforresource": "kendra:ListTagsForResource",
    "kendra.listthesauri": "kendra:ListThesauri",
    "kendra.putprincipalmapping": "kendra:PutPrincipalMapping",
    "kendra.query": "kendra:Query",
    "kendra.startdatasourcesyncjob": "kendra:Query",
    "kendra.stopdatasourcesyncjob": "kendra:StopDataSourceSyncJob",
    "kendra.submitfeedback": "kendra:SubmitFeedback",
    "kendra.tagresource": "kendra:TagResource",
    "kendra.untagresource": "kendra:UntagResource",
    "kendra.updatedatasource": "kendra:UpdateDataSource",
    "kendra.updateexperience": "kendra:UpdateExperience",
    "kendra.updateindex": "kendra:UpdateIndex",
    "kendra.updatequerysuggestionsblocklist": "kendra:UpdateQuerySuggestionsBlockList",
    "kendra.updatequerysuggestionsconfig": "kendra:UpdateQuerySuggestionsConfig",
    "kendra.updatethesaurus": "kendra:UpdateThesaurus",
    "kinesis.addtagstostream": "kinesis:AddTagsToStream",
    "kinesis.createstream": "kinesis:CreateStream",
    "kinesis.decreasestreamretentionperiod": "kinesis:DecreaseStreamRetentionPeriod",
    "kinesis.deletestream": "kinesis:DeleteStream",
    "kinesis.deregisterstreamconsumer": "kinesis:DeregisterStreamConsumer",
    "kinesis.describelimits": "kinesis:DescribeLimits",
    "kinesis.describestream": "kinesis:DescribeStream",
    "kinesis.describestreamconsumer": "kinesis:DescribeStreamConsumer",
    "kinesis.describestreamsummary": "kinesis:DescribeStreamSummary",
    "kinesis.disableenhancedmonitoring": "kinesis:DisableEnhancedMonitoring",
    "kinesis.enableenhancedmonitoring": "kinesis:EnableEnhancedMonitoring",
    "kinesis.getrecords": "kinesis:GetRecords",
    "kinesis.getsharditerator": "kinesis:GetShardIterator",
    "kinesis.increasestreamretentionperiod": "kinesis:IncreaseStreamRetentionPeriod",
    "kinesis.listshards": "kinesis:ListShards",
    "kinesis.liststreamconsumers": "kinesis:ListStreamConsumers",
    "kinesis.liststreams": "kinesis:ListStreams",
    "kinesis.listtagsforstream": "kinesis:ListTagsForStream",
    "kinesis.mergeshards": "kinesis:MergeShards",
    "kinesis.putrecord": "kinesis:PutRecord",
    "kinesis.putrecords": "kinesis:PutRecords",
    "kinesis.registerstreamconsumer": "kinesis:RegisterStreamConsumer",
    "kinesis.removetagsfromstream": "kinesis:RemoveTagsFromStream",
    "kinesis.splitshard": "kinesis:SplitShard",
    "kinesis.startstreamencryption": "kinesis:StartStreamEncryption",
    "kinesis.stopstreamencryption": "kinesis:StopStreamEncryption",
    "kinesis.updateshardcount": "kinesis:UpdateShardCount",
    "kinesis.updatestreammode": "kinesis:UpdateStreamMode",
    "kinesisanalytics.addapplicationcloudwatchloggingoption": "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
    "kinesisanalytics.addapplicationinput": "kinesisanalytics:AddApplicationInput",
    "kinesisanalytics.addapplicationinputprocessingconfiguration": "kinesisanalytics:AddApplicationInputProcessingConfiguration",
    "kinesisanalytics.addapplicationoutput": "kinesisanalytics:AddApplicationOutput",
    "kinesisanalytics.addapplicationreferencedatasource": "kinesisanalytics:AddApplicationReferenceDataSource",
    "kinesisanalytics.createapplication": "kinesisanalytics:CreateApplication",
    "kinesisanalytics.deleteapplication": "kinesisanalytics:DeleteApplication",
    "kinesisanalytics.deleteapplicationcloudwatchloggingoption": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
    "kinesisanalytics.deleteapplicationinputprocessingconfiguration": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
    "kinesisanalytics.deleteapplicationoutput": "kinesisanalytics:DeleteApplicationOutput",
    "kinesisanalytics.deleteapplicationreferencedatasource": "kinesisanalytics:DeleteApplicationReferenceDataSource",
    "kinesisanalytics.describeapplication": "kinesisanalytics:DescribeApplication",
    "kinesisanalytics.discoverinputschema": "kinesisanalytics:DiscoverInputSchema",
    "kinesisanalytics.listapplications": "kinesisanalytics:ListApplications",
    "kinesisanalytics.listtagsforresource": "kinesisanalytics:ListTagsForResource",
    "kinesisanalytics.startapplication": "kinesisanalytics:StartApplication",
    "kinesisanalytics.stopapplication": "kinesisanalytics:StopApplication",
    "kinesisanalytics.tagresource": "kinesisanalytics:TagResource",
    "kinesisanalytics.untagresource": "kinesisanalytics:UntagResource",
    "kinesisanalytics.updateapplication": "kinesisanalytics:UpdateApplication",
    "kinesisanalyticsv2.addapplicationcloudwatchloggingoption": "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
    "kinesisanalyticsv2.addapplicationinput": "kinesisanalytics:AddApplicationInput",
    "kinesisanalyticsv2.addapplicationinputprocessingconfiguration": "kinesisanalytics:AddApplicationInputProcessingConfiguration",
    "kinesisanalyticsv2.addapplicationoutput": "kinesisanalytics:AddApplicationOutput",
    "kinesisanalyticsv2.addapplicationreferencedatasource": "kinesisanalytics:AddApplicationReferenceDataSource",
    "kinesisanalyticsv2.addapplicationvpcconfiguration": "kinesisanalytics:AddApplicationVpcConfiguration",
    "kinesisanalyticsv2.createapplication": "kinesisanalytics:CreateApplication",
    "kinesisanalyticsv2.createapplicationpresignedurl": "kinesisanalytics:CreateApplicationPresignedUrl",
    "kinesisanalyticsv2.createapplicationsnapshot": "kinesisanalytics:CreateApplicationSnapshot",
    "kinesisanalyticsv2.deleteapplication": "kinesisanalytics:DeleteApplication",
    "kinesisanalyticsv2.deleteapplicationcloudwatchloggingoption": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
    "kinesisanalyticsv2.deleteapplicationinputprocessingconfiguration": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
    "kinesisanalyticsv2.deleteapplicationoutput": "kinesisanalytics:DeleteApplicationOutput",
    "kinesisanalyticsv2.deleteapplicationreferencedatasource": "kinesisanalytics:DeleteApplicationReferenceDataSource",
    "kinesisanalyticsv2.deleteapplicationsnapshot": "kinesisanalytics:DeleteApplicationSnapshot",
    "kinesisanalyticsv2.deleteapplicationvpcconfiguration": "kinesisanalytics:DeleteApplicationVpcConfiguration",
    "kinesisanalyticsv2.describeapplication": "kinesisanalytics:DescribeApplication",
    "kinesisanalyticsv2.describeapplicationsnapshot": "kinesisanalytics:DescribeApplicationSnapshot",
    "kinesisanalyticsv2.describeapplicationversion": "kinesisanalytics:DescribeApplicationVersion",
    "kinesisanalyticsv2.discoverinputschema": "kinesisanalytics:DiscoverInputSchema",
    "kinesisanalyticsv2.listapplications": "kinesisanalytics:ListApplications",
    "kinesisanalyticsv2.listapplicationsnapshots": "kinesisanalytics:ListApplicationSnapshots",
    "kinesisanalyticsv2.listapplicationversions": "kinesisanalytics:ListApplicationVersions",
    "kinesisanalyticsv2.listtagsforresource": "kinesisanalytics:ListTagsForResource",
    "kinesisanalyticsv2.rollbackapplication": "kinesisanalytics:RollbackApplication",
    "kinesisanalyticsv2.startapplication": "kinesisanalytics:StartApplication",
    "kinesisanalyticsv2.stopapplication": "kinesisanalytics:StopApplication",
    "kinesisanalyticsv2.tagresource": "kinesisanalytics:TagResource",
    "kinesisanalyticsv2.untagresource": "kinesisanalytics:UntagResource",
    "kinesisanalyticsv2.updateapplication": "kinesisanalytics:UpdateApplication",
    "kinesisanalyticsv2.updateapplicationmaintenanceconfiguration": "kinesisanalytics:UpdateApplicationMaintenanceConfiguration",
    "kinesisvideo.createsignalingchannel": "kinesisvideo:CreateSignalingChannel",
    "kinesisvideo.createstream": "kinesisvideo:CreateStream",
    "kinesisvideo.deletesignalingchannel": "kinesisvideo:DeleteSignalingChannel",
    "kinesisvideo.deletestream": "kinesisvideo:DeleteStream",
    "kinesisvideo.describesignalingchannel": "kinesisvideo:DescribeSignalingChannel",
    "kinesisvideo.describestream": "kinesisvideo:DescribeStream",
    "kinesisvideo.getdataendpoint": "kinesisvideo:GetDataEndpoint",
    "kinesisvideo.getsignalingchannelendpoint": "kinesisvideo:GetSignalingChannelEndpoint",
    "kinesisvideo.listsignalingchannels": "kinesisvideo:ListSignalingChannels",
    "kinesisvideo.liststreams": "kinesisvideo:ListStreams",
    "kinesisvideo.listtagsforresource": "kinesisvideo:ListTagsForResource",
    "kinesisvideo.listtagsforstream": "kinesisvideo:ListTagsForStream",
    "kinesisvideo.tagresource": "kinesisvideo:TagResource",
    "kinesisvideo.tagstream": "kinesisvideo:TagStream",
    "kinesisvideo.untagresource": "kinesisvideo:UntagResource",
    "kinesisvideo.untagstream": "kinesisvideo:UntagStream",
    "kinesisvideo.updatedataretention": "kinesisvideo:UpdateDataRetention",
    "kinesisvideo.updatesignalingchannel": "kinesisvideo:UpdateSignalingChannel",
    "kinesisvideo.updatestream": "kinesisvideo:UpdateStream",
    "kinesisvideoarchivedmedia.getclip": "kinesisvideo:GetClip",
    "kinesisvideoarchivedmedia.getdashstreamingsessionurl": "kinesisvideo:GetDASHStreamingSessionURL",
    "kinesisvideoarchivedmedia.gethlsstreamingsessionurl": "kinesisvideo:GetHLSStreamingSessionURL",
    "kinesisvideoarchivedmedia.getmediaforfragmentlist": "kinesisvideo:GetMediaForFragmentList",
    "kinesisvideoarchivedmedia.listfragments": "kinesisvideo:ListFragments",
    "kinesisvideomedia.getmedia": "kinesisvideo:GetMedia",
    "kinesisvideosignalingchannels.geticeserverconfig": "kinesisvideo:GetIceServerConfig",
    "kinesisvideosignalingchannels.sendalexaoffertomaster": "kinesisvideo:SendAlexaOfferToMaster",
    "kms.cancelkeydeletion": "kms:CancelKeyDeletion",
    "kms.connectcustomkeystore": "kms:ConnectCustomKeyStore",
    "kms.createalias": "kms:CreateAlias",
    "kms.createcustomkeystore": "kms:CreateCustomKeyStore",
    "kms.creategrant": "kms:CreateGrant",
    "kms.createkey": "kms:CreateKey",
    "kms.decrypt": "kms:Decrypt",
    "kms.deletealias": "kms:DeleteAlias",
    "kms.deletecustomkeystore": "kms:DeleteCustomKeyStore",
    "kms.deleteimportedkeymaterial": "kms:DeleteImportedKeyMaterial",
    "kms.describecustomkeystores": "kms:DescribeCustomKeyStores",
    "kms.describekey": "kms:DescribeKey",
    "kms.disablekey": "kms:DisableKey",
    "kms.disablekeyrotation": "kms:DisableKeyRotation",
    "kms.disconnectcustomkeystore": "kms:DisconnectCustomKeyStore",
    "kms.enablekey": "kms:EnableKey",
    "kms.enablekeyrotation": "kms:EnableKeyRotation",
    "kms.encrypt": "kms:Encrypt",
    "kms.generatedatakey": "kms:GenerateDataKey",
    "kms.generatedatakeypair": "kms:GenerateDataKeyPair",
    "kms.generatedatakeypairwithoutplaintext": "kms:GenerateDataKeyPairWithoutPlaintext",
    "kms.generatedatakeywithoutplaintext": "kms:GenerateDataKeyWithoutPlaintext",
    "kms.generatemac": "kms:GenerateMac",
    "kms.generaterandom": "kms:GenerateRandom",
    "kms.getkeypolicy": "kms:GetKeyPolicy",
    "kms.getkeyrotationstatus": "kms:GetKeyRotationStatus",
    "kms.getparametersforimport": "kms:GetParametersForImport",
    "kms.getpublickey": "kms:GetPublicKey",
    "kms.importkeymaterial": "kms:ImportKeyMaterial",
    "kms.listaliases": "kms:ListAliases",
    "kms.listgrants": "kms:ListGrants",
    "kms.listkeypolicies": "kms:ListKeyPolicies",
    "kms.listkeys": "kms:ListKeys",
    "kms.listresourcetags": "kms:ListResourceTags",
    "kms.listretirablegrants": "kms:ListRetirableGrants",
    "kms.putkeypolicy": "kms:PutKeyPolicy",
    "kms.reencrypt": "kms:ReEncryptFrom",
    "kms.replicatekey": "kms:ReplicateKey",
    "kms.retiregrant": "kms:RetireGrant",
    "kms.revokegrant": "kms:RevokeGrant",
    "kms.schedulekeydeletion": "kms:ScheduleKeyDeletion",
    "kms.sign": "kms:Sign",
    "kms.tagresource": "kms:TagResource",
    "kms.untagresource": "kms:UntagResource",
    "kms.updatealias": "kms:UpdateAlias",
    "kms.updatecustomkeystore": "kms:UpdateCustomKeyStore",
    "kms.updatekeydescription": "kms:UpdateKeyDescription",
    "kms.updateprimaryregion": "kms:UpdatePrimaryRegion",
    "kms.verify": "kms:Verify",
    "kms.verifymac": "kms:VerifyMac",
    "lakeformation.addlftagstoresource": "lakeformation:AddLFTagsToResource",
    "lakeformation.batchgrantpermissions": "lakeformation:BatchGrantPermissions",
    "lakeformation.batchrevokepermissions": "lakeformation:BatchRevokePermissions",
    "lakeformation.canceltransaction": "lakeformation:CancelTransaction",
    "lakeformation.committransaction": "lakeformation:CommitTransaction",
    "lakeformation.createdatacellsfilter": "lakeformation:CreateDataCellsFilter",
    "lakeformation.createlftag": "lakeformation:CreateLFTag",
    "lakeformation.deletedatacellsfilter": "lakeformation:DeleteDataCellsFilter",
    "lakeformation.deletelftag": "lakeformation:DeleteLFTag",
    "lakeformation.deleteobjectsoncancel": "lakeformation:DeleteObjectsOnCancel",
    "lakeformation.deregisterresource": "lakeformation:DeregisterResource",
    "lakeformation.describeresource": "lakeformation:DescribeResource",
    "lakeformation.describetransaction": "lakeformation:DescribeTransaction",
    "lakeformation.extendtransaction": "lakeformation:ExtendTransaction",
    "lakeformation.getdatalakesettings": "lakeformation:GetDataLakeSettings",
    "lakeformation.geteffectivepermissionsforpath": "lakeformation:GetEffectivePermissionsForPath",
    "lakeformation.getlftag": "lakeformation:GetLFTag",
    "lakeformation.getquerystate": "lakeformation:GetQueryState",
    "lakeformation.getquerystatistics": "lakeformation:GetQueryStatistics",
    "lakeformation.getresourcelftags": "lakeformation:GetResourceLFTags",
    "lakeformation.gettableobjects": "lakeformation:GetTableObjects",
    "lakeformation.getworkunitresults": "lakeformation:GetWorkUnitResults",
    "lakeformation.getworkunits": "lakeformation:GetWorkUnits",
    "lakeformation.grantpermissions": "lakeformation:GrantPermissions",
    "lakeformation.listdatacellsfilter": "lakeformation:ListDataCellsFilter",
    "lakeformation.listlftags": "lakeformation:ListLFTags",
    "lakeformation.listpermissions": "lakeformation:ListPermissions",
    "lakeformation.listresources": "lakeformation:ListResources",
    "lakeformation.listtablestorageoptimizers": "lakeformation:ListTableStorageOptimizers",
    "lakeformation.listtransactions": "lakeformation:ListTransactions",
    "lakeformation.putdatalakesettings": "lakeformation:PutDataLakeSettings",
    "lakeformation.registerresource": "lakeformation:RegisterResource",
    "lakeformation.removelftagsfromresource": "lakeformation:RemoveLFTagsFromResource",
    "lakeformation.revokepermissions": "lakeformation:RevokePermissions",
    "lakeformation.searchdatabasesbylftags": "lakeformation:SearchDatabasesByLFTags",
    "lakeformation.searchtablesbylftags": "lakeformation:SearchTablesByLFTags",
    "lakeformation.startqueryplanning": "lakeformation:StartQueryPlanning",
    "lakeformation.starttransaction": "lakeformation:StartTransaction",
    "lakeformation.updatelftag": "lakeformation:UpdateLFTag",
    "lakeformation.updateresource": "lakeformation:UpdateResource",
    "lakeformation.updatetableobjects": "lakeformation:UpdateTableObjects",
    "lakeformation.updatetablestorageoptimizer": "lakeformation:UpdateTableStorageOptimizer",
    "lambda.addlayerversionpermission": "lambda:AddLayerVersionPermission",
    "lambda.addpermission": "lambda:AddPermission",
    "lambda.createalias": "lambda:CreateAlias",
    "lambda.createcodesigningconfig": "lambda:CreateCodeSigningConfig",
    "lambda.createeventsourcemapping": "lambda:CreateEventSourceMapping",
    "lambda.createfunction": "lambda:CreateFunction",
    "lambda.createfunctionurlconfig": "lambda:CreateFunctionUrlConfig",
    "lambda.deletealias": "lambda:DeleteAlias",
    "lambda.deletecodesigningconfig": "lambda:DeleteCodeSigningConfig",
    "lambda.deleteeventsourcemapping": "lambda:DeleteEventSourceMapping",
    "lambda.deletefunction": "lambda:DeleteFunction",
    "lambda.deletefunctioncodesigningconfig": "lambda:DeleteFunctionCodeSigningConfig",
    "lambda.deletefunctionconcurrency": "lambda:DeleteFunctionConcurrency",
    "lambda.deletefunctioneventinvokeconfig": "lambda:DeleteFunctionEventInvokeConfig",
    "lambda.deletefunctionurlconfig": "lambda:DeleteFunctionUrlConfig",
    "lambda.deletelayerversion": "lambda:DeleteLayerVersion",
    "lambda.deleteprovisionedconcurrencyconfig": "lambda:DeleteProvisionedConcurrencyConfig",
    "lambda.getaccountsettings": "lambda:GetAccountSettings",
    "lambda.getalias": "lambda:GetAlias",
    "lambda.getcodesigningconfig": "lambda:GetCodeSigningConfig",
    "lambda.geteventsourcemapping": "lambda:GetEventSourceMapping",
    "lambda.getfunction": "lambda:GetFunction",
    "lambda.getfunctioncodesigningconfig": "lambda:GetFunctionCodeSigningConfig",
    "lambda.getfunctionconcurrency": "lambda:GetFunctionConcurrency",
    "lambda.getfunctionconfiguration": "lambda:GetFunctionConfiguration",
    "lambda.getfunctioneventinvokeconfig": "lambda:GetFunctionEventInvokeConfig",
    "lambda.getfunctionurlconfig": "lambda:GetFunctionUrlConfig",
    "lambda.getlayerversion": "lambda:GetLayerVersion",
    "lambda.getlayerversionbyarn": "lambda:GetLayerVersion",
    "lambda.getlayerversionpolicy": "lambda:GetLayerVersionPolicy",
    "lambda.getpolicy": "lambda:GetPolicy",
    "lambda.getprovisionedconcurrencyconfig": "lambda:GetProvisionedConcurrencyConfig",
    "lambda.invoke": "lambda:InvokeFunction",
    "lambda.invokeasync": "lambda:InvokeAsync",
    "lambda.listaliases": "lambda:ListAliases",
    "lambda.listcodesigningconfigs": "lambda:ListCodeSigningConfigs",
    "lambda.listeventsourcemappings": "lambda:ListEventSourceMappings",
    "lambda.listfunctioneventinvokeconfigs": "lambda:ListFunctionEventInvokeConfigs",
    "lambda.listfunctions": "lambda:ListFunctions",
    "lambda.listfunctionsbycodesigningconfig": "lambda:ListFunctionsByCodeSigningConfig",
    "lambda.listfunctionurlconfigs": "lambda:ListFunctionUrlConfigs",
    "lambda.listlayers": "lambda:ListLayers",
    "lambda.listlayerversions": "lambda:ListLayerVersions",
    "lambda.listprovisionedconcurrencyconfigs": "lambda:ListProvisionedConcurrencyConfigs",
    "lambda.listtags": "lambda:ListTags",
    "lambda.listversionsbyfunction": "lambda:ListVersionsByFunction",
    "lambda.publishlayerversion": "lambda:PublishLayerVersion",
    "lambda.publishversion": "lambda:PublishVersion",
    "lambda.putfunctioncodesigningconfig": "lambda:PutFunctionCodeSigningConfig",
    "lambda.putfunctionconcurrency": "lambda:PutFunctionConcurrency",
    "lambda.putfunctioneventinvokeconfig": "lambda:PutFunctionEventInvokeConfig",
    "lambda.putprovisionedconcurrencyconfig": "lambda:PutProvisionedConcurrencyConfig",
    "lambda.removelayerversionpermission": "lambda:RemoveLayerVersionPermission",
    "lambda.removepermission": "lambda:RemovePermission",
    "lambda.tagresource": "lambda:TagResource",
    "lambda.untagresource": "lambda:UntagResource",
    "lambda.updatealias": "lambda:UpdateAlias",
    "lambda.updatecodesigningconfig": "lambda:UpdateCodeSigningConfig",
    "lambda.updateeventsourcemapping": "lambda:UpdateEventSourceMapping",
    "lambda.updatefunctioncode": "lambda:UpdateFunctionCode",
    "lambda.updatefunctionconfiguration": "lambda:UpdateFunctionConfiguration",
    "lambda.updatefunctioneventinvokeconfig": "lambda:UpdateFunctionEventInvokeConfig",
    "lambda.updatefunctionurlconfig": "lambda:UpdateFunctionUrlConfig",
    "lexmodelbuildingservice.createbotversion": "lex:CreateBotVersion",
    "lexmodelbuildingservice.createintentversion": "lex:CreateIntentVersion",
    "lexmodelbuildingservice.createslottypeversion": "lex:CreateSlotTypeVersion",
    "lexmodelbuildingservice.deletebot": "lex:DeleteBot",
    "lexmodelbuildingservice.deletebotalias": "lex:DeleteBotAlias",
    "lexmodelbuildingservice.deletebotchannelassociation": "lex:DeleteBotChannelAssociation",
    "lexmodelbuildingservice.deletebotversion": "lex:DeleteBotVersion",
    "lexmodelbuildingservice.deleteintent": "lex:DeleteIntent",
    "lexmodelbuildingservice.deleteintentversion": "lex:DeleteIntentVersion",
    "lexmodelbuildingservice.deleteslottype": "lex:DeleteSlotType",
    "lexmodelbuildingservice.deleteslottypeversion": "lex:DeleteSlotTypeVersion",
    "lexmodelbuildingservice.deleteutterances": "lex:DeleteUtterances",
    "lexmodelbuildingservice.getbot": "lex:GetBot",
    "lexmodelbuildingservice.getbotalias": "lex:GetBotAlias",
    "lexmodelbuildingservice.getbotaliases": "lex:GetBotAliases",
    "lexmodelbuildingservice.getbotchannelassociation": "lex:GetBotChannelAssociation",
    "lexmodelbuildingservice.getbotchannelassociations": "lex:GetBotChannelAssociations",
    "lexmodelbuildingservice.getbots": "lex:GetBots",
    "lexmodelbuildingservice.getbotversions": "lex:GetBotVersions",
    "lexmodelbuildingservice.getbuiltinintent": "lex:GetBuiltinIntent",
    "lexmodelbuildingservice.getbuiltinintents": "lex:GetBuiltinIntents",
    "lexmodelbuildingservice.getbuiltinslottypes": "lex:GetBuiltinSlotTypes",
    "lexmodelbuildingservice.getexport": "lex:GetExport",
    "lexmodelbuildingservice.getimport": "lex:GetImport",
    "lexmodelbuildingservice.getintent": "lex:GetIntent",
    "lexmodelbuildingservice.getintents": "lex:GetIntents",
    "lexmodelbuildingservice.getintentversions": "lex:GetIntentVersions",
    "lexmodelbuildingservice.getmigration": "lex:GetMigration",
    "lexmodelbuildingservice.getmigrations": "lex:GetMigrations",
    "lexmodelbuildingservice.getslottype": "lex:GetSlotType",
    "lexmodelbuildingservice.getslottypes": "lex:GetSlotTypes",
    "lexmodelbuildingservice.getslottypeversions": "lex:GetSlotTypeVersions",
    "lexmodelbuildingservice.getutterancesview": "lex:GetUtterancesView",
    "lexmodelbuildingservice.listtagsforresource": "lex:ListTagsForResource",
    "lexmodelbuildingservice.putbot": "lex:PutBot",
    "lexmodelbuildingservice.putbotalias": "lex:PutBotAlias",
    "lexmodelbuildingservice.putintent": "lex:PutIntent",
    "lexmodelbuildingservice.putslottype": "lex:PutSlotType",
    "lexmodelbuildingservice.startimport": "lex:StartImport",
    "lexmodelbuildingservice.startmigration": "lex:StartMigration",
    "lexmodelbuildingservice.tagresource": "lex:TagResource",
    "lexmodelbuildingservice.untagresource": "lex:UntagResource",
    "lexmodelsv2.buildbotlocale": "lex:BuildBotLocale",
    "lexmodelsv2.createbot": "lex:PutBot",
    "lexmodelsv2.createbotalias": "lex:PutBotAlias",
    "lexmodelsv2.createbotlocale": "lex:CreateBotLocale",
    "lexmodelsv2.createbotversion": "lex:CreateBotVersion",
    "lexmodelsv2.createexport": "lex:CreateExport",
    "lexmodelsv2.createintent": "lex:PutIntent",
    "lexmodelsv2.createresourcepolicy": "lex:CreateResourcePolicy",
    "lexmodelsv2.createresourcepolicystatement": "lex:CreateResourcePolicy",
    "lexmodelsv2.createslot": "lex:CreateSlot",
    "lexmodelsv2.createslottype": "lex:PutSlotType",
    "lexmodelsv2.createuploadurl": "lex:CreateUploadUrl",
    "lexmodelsv2.deletebot": "lex:DeleteBot",
    "lexmodelsv2.deletebotalias": "lex:DeleteBotAlias",
    "lexmodelsv2.deletebotlocale": "lex:DeleteBotLocale",
    "lexmodelsv2.deletebotversion": "lex:DeleteBotVersion",
    "lexmodelsv2.deletecustomvocabulary": "lex:DeleteCustomVocabulary",
    "lexmodelsv2.deleteexport": "lex:DeleteExport",
    "lexmodelsv2.deleteimport": "lex:DeleteImport",
    "lexmodelsv2.deleteintent": "lex:DeleteIntent",
    "lexmodelsv2.deleteresourcepolicy": "lex:DeleteResourcePolicy",
    "lexmodelsv2.deleteresourcepolicystatement": "lex:DeleteResourcePolicy",
    "lexmodelsv2.deleteslot": "lex:DeleteSlot",
    "lexmodelsv2.deleteslottype": "lex:DeleteSlotType",
    "lexmodelsv2.deleteutterances": "lex:DeleteUtterances",
    "lexmodelsv2.describebot": "lex:DescribeBot",
    "lexmodelsv2.describebotalias": "lex:DescribeBotAlias",
    "lexmodelsv2.describebotlocale": "lex:DescribeBotLocale",
    "lexmodelsv2.describebotrecommendation": "lex:DescribeBotRecommendation",
    "lexmodelsv2.describebotversion": "lex:DescribeBotVersion",
    "lexmodelsv2.describecustomvocabularymetadata": "lex:DescribeCustomVocabularyMetadata",
    "lexmodelsv2.describeexport": "lex:DescribeExport",
    "lexmodelsv2.describeimport": "lex:DescribeImport",
    "lexmodelsv2.describeintent": "lex:GetIntent",
    "lexmodelsv2.describeresourcepolicy": "lex:DescribeResourcePolicy",
    "lexmodelsv2.describeslot": "lex:DescribeSlot",
    "lexmodelsv2.describeslottype": "lex:GetSlotType",
    "lexmodelsv2.listaggregatedutterances": "lex:ListAggregatedUtterances",
    "lexmodelsv2.listbotaliases": "lex:ListBotAliases",
    "lexmodelsv2.listbotlocales": "lex:ListBotLocales",
    "lexmodelsv2.listbotrecommendations": "lex:ListBotRecommendations",
    "lexmodelsv2.listbots": "lex:GetBots",
    "lexmodelsv2.listbotversions": "lex:GetBotVersions",
    "lexmodelsv2.listbuiltinintents": "lex:GetBuiltinIntents",
    "lexmodelsv2.listbuiltinslottypes": "lex:GetBuiltinSlotTypes",
    "lexmodelsv2.listexports": "lex:ListExports",
    "lexmodelsv2.listimports": "lex:ListImports",
    "lexmodelsv2.listintents": "lex:GetIntents",
    "lexmodelsv2.listrecommendedintents": "lex:ListRecommendedIntents",
    "lexmodelsv2.listslots": "lex:ListSlots",
    "lexmodelsv2.listslottypes": "lex:GetSlotTypes",
    "lexmodelsv2.listtagsforresource": "lex:ListTagsForResource",
    "lexmodelsv2.searchassociatedtranscripts": "lex:SearchAssociatedTranscripts",
    "lexmodelsv2.startbotrecommendation": "lex:StartBotRecommendation",
    "lexmodelsv2.tagresource": "lex:TagResource",
    "lexmodelsv2.untagresource": "lex:UntagResource",
    "lexmodelsv2.updatebot": "lex:PutBot",
    "lexmodelsv2.updatebotalias": "lex:PutBotAlias",
    "lexmodelsv2.updatebotlocale": "lex:UpdateBotLocale",
    "lexmodelsv2.updatebotrecommendation": "lex:UpdateBotRecommendation",
    "lexmodelsv2.updateexport": "lex:UpdateExport",
    "lexmodelsv2.updateintent": "lex:PutIntent",
    "lexmodelsv2.updateresourcepolicy": "lex:UpdateResourcePolicy",
    "lexmodelsv2.updateslot": "lex:UpdateSlot",
    "lexmodelsv2.updateslottype": "lex:PutSlotType",
    "lexruntime.deletesession": "lex:DeleteSession",
    "lexruntime.getsession": "lex:GetSession",
    "lexruntime.postcontent": "lex:PostContent",
    "lexruntime.posttext": "lex:PostText",
    "lexruntime.putsession": "lex:PutSession",
    "lexruntimev2.deletesession": "lex:DeleteSession",
    "lexruntimev2.getsession": "lex:GetSession",
    "lexruntimev2.putsession": "lex:PutSession",
    "lexruntimev2.recognizetext": "lex:RecognizeText",
    "lexruntimev2.recognizeutterance": "lex:RecognizeUtterance",
    "licensemanager.acceptgrant": "license-manager:AcceptGrant",
    "licensemanager.checkinlicense": "license-manager:CheckInLicense",
    "licensemanager.checkoutborrowlicense": "license-manager:CheckoutBorrowLicense",
    "licensemanager.checkoutlicense": "license-manager:CheckoutLicense",
    "licensemanager.creategrant": "license-manager:CreateGrant",
    "licensemanager.creategrantversion": "license-manager:CreateGrantVersion",
    "licensemanager.createlicense": "license-manager:CreateLicense",
    "licensemanager.createlicenseconfiguration": "license-manager:CreateLicenseConfiguration",
    "licensemanager.createlicenseconversiontaskforresource": "license-manager:CreateLicenseConversionTaskForResource",
    "licensemanager.createlicensemanagerreportgenerator": "license-manager:CreateLicenseManagerReportGenerator",
    "licensemanager.createlicenseversion": "license-manager:CreateLicenseVersion",
    "licensemanager.createtoken": "license-manager:CreateToken",
    "licensemanager.deletegrant": "license-manager:DeleteGrant",
    "licensemanager.deletelicense": "license-manager:DeleteLicense",
    "licensemanager.deletelicenseconfiguration": "license-manager:DeleteLicenseConfiguration",
    "licensemanager.deletelicensemanagerreportgenerator": "license-manager:DeleteLicenseManagerReportGenerator",
    "licensemanager.deletetoken": "license-manager:DeleteToken",
    "licensemanager.extendlicenseconsumption": "license-manager:ExtendLicenseConsumption",
    "licensemanager.getaccesstoken": "license-manager:GetAccessToken",
    "licensemanager.getgrant": "license-manager:GetGrant",
    "licensemanager.getlicense": "license-manager:GetLicense",
    "licensemanager.getlicenseconfiguration": "license-manager:GetLicenseConfiguration",
    "licensemanager.getlicenseconversiontask": "license-manager:GetLicenseConversionTask",
    "licensemanager.getlicensemanagerreportgenerator": "license-manager:GetLicenseManagerReportGenerator",
    "licensemanager.getlicenseusage": "license-manager:GetLicenseUsage",
    "licensemanager.getservicesettings": "license-manager:GetServiceSettings",
    "licensemanager.listassociationsforlicenseconfiguration": "license-manager:ListAssociationsForLicenseConfiguration",
    "licensemanager.listdistributedgrants": "license-manager:ListDistributedGrants",
    "licensemanager.listfailuresforlicenseconfigurationoperations": "license-manager:ListFailuresForLicenseConfigurationOperations",
    "licensemanager.listlicenseconfigurations": "license-manager:ListLicenseConfigurations",
    "licensemanager.listlicenseconversiontasks": "license-manager:ListLicenseConversionTasks",
    "licensemanager.listlicensemanagerreportgenerators": "license-manager:ListLicenseManagerReportGenerators",
    "licensemanager.listlicenses": "license-manager:ListLicenses",
    "licensemanager.listlicensespecificationsforresource": "license-manager:ListLicenseSpecificationsForResource",
    "licensemanager.listlicenseversions": "license-manager:ListLicenseVersions",
    "licensemanager.listreceivedgrants": "license-manager:ListReceivedGrants",
    "licensemanager.listreceivedlicenses": "license-manager:ListReceivedLicenses",
    "licensemanager.listresourceinventory": "license-manager:ListResourceInventory",
    "licensemanager.listtagsforresource": "license-manager:ListTagsForResource",
    "licensemanager.listtokens": "license-manager:ListTokens",
    "licensemanager.listusageforlicenseconfiguration": "license-manager:ListUsageForLicenseConfiguration",
    "licensemanager.rejectgrant": "license-manager:RejectGrant",
    "licensemanager.tagresource": "license-manager:TagResource",
    "licensemanager.untagresource": "license-manager:UntagResource",
    "licensemanager.updatelicenseconfiguration": "license-manager:UpdateLicenseConfiguration",
    "licensemanager.updatelicensemanagerreportgenerator": "license-manager:UpdateLicenseManagerReportGenerator",
    "licensemanager.updatelicensespecificationsforresource": "license-manager:UpdateLicenseSpecificationsForResource",
    "licensemanager.updateservicesettings": "license-manager:UpdateServiceSettings",
    "lightsail.allocatestaticip": "lightsail:AllocateStaticIp",
    "lightsail.attachcertificatetodistribution": "lightsail:AttachCertificateToDistribution",
    "lightsail.attachdisk": "lightsail:AttachDisk",
    "lightsail.attachinstancestoloadbalancer": "lightsail:AttachInstancesToLoadBalancer",
    "lightsail.attachloadbalancertlscertificate": "lightsail:AttachLoadBalancerTlsCertificate",
    "lightsail.attachstaticip": "lightsail:AttachStaticIp",
    "lightsail.closeinstancepublicports": "lightsail:CloseInstancePublicPorts",
    "lightsail.copysnapshot": "lightsail:CopySnapshot",
    "lightsail.createbucket": "lightsail:CreateBucket",
    "lightsail.createbucketaccesskey": "lightsail:CreateBucketAccessKey",
    "lightsail.createcertificate": "lightsail:CreateCertificate",
    "lightsail.createcloudformationstack": "lightsail:CreateCloudFormationStack",
    "lightsail.createcontactmethod": "lightsail:CreateContactMethod",
    "lightsail.createcontainerservice": "lightsail:CreateContainerService",
    "lightsail.createcontainerservicedeployment": "lightsail:CreateContainerServiceDeployment",
    "lightsail.createcontainerserviceregistrylogin": "lightsail:CreateContainerServiceRegistryLogin",
    "lightsail.createdisk": "lightsail:CreateDisk",
    "lightsail.creatediskfromsnapshot": "lightsail:CreateDiskFromSnapshot",
    "lightsail.createdisksnapshot": "lightsail:CreateDiskSnapshot",
    "lightsail.createdistribution": "lightsail:CreateDistribution",
    "lightsail.createdomain": "lightsail:CreateDomain",
    "lightsail.createdomainentry": "lightsail:CreateDomainEntry",
    "lightsail.createinstances": "lightsail:CreateInstances",
    "lightsail.createinstancesfromsnapshot": "lightsail:CreateInstancesFromSnapshot",
    "lightsail.createinstancesnapshot": "lightsail:CreateInstanceSnapshot",
    "lightsail.createkeypair": "lightsail:CreateKeyPair",
    "lightsail.createloadbalancer": "lightsail:CreateLoadBalancer",
    "lightsail.createloadbalancertlscertificate": "lightsail:CreateLoadBalancerTlsCertificate",
    "lightsail.createrelationaldatabase": "lightsail:CreateRelationalDatabase",
    "lightsail.createrelationaldatabasefromsnapshot": "lightsail:CreateRelationalDatabaseFromSnapshot",
    "lightsail.createrelationaldatabasesnapshot": "lightsail:CreateRelationalDatabaseSnapshot",
    "lightsail.deletealarm": "lightsail:DeleteAlarm",
    "lightsail.deleteautosnapshot": "lightsail:DeleteAutoSnapshot",
    "lightsail.deletebucket": "lightsail:DeleteBucket",
    "lightsail.deletebucketaccesskey": "lightsail:DeleteBucketAccessKey",
    "lightsail.deletecertificate": "lightsail:DeleteCertificate",
    "lightsail.deletecontactmethod": "lightsail:DeleteContactMethod",
    "lightsail.deletecontainerimage": "lightsail:DeleteContainerImage",
    "lightsail.deletecontainerservice": "lightsail:DeleteContainerService",
    "lightsail.deletedisk": "lightsail:DeleteDisk",
    "lightsail.deletedisksnapshot": "lightsail:DeleteDiskSnapshot",
    "lightsail.deletedistribution": "lightsail:DeleteDistribution",
    "lightsail.deletedomain": "lightsail:DeleteDomain",
    "lightsail.deletedomainentry": "lightsail:DeleteDomainEntry",
    "lightsail.deleteinstance": "lightsail:DeleteInstance",
    "lightsail.deleteinstancesnapshot": "lightsail:DeleteInstanceSnapshot",
    "lightsail.deletekeypair": "lightsail:DeleteKeyPair",
    "lightsail.deleteknownhostkeys": "lightsail:DeleteKnownHostKeys",
    "lightsail.deleteloadbalancer": "lightsail:DeleteLoadBalancer",
    "lightsail.deleteloadbalancertlscertificate": "lightsail:DeleteLoadBalancerTlsCertificate",
    "lightsail.deleterelationaldatabase": "lightsail:DeleteRelationalDatabase",
    "lightsail.deleterelationaldatabasesnapshot": "lightsail:DeleteRelationalDatabaseSnapshot",
    "lightsail.detachcertificatefromdistribution": "lightsail:DetachCertificateFromDistribution",
    "lightsail.detachdisk": "lightsail:DetachDisk",
    "lightsail.detachinstancesfromloadbalancer": "lightsail:DetachInstancesFromLoadBalancer",
    "lightsail.detachstaticip": "lightsail:DetachStaticIp",
    "lightsail.disableaddon": "lightsail:DisableAddOn",
    "lightsail.downloaddefaultkeypair": "lightsail:DownloadDefaultKeyPair",
    "lightsail.enableaddon": "lightsail:EnableAddOn",
    "lightsail.exportsnapshot": "lightsail:ExportSnapshot",
    "lightsail.getactivenames": "lightsail:GetActiveNames",
    "lightsail.getalarms": "lightsail:GetAlarms",
    "lightsail.getautosnapshots": "lightsail:GetAutoSnapshots",
    "lightsail.getblueprints": "lightsail:GetBlueprints",
    "lightsail.getbucketaccesskeys": "lightsail:GetBucketAccessKeys",
    "lightsail.getbucketbundles": "lightsail:GetBucketBundles",
    "lightsail.getbucketmetricdata": "lightsail:GetBucketMetricData",
    "lightsail.getbuckets": "lightsail:GetBuckets",
    "lightsail.getbundles": "lightsail:GetBundles",
    "lightsail.getcertificates": "lightsail:GetCertificates",
    "lightsail.getcloudformationstackrecords": "lightsail:GetCloudFormationStackRecords",
    "lightsail.getcontactmethods": "lightsail:GetContactMethods",
    "lightsail.getcontainerapimetadata": "lightsail:GetContainerAPIMetadata",
    "lightsail.getcontainerimages": "lightsail:GetContainerImages",
    "lightsail.getcontainerlog": "lightsail:GetContainerLog",
    "lightsail.getcontainerservicedeployments": "lightsail:GetContainerServiceDeployments",
    "lightsail.getcontainerservicemetricdata": "lightsail:GetContainerServiceMetricData",
    "lightsail.getcontainerservicepowers": "lightsail:GetContainerServicePowers",
    "lightsail.getcontainerservices": "lightsail:GetContainerServices",
    "lightsail.getdisk": "lightsail:GetDisk",
    "lightsail.getdisks": "lightsail:GetDisks",
    "lightsail.getdisksnapshot": "lightsail:GetDiskSnapshot",
    "lightsail.getdisksnapshots": "lightsail:GetDiskSnapshots",
    "lightsail.getdistributionbundles": "lightsail:GetDistributionBundles",
    "lightsail.getdistributionlatestcachereset": "lightsail:GetDistributionLatestCacheReset",
    "lightsail.getdistributionmetricdata": "lightsail:GetDistributionMetricData",
    "lightsail.getdistributions": "lightsail:GetDistributions",
    "lightsail.getdomain": "lightsail:GetDomain",
    "lightsail.getdomains": "lightsail:GetDomains",
    "lightsail.getexportsnapshotrecords": "lightsail:GetExportSnapshotRecords",
    "lightsail.getinstance": "lightsail:GetInstance",
    "lightsail.getinstanceaccessdetails": "lightsail:GetInstanceAccessDetails",
    "lightsail.getinstancemetricdata": "lightsail:GetInstanceMetricData",
    "lightsail.getinstanceportstates": "lightsail:GetInstancePortStates",
    "lightsail.getinstances": "lightsail:GetInstances",
    "lightsail.getinstancesnapshot": "lightsail:GetInstanceSnapshot",
    "lightsail.getinstancesnapshots": "lightsail:GetInstanceSnapshots",
    "lightsail.getinstancestate": "lightsail:GetInstanceState",
    "lightsail.getkeypair": "lightsail:GetKeyPair",
    "lightsail.getkeypairs": "lightsail:GetKeyPairs",
    "lightsail.getloadbalancer": "lightsail:GetLoadBalancer",
    "lightsail.getloadbalancermetricdata": "lightsail:GetLoadBalancerMetricData",
    "lightsail.getloadbalancers": "lightsail:GetLoadBalancers",
    "lightsail.getloadbalancertlscertificates": "lightsail:GetLoadBalancerTlsCertificates",
    "lightsail.getloadbalancertlspolicies": "lightsail:GetLoadBalancerTlsPolicies",
    "lightsail.getoperation": "lightsail:GetOperation",
    "lightsail.getoperations": "lightsail:GetOperations",
    "lightsail.getoperationsforresource": "lightsail:GetOperationsForResource",
    "lightsail.getregions": "lightsail:GetRegions",
    "lightsail.getrelationaldatabase": "lightsail:GetRelationalDatabase",
    "lightsail.getrelationaldatabaseblueprints": "lightsail:GetRelationalDatabaseBlueprints",
    "lightsail.getrelationaldatabasebundles": "lightsail:GetRelationalDatabaseBundles",
    "lightsail.getrelationaldatabaseevents": "lightsail:GetRelationalDatabaseEvents",
    "lightsail.getrelationaldatabaselogevents": "lightsail:GetRelationalDatabaseLogEvents",
    "lightsail.getrelationaldatabaselogstreams": "lightsail:GetRelationalDatabaseLogStreams",
    "lightsail.getrelationaldatabasemasteruserpassword": "lightsail:GetRelationalDatabaseMasterUserPassword",
    "lightsail.getrelationaldatabasemetricdata": "lightsail:GetRelationalDatabaseMetricData",
    "lightsail.getrelationaldatabaseparameters": "lightsail:GetRelationalDatabaseParameters",
    "lightsail.getrelationaldatabases": "lightsail:GetRelationalDatabases",
    "lightsail.getrelationaldatabasesnapshot": "lightsail:GetRelationalDatabaseSnapshot",
    "lightsail.getrelationaldatabasesnapshots": "lightsail:GetRelationalDatabaseSnapshots",
    "lightsail.getstaticip": "lightsail:GetStaticIp",
    "lightsail.getstaticips": "lightsail:GetStaticIps",
    "lightsail.importkeypair": "lightsail:ImportKeyPair",
    "lightsail.isvpcpeered": "lightsail:IsVpcPeered",
    "lightsail.openinstancepublicports": "lightsail:OpenInstancePublicPorts",
    "lightsail.peervpc": "lightsail:PeerVpc",
    "lightsail.putalarm": "lightsail:PutAlarm",
    "lightsail.putinstancepublicports": "lightsail:PutInstancePublicPorts",
    "lightsail.rebootinstance": "lightsail:RebootInstance",
    "lightsail.rebootrelationaldatabase": "lightsail:RebootRelationalDatabase",
    "lightsail.registercontainerimage": "lightsail:RegisterContainerImage",
    "lightsail.releasestaticip": "lightsail:ReleaseStaticIp",
    "lightsail.resetdistributioncache": "lightsail:ResetDistributionCache",
    "lightsail.sendcontactmethodverification": "lightsail:SendContactMethodVerification",
    "lightsail.setipaddresstype": "lightsail:SetIpAddressType",
    "lightsail.setresourceaccessforbucket": "lightsail:SetResourceAccessForBucket",
    "lightsail.startinstance": "lightsail:StartInstance",
    "lightsail.startrelationaldatabase": "lightsail:StartRelationalDatabase",
    "lightsail.stopinstance": "lightsail:StopInstance",
    "lightsail.stoprelationaldatabase": "lightsail:StopRelationalDatabase",
    "lightsail.tagresource": "lightsail:TagResource",
    "lightsail.testalarm": "lightsail:TestAlarm",
    "lightsail.unpeervpc": "lightsail:UnpeerVpc",
    "lightsail.untagresource": "lightsail:UntagResource",
    "lightsail.updatebucket": "lightsail:UpdateBucket",
    "lightsail.updatebucketbundle": "lightsail:UpdateBucketBundle",
    "lightsail.updatecontainerservice": "lightsail:UpdateContainerService",
    "lightsail.updatedistribution": "lightsail:UpdateDistribution",
    "lightsail.updatedistributionbundle": "lightsail:UpdateDistributionBundle",
    "lightsail.updatedomainentry": "lightsail:UpdateDomainEntry",
    "lightsail.updateloadbalancerattribute": "lightsail:UpdateLoadBalancerAttribute",
    "lightsail.updaterelationaldatabase": "lightsail:UpdateRelationalDatabase",
    "lightsail.updaterelationaldatabaseparameters": "lightsail:UpdateRelationalDatabaseParameters",
    "location.associatetrackerconsumer": "geo:AssociateTrackerConsumer",
    "location.batchdeletedevicepositionhistory": "geo:BatchDeleteDevicePositionHistory",
    "location.batchdeletegeofence": "geo:BatchDeleteGeofence",
    "location.batchevaluategeofences": "geo:BatchEvaluateGeofences",
    "location.batchgetdeviceposition": "geo:BatchGetDevicePosition",
    "location.batchputgeofence": "geo:BatchPutGeofence",
    "location.batchupdatedeviceposition": "geo:BatchUpdateDevicePosition",
    "location.calculateroute": "geo:CalculateRoute",
    "location.calculateroutematrix": "geo:CalculateRouteMatrix",
    "location.creategeofencecollection": "geo:CreateGeofenceCollection",
    "location.createmap": "geo:CreateMap",
    "location.createplaceindex": "geo:CreatePlaceIndex",
    "location.createroutecalculator": "geo:CreateRouteCalculator",
    "location.createtracker": "geo:CreateTracker",
    "location.deletegeofencecollection": "geo:DeleteGeofenceCollection",
    "location.deletemap": "geo:DeleteMap",
    "location.deleteplaceindex": "geo:DeletePlaceIndex",
    "location.deleteroutecalculator": "geo:DeleteRouteCalculator",
    "location.deletetracker": "geo:DeleteTracker",
    "location.describegeofencecollection": "geo:DescribeGeofenceCollection",
    "location.describemap": "geo:DescribeMap",
    "location.describeplaceindex": "geo:DescribePlaceIndex",
    "location.describeroutecalculator": "geo:DescribeRouteCalculator",
    "location.describetracker": "geo:DescribeTracker",
    "location.disassociatetrackerconsumer": "geo:DisassociateTrackerConsumer",
    "location.getdeviceposition": "geo:GetDevicePosition",
    "location.getdevicepositionhistory": "geo:GetDevicePositionHistory",
    "location.getgeofence": "geo:GetGeofence",
    "location.getmapglyphs": "geo:GetMapGlyphs",
    "location.getmapsprites": "geo:GetMapSprites",
    "location.getmapstyledescriptor": "geo:GetMapStyleDescriptor",
    "location.getmaptile": "geo:GetMapTile",
    "location.listdevicepositions": "geo:ListDevicePositions",
    "location.listgeofencecollections": "geo:ListGeofenceCollections",
    "location.listgeofences": "geo:ListGeofences",
    "location.listmaps": "geo:ListMaps",
    "location.listplaceindexes": "geo:ListPlaceIndexes",
    "location.listroutecalculators": "geo:ListRouteCalculators",
    "location.listtagsforresource": "geo:ListTagsForResource",
    "location.listtrackerconsumers": "geo:ListTrackerConsumers",
    "location.listtrackers": "geo:ListTrackers",
    "location.putgeofence": "geo:PutGeofence",
    "location.searchplaceindexforposition": "geo:SearchPlaceIndexForPosition",
    "location.searchplaceindexforsuggestions": "geo:SearchPlaceIndexForSuggestions",
    "location.searchplaceindexfortext": "geo:SearchPlaceIndexForText",
    "location.tagresource": "geo:TagResource",
    "location.untagresource": "geo:UntagResource",
    "location.updategeofencecollection": "geo:UpdateGeofenceCollection",
    "location.updatemap": "geo:UpdateMap",
    "location.updateplaceindex": "geo:UpdatePlaceIndex",
    "location.updateroutecalculator": "geo:UpdateRouteCalculator",
    "location.updatetracker": "geo:UpdateTracker",
    "lookoutequipment.createdataset": "lookoutequipment:CreateDataset",
    "lookoutequipment.createinferencescheduler": "lookoutequipment:CreateInferenceScheduler",
    "lookoutequipment.createmodel": "lookoutequipment:CreateModel",
    "lookoutequipment.deletedataset": "lookoutequipment:DeleteDataset",
    "lookoutequipment.deleteinferencescheduler": "lookoutequipment:DeleteInferenceScheduler",
    "lookoutequipment.deletemodel": "lookoutequipment:DeleteModel",
    "lookoutequipment.describedataingestionjob": "lookoutequipment:DescribeDataIngestionJob",
    "lookoutequipment.describedataset": "lookoutequipment:DescribeDataset",
    "lookoutequipment.describeinferencescheduler": "lookoutequipment:DescribeInferenceScheduler",
    "lookoutequipment.describemodel": "lookoutequipment:DescribeModel",
    "lookoutequipment.listdataingestionjobs": "lookoutequipment:ListDataIngestionJobs",
    "lookoutequipment.listdatasets": "lookoutequipment:ListDatasets",
    "lookoutequipment.listinferenceexecutions": "lookoutequipment:ListInferenceExecutions",
    "lookoutequipment.listinferenceschedulers": "lookoutequipment:ListInferenceSchedulers",
    "lookoutequipment.listmodels": "lookoutequipment:ListModels",
    "lookoutequipment.listsensorstatistics": "lookoutequipment:ListSensorStatistics",
    "lookoutequipment.listtagsforresource": "lookoutequipment:ListTagsForResource",
    "lookoutequipment.startdataingestionjob": "lookoutequipment:StartDataIngestionJob",
    "lookoutequipment.startinferencescheduler": "lookoutequipment:StartInferenceScheduler",
    "lookoutequipment.stopinferencescheduler": "lookoutequipment:StopInferenceScheduler",
    "lookoutequipment.tagresource": "lookoutequipment:TagResource",
    "lookoutequipment.untagresource": "lookoutequipment:UntagResource",
    "lookoutequipment.updateinferencescheduler": "lookoutequipment:UpdateInferenceScheduler",
    "lookoutmetrics.activateanomalydetector": "lookoutmetrics:ActivateAnomalyDetector",
    "lookoutmetrics.backtestanomalydetector": "lookoutmetrics:BackTestAnomalyDetector",
    "lookoutmetrics.createalert": "lookoutmetrics:CreateAlert",
    "lookoutmetrics.createanomalydetector": "lookoutmetrics:CreateAnomalyDetector",
    "lookoutmetrics.createmetricset": "lookoutmetrics:CreateMetricSet",
    "lookoutmetrics.deactivateanomalydetector": "lookoutmetrics:DeactivateAnomalyDetector",
    "lookoutmetrics.deletealert": "lookoutmetrics:DeleteAlert",
    "lookoutmetrics.deleteanomalydetector": "lookoutmetrics:DeleteAnomalyDetector",
    "lookoutmetrics.describealert": "lookoutmetrics:DescribeAlert",
    "lookoutmetrics.describeanomalydetectionexecutions": "lookoutmetrics:DescribeAnomalyDetectionExecutions",
    "lookoutmetrics.describeanomalydetector": "lookoutmetrics:DescribeAnomalyDetector",
    "lookoutmetrics.describemetricset": "lookoutmetrics:DescribeMetricSet",
    "lookoutmetrics.detectmetricsetconfig": "lookoutmetrics:DetectMetricSetConfig",
    "lookoutmetrics.getanomalygroup": "lookoutmetrics:GetAnomalyGroup",
    "lookoutmetrics.getfeedback": "lookoutmetrics:GetFeedback",
    "lookoutmetrics.getsampledata": "lookoutmetrics:GetSampleData",
    "lookoutmetrics.listalerts": "lookoutmetrics:ListAlerts",
    "lookoutmetrics.listanomalydetectors": "lookoutmetrics:ListAnomalyDetectors",
    "lookoutmetrics.listanomalygrouprelatedmetrics": "lookoutmetrics:ListAnomalyGroupRelatedMetrics",
    "lookoutmetrics.listanomalygroupsummaries": "lookoutmetrics:ListAnomalyGroupSummaries",
    "lookoutmetrics.listanomalygrouptimeseries": "lookoutmetrics:ListAnomalyGroupTimeSeries",
    "lookoutmetrics.listmetricsets": "lookoutmetrics:ListMetricSets",
    "lookoutmetrics.listtagsforresource": "lookoutmetrics:ListTagsForResource",
    "lookoutmetrics.putfeedback": "lookoutmetrics:PutFeedback",
    "lookoutmetrics.tagresource": "lookoutmetrics:TagResource",
    "lookoutmetrics.untagresource": "lookoutmetrics:UntagResource",
    "lookoutmetrics.updatealert": "lookoutmetrics:UpdateAlert",
    "lookoutmetrics.updateanomalydetector": "lookoutmetrics:UpdateAnomalyDetector",
    "lookoutmetrics.updatemetricset": "lookoutmetrics:UpdateMetricSet",
    "lookoutvision.createdataset": "lookoutvision:CreateDataset",
    "lookoutvision.createmodel": "lookoutvision:CreateModel",
    "lookoutvision.createproject": "lookoutvision:CreateProject",
    "lookoutvision.deletedataset": "lookoutvision:DeleteDataset",
    "lookoutvision.deletemodel": "lookoutvision:DeleteModel",
    "lookoutvision.deleteproject": "lookoutvision:DeleteProject",
    "lookoutvision.describedataset": "lookoutvision:DescribeDataset",
    "lookoutvision.describemodel": "lookoutvision:DescribeModel",
    "lookoutvision.describemodelpackagingjob": "lookoutvision:DescribeModelPackagingJob",
    "lookoutvision.describeproject": "lookoutvision:DescribeProject",
    "lookoutvision.detectanomalies": "lookoutvision:DetectAnomalies",
    "lookoutvision.listdatasetentries": "lookoutvision:ListDatasetEntries",
    "lookoutvision.listmodelpackagingjobs": "lookoutvision:ListModelPackagingJobs",
    "lookoutvision.listmodels": "lookoutvision:ListModels",
    "lookoutvision.listprojects": "lookoutvision:ListProjects",
    "lookoutvision.listtagsforresource": "lookoutvision:ListTagsForResource",
    "lookoutvision.startmodel": "lookoutvision:StartModel",
    "lookoutvision.startmodelpackagingjob": "lookoutvision:StartModelPackagingJob",
    "lookoutvision.stopmodel": "lookoutvision:StopModel",
    "lookoutvision.tagresource": "lookoutvision:TagResource",
    "lookoutvision.untagresource": "lookoutvision:UntagResource",
    "lookoutvision.updatedatasetentries": "lookoutvision:UpdateDatasetEntries",
    "m2.cancelbatchjobexecution": "m2:CancelBatchJobExecution",
    "m2.createapplication": "m2:CreateApplication",
    "m2.createdatasetimporttask": "m2:CreateDataSetImportTask",
    "m2.createdeployment": "m2:CreateDeployment",
    "m2.createenvironment": "m2:CreateEnvironment",
    "m2.deleteapplication": "m2:DeleteApplication",
    "m2.deleteapplicationfromenvironment": "m2:DeleteApplicationFromEnvironment",
    "m2.deleteenvironment": "m2:DeleteEnvironment",
    "m2.getapplication": "m2:GetApplication",
    "m2.getapplicationversion": "m2:GetApplicationVersion",
    "m2.getbatchjobexecution": "m2:GetBatchJobExecution",
    "m2.getdatasetdetails": "m2:GetDataSetDetails",
    "m2.getdatasetimporttask": "m2:GetDataSetImportTask",
    "m2.getdeployment": "m2:GetDeployment",
    "m2.getenvironment": "m2:GetEnvironment",
    "m2.listapplications": "m2:ListApplications",
    "m2.listapplicationversions": "m2:ListApplicationVersions",
    "m2.listbatchjobdefinitions": "m2:ListBatchJobDefinitions",
    "m2.listbatchjobexecutions": "m2:ListBatchJobExecutions",
    "m2.listdatasetimporthistory": "m2:ListDataSetImportHistory",
    "m2.listdatasets": "m2:ListDataSets",
    "m2.listdeployments": "m2:ListDeployments",
    "m2.listengineversions": "m2:ListEngineVersions",
    "m2.listenvironments": "m2:ListEnvironments",
    "m2.listtagsforresource": "m2:ListTagsForResource",
    "m2.startapplication": "m2:StartApplication",
    "m2.startbatchjob": "m2:StartBatchJob",
    "m2.stopapplication": "m2:StopApplication",
    "m2.tagresource": "m2:TagResource",
    "m2.untagresource": "m2:UntagResource",
    "m2.updateapplication": "m2:UpdateApplication",
    "m2.updateenvironment": "m2:UpdateEnvironment",
    "machinelearning.addtags": "machinelearning:AddTags",
    "machinelearning.createbatchprediction": "machinelearning:CreateBatchPrediction",
    "machinelearning.createdatasourcefromrds": "machinelearning:CreateDataSourceFromRDS",
    "machinelearning.createdatasourcefromredshift": "machinelearning:CreateDataSourceFromRedshift",
    "machinelearning.createdatasourcefroms3": "machinelearning:CreateDataSourceFromS3",
    "machinelearning.createevaluation": "machinelearning:CreateEvaluation",
    "machinelearning.createmlmodel": "machinelearning:CreateMLModel",
    "machinelearning.createrealtimeendpoint": "machinelearning:CreateRealtimeEndpoint",
    "machinelearning.deletebatchprediction": "machinelearning:DeleteBatchPrediction",
    "machinelearning.deletedatasource": "machinelearning:DeleteDataSource",
    "machinelearning.deleteevaluation": "machinelearning:DeleteEvaluation",
    "machinelearning.deletemlmodel": "machinelearning:DeleteMLModel",
    "machinelearning.deleterealtimeendpoint": "machinelearning:DeleteRealtimeEndpoint",
    "machinelearning.deletetags": "machinelearning:DeleteTags",
    "machinelearning.describebatchpredictions": "machinelearning:DescribeBatchPredictions",
    "machinelearning.describedatasources": "machinelearning:DescribeDataSources",
    "machinelearning.describeevaluations": "machinelearning:DescribeEvaluations",
    "machinelearning.describemlmodels": "machinelearning:DescribeMLModels",
    "machinelearning.describetags": "machinelearning:DescribeTags",
    "machinelearning.getbatchprediction": "machinelearning:GetBatchPrediction",
    "machinelearning.getdatasource": "machinelearning:GetDataSource",
    "machinelearning.getevaluation": "machinelearning:GetEvaluation",
    "machinelearning.getmlmodel": "machinelearning:GetMLModel",
    "machinelearning.predict": "machinelearning:Predict",
    "machinelearning.updatebatchprediction": "machinelearning:UpdateBatchPrediction",
    "machinelearning.updatedatasource": "machinelearning:UpdateDataSource",
    "machinelearning.updateevaluation": "machinelearning:UpdateEvaluation",
    "machinelearning.updatemlmodel": "machinelearning:UpdateMLModel",
    "macie.associatememberaccount": "macie:AssociateMemberAccount",
    "macie.associates3resources": "macie:AssociateS3Resources",
    "macie.disassociatememberaccount": "macie:DisassociateMemberAccount",
    "macie.disassociates3resources": "macie:DisassociateS3Resources",
    "macie.listmemberaccounts": "macie:ListMemberAccounts",
    "macie.lists3resources": "macie:ListS3Resources",
    "macie.updates3resources": "macie:UpdateS3Resources",
    "macie2.acceptinvitation": "macie2:AcceptInvitation",
    "macie2.batchgetcustomdataidentifiers": "macie2:BatchGetCustomDataIdentifiers",
    "macie2.createclassificationjob": "macie2:CreateClassificationJob",
    "macie2.createcustomdataidentifier": "macie2:CreateCustomDataIdentifier",
    "macie2.createfindingsfilter": "macie2:CreateFindingsFilter",
    "macie2.createinvitations": "macie2:CreateInvitations",
    "macie2.createmember": "macie2:CreateMember",
    "macie2.createsamplefindings": "macie2:CreateSampleFindings",
    "macie2.declineinvitations": "macie2:DeclineInvitations",
    "macie2.deletecustomdataidentifier": "macie2:DeleteCustomDataIdentifier",
    "macie2.deletefindingsfilter": "macie2:DeleteFindingsFilter",
    "macie2.deleteinvitations": "macie2:DeleteInvitations",
    "macie2.deletemember": "macie2:DeleteMember",
    "macie2.describebuckets": "macie2:DescribeBuckets",
    "macie2.describeclassificationjob": "macie2:DescribeClassificationJob",
    "macie2.describeorganizationconfiguration": "macie2:DescribeOrganizationConfiguration",
    "macie2.disablemacie": "macie2:DisableMacie",
    "macie2.disableorganizationadminaccount": "macie2:DisableOrganizationAdminAccount",
    "macie2.disassociatefromadministratoraccount": "macie2:DisassociateFromAdministratorAccount",
    "macie2.disassociatefrommasteraccount": "macie2:DisassociateFromMasterAccount",
    "macie2.disassociatemember": "macie2:DisassociateMember",
    "macie2.enablemacie": "macie2:EnableMacie",
    "macie2.enableorganizationadminaccount": "macie2:EnableOrganizationAdminAccount",
    "macie2.getadministratoraccount": "macie2:GetAdministratorAccount",
    "macie2.getbucketstatistics": "macie2:GetBucketStatistics",
    "macie2.getclassificationexportconfiguration": "macie2:GetClassificationExportConfiguration",
    "macie2.getcustomdataidentifier": "macie2:GetCustomDataIdentifier",
    "macie2.getfindings": "macie2:GetFindings",
    "macie2.getfindingsfilter": "macie2:GetFindingsFilter",
    "macie2.getfindingspublicationconfiguration": "macie2:GetFindingsPublicationConfiguration",
    "macie2.getfindingstatistics": "macie2:GetFindingStatistics",
    "macie2.getinvitationscount": "macie2:GetInvitationsCount",
    "macie2.getmaciesession": "macie2:GetMacieSession",
    "macie2.getmasteraccount": "macie2:GetMasterAccount",
    "macie2.getmember": "macie2:GetMember",
    "macie2.getusagestatistics": "macie2:GetUsageStatistics",
    "macie2.getusagetotals": "macie2:GetUsageTotals",
    "macie2.listclassificationjobs": "macie2:ListClassificationJobs",
    "macie2.listcustomdataidentifiers": "macie2:ListCustomDataIdentifiers",
    "macie2.listfindings": "macie2:ListFindings",
    "macie2.listfindingsfilters": "macie2:ListFindingsFilters",
    "macie2.listinvitations": "macie2:ListInvitations",
    "macie2.listmanageddataidentifiers": "macie2:ListManagedDataIdentifiers",
    "macie2.listmembers": "macie2:ListMembers",
    "macie2.listorganizationadminaccounts": "macie2:ListOrganizationAdminAccounts",
    "macie2.listtagsforresource": "macie2:ListTagsForResource",
    "macie2.putclassificationexportconfiguration": "macie2:PutClassificationExportConfiguration",
    "macie2.putfindingspublicationconfiguration": "macie2:PutFindingsPublicationConfiguration",
    "macie2.searchresources": "macie2:SearchResources",
    "macie2.tagresource": "macie2:TagResource",
    "macie2.testcustomdataidentifier": "macie2:TestCustomDataIdentifier",
    "macie2.untagresource": "macie2:UntagResource",
    "macie2.updateclassificationjob": "macie2:UpdateClassificationJob",
    "macie2.updatefindingsfilter": "macie2:UpdateFindingsFilter",
    "macie2.updatemaciesession": "macie2:UpdateMacieSession",
    "macie2.updatemembersession": "macie2:UpdateMemberSession",
    "macie2.updateorganizationconfiguration": "macie2:UpdateOrganizationConfiguration",
    "managedblockchain.createmember": "managedblockchain:CreateMember",
    "managedblockchain.createnetwork": "managedblockchain:CreateNetwork",
    "managedblockchain.createnode": "managedblockchain:CreateNode",
    "managedblockchain.createproposal": "managedblockchain:CreateProposal",
    "managedblockchain.deletemember": "managedblockchain:DeleteMember",
    "managedblockchain.deletenode": "managedblockchain:DeleteNode",
    "managedblockchain.getmember": "managedblockchain:GetMember",
    "managedblockchain.getnetwork": "managedblockchain:GetNetwork",
    "managedblockchain.getnode": "managedblockchain:GetNode",
    "managedblockchain.getproposal": "managedblockchain:GetProposal",
    "managedblockchain.listinvitations": "managedblockchain:ListInvitations",
    "managedblockchain.listmembers": "managedblockchain:ListMembers",
    "managedblockchain.listnetworks": "managedblockchain:ListNetworks",
    "managedblockchain.listnodes": "managedblockchain:ListNodes",
    "managedblockchain.listproposals": "managedblockchain:ListProposals",
    "managedblockchain.listproposalvotes": "managedblockchain:ListProposalVotes",
    "managedblockchain.listtagsforresource": "managedblockchain:ListTagsForResource",
    "managedblockchain.rejectinvitation": "managedblockchain:RejectInvitation",
    "managedblockchain.tagresource": "managedblockchain:TagResource",
    "managedblockchain.untagresource": "managedblockchain:UntagResource",
    "managedblockchain.updatemember": "managedblockchain:UpdateMember",
    "managedblockchain.updatenode": "managedblockchain:UpdateNode",
    "managedblockchain.voteonproposal": "managedblockchain:VoteOnProposal",
    "marketplacecatalog.cancelchangeset": "aws-marketplace:CancelChangeSet",
    "marketplacecatalog.describechangeset": "aws-marketplace:DescribeChangeSet",
    "marketplacecatalog.describeentity": "aws-marketplace:DescribeEntity",
    "marketplacecatalog.listchangesets": "aws-marketplace:ListChangeSets",
    "marketplacecatalog.listentities": "aws-marketplace:ListEntities",
    "marketplacecatalog.startchangeset": "aws-marketplace:StartChangeSet",
    "marketplacecommerceanalytics.generatedataset": "marketplacecommerceanalytics:GenerateDataSet",
    "marketplacecommerceanalytics.startsupportdataexport": "marketplacecommerceanalytics:StartSupportDataExport",
    "marketplaceentitlementservice.getentitlements": "aws-marketplace:GetEntitlements",
    "marketplacemetering.batchmeterusage": "aws-marketplace:BatchMeterUsage",
    "marketplacemetering.meterusage": "aws-marketplace:MeterUsage",
    "marketplacemetering.registerusage": "aws-marketplace:RegisterUsage",
    "marketplacemetering.resolvecustomer": "aws-marketplace:ResolveCustomer",
    "mediaconnect.addflowmediastreams": "mediaconnect:AddFlowMediaStreams",
    "mediaconnect.addflowoutputs": "mediaconnect:AddFlowOutputs",
    "mediaconnect.addflowsources": "mediaconnect:AddFlowSources",
    "mediaconnect.addflowvpcinterfaces": "mediaconnect:AddFlowVpcInterfaces",
    "mediaconnect.createflow": "mediaconnect:CreateFlow",
    "mediaconnect.deleteflow": "mediaconnect:DeleteFlow",
    "mediaconnect.describeflow": "mediaconnect:DescribeFlow",
    "mediaconnect.describeoffering": "mediaconnect:DescribeOffering",
    "mediaconnect.describereservation": "mediaconnect:DescribeReservation",
    "mediaconnect.grantflowentitlements": "mediaconnect:GrantFlowEntitlements",
    "mediaconnect.listentitlements": "mediaconnect:ListEntitlements",
    "mediaconnect.listflows": "mediaconnect:ListFlows",
    "mediaconnect.listofferings": "mediaconnect:ListOfferings",
    "mediaconnect.listreservations": "mediaconnect:ListReservations",
    "mediaconnect.listtagsforresource": "mediaconnect:ListTagsForResource",
    "mediaconnect.purchaseoffering": "mediaconnect:PurchaseOffering",
    "mediaconnect.removeflowmediastream": "mediaconnect:RemoveFlowMediaStream",
    "mediaconnect.removeflowoutput": "mediaconnect:RemoveFlowOutput",
    "mediaconnect.removeflowsource": "mediaconnect:RemoveFlowSource",
    "mediaconnect.removeflowvpcinterface": "mediaconnect:RemoveFlowVpcInterface",
    "mediaconnect.revokeflowentitlement": "mediaconnect:RevokeFlowEntitlement",
    "mediaconnect.startflow": "mediaconnect:StartFlow",
    "mediaconnect.stopflow": "mediaconnect:StopFlow",
    "mediaconnect.tagresource": "mediaconnect:TagResource",
    "mediaconnect.untagresource": "mediaconnect:UntagResource",
    "mediaconnect.updateflow": "mediaconnect:UpdateFlow",
    "mediaconnect.updateflowentitlement": "mediaconnect:UpdateFlowEntitlement",
    "mediaconnect.updateflowmediastream": "mediaconnect:UpdateFlowMediaStream",
    "mediaconnect.updateflowoutput": "mediaconnect:UpdateFlowOutput",
    "mediaconnect.updateflowsource": "mediaconnect:UpdateFlowSource",
    "mediaconvert.associatecertificate": "mediaconvert:AssociateCertificate",
    "mediaconvert.canceljob": "mediaconvert:CancelJob",
    "mediaconvert.createjob": "mediaconvert:CreateJob",
    "mediaconvert.createjobtemplate": "mediaconvert:CreateJobTemplate",
    "mediaconvert.createpreset": "mediaconvert:CreatePreset",
    "mediaconvert.createqueue": "mediaconvert:CreateQueue",
    "mediaconvert.deletejobtemplate": "mediaconvert:DeleteJobTemplate",
    "mediaconvert.deletepolicy": "mediaconvert:DeletePolicy",
    "mediaconvert.deletepreset": "mediaconvert:DeletePreset",
    "mediaconvert.deletequeue": "mediaconvert:DeleteQueue",
    "mediaconvert.describeendpoints": "mediaconvert:DescribeEndpoints",
    "mediaconvert.disassociatecertificate": "mediaconvert:DisassociateCertificate",
    "mediaconvert.getjob": "mediaconvert:GetJob",
    "mediaconvert.getjobtemplate": "mediaconvert:GetJobTemplate",
    "mediaconvert.getpolicy": "mediaconvert:GetPolicy",
    "mediaconvert.getpreset": "mediaconvert:GetPreset",
    "mediaconvert.getqueue": "mediaconvert:GetQueue",
    "mediaconvert.listjobs": "mediaconvert:ListJobs",
    "mediaconvert.listjobtemplates": "mediaconvert:ListJobTemplates",
    "mediaconvert.listpresets": "mediaconvert:ListPresets",
    "mediaconvert.listqueues": "mediaconvert:ListQueues",
    "mediaconvert.listtagsforresource": "mediaconvert:ListTagsForResource",
    "mediaconvert.putpolicy": "mediaconvert:PutPolicy",
    "mediaconvert.tagresource": "mediaconvert:TagResource",
    "mediaconvert.untagresource": "mediaconvert:UntagResource",
    "mediaconvert.updatejobtemplate": "mediaconvert:UpdateJobTemplate",
    "mediaconvert.updatepreset": "mediaconvert:UpdatePreset",
    "mediaconvert.updatequeue": "mediaconvert:UpdateQueue",
    "medialive.acceptinputdevicetransfer": "medialive:AcceptInputDeviceTransfer",
    "medialive.batchdelete": "medialive:BatchDelete",
    "medialive.batchstart": "medialive:BatchStart",
    "medialive.batchstop": "medialive:BatchStop",
    "medialive.batchupdateschedule": "medialive:BatchUpdateSchedule",
    "medialive.cancelinputdevicetransfer": "medialive:CancelInputDeviceTransfer",
    "medialive.claimdevice": "medialive:ClaimDevice",
    "medialive.createchannel": "medialive:CreateChannel",
    "medialive.createinput": "medialive:CreateInput",
    "medialive.createinputsecuritygroup": "medialive:CreateInputSecurityGroup",
    "medialive.createmultiplex": "medialive:CreateMultiplex",
    "medialive.createmultiplexprogram": "medialive:CreateMultiplexProgram",
    "medialive.createpartnerinput": "medialive:CreatePartnerInput",
    "medialive.createtags": "medialive:CreateTags",
    "medialive.deletechannel": "medialive:DeleteChannel",
    "medialive.deleteinput": "medialive:DeleteInput",
    "medialive.deleteinputsecuritygroup": "medialive:DeleteInputSecurityGroup",
    "medialive.deletemultiplex": "medialive:DeleteMultiplex",
    "medialive.deletemultiplexprogram": "medialive:DeleteMultiplexProgram",
    "medialive.deletereservation": "medialive:DeleteReservation",
    "medialive.deleteschedule": "medialive:DeleteSchedule",
    "medialive.deletetags": "medialive:DeleteTags",
    "medialive.describechannel": "medialive:DescribeChannel",
    "medialive.describeinput": "medialive:DescribeInput",
    "medialive.describeinputdevice": "medialive:DescribeInputDevice",
    "medialive.describeinputdevicethumbnail": "medialive:DescribeInputDeviceThumbnail",
    "medialive.describeinputsecuritygroup": "medialive:DescribeInputSecurityGroup",
    "medialive.describemultiplex": "medialive:DescribeMultiplex",
    "medialive.describemultiplexprogram": "medialive:DescribeMultiplexProgram",
    "medialive.describeoffering": "medialive:DescribeOffering",
    "medialive.describereservation": "medialive:DescribeReservation",
    "medialive.describeschedule": "medialive:DescribeSchedule",
    "medialive.listchannels": "medialive:ListChannels",
    "medialive.listinputdevices": "medialive:ListInputDevices",
    "medialive.listinputdevicetransfers": "medialive:ListInputDeviceTransfers",
    "medialive.listinputs": "medialive:ListInputs",
    "medialive.listinputsecuritygroups": "medialive:ListInputSecurityGroups",
    "medialive.listmultiplexes": "medialive:ListMultiplexes",
    "medialive.listmultiplexprograms": "medialive:ListMultiplexPrograms",
    "medialive.listofferings": "medialive:ListOfferings",
    "medialive.listreservations": "medialive:ListReservations",
    "medialive.listtagsforresource": "medialive:ListTagsForResource",
    "medialive.purchaseoffering": "medialive:PurchaseOffering",
    "medialive.rejectinputdevicetransfer": "medialive:RejectInputDeviceTransfer",
    "medialive.startchannel": "medialive:StartChannel",
    "medialive.startmultiplex": "medialive:StartMultiplex",
    "medialive.stopchannel": "medialive:StopChannel",
    "medialive.stopmultiplex": "medialive:StopMultiplex",
    "medialive.transferinputdevice": "medialive:TransferInputDevice",
    "medialive.updatechannel": "medialive:UpdateChannel",
    "medialive.updatechannelclass": "medialive:UpdateChannelClass",
    "medialive.updateinput": "medialive:UpdateInput",
    "medialive.updateinputdevice": "medialive:UpdateInputDevice",
    "medialive.updateinputsecuritygroup": "medialive:UpdateInputSecurityGroup",
    "medialive.updatemultiplex": "medialive:UpdateMultiplex",
    "medialive.updatemultiplexprogram": "medialive:UpdateMultiplexProgram",
    "medialive.updatereservation": "medialive:UpdateReservation",
    "mediapackage.configurelogs": "mediapackage:UpdateChannel",
    "mediapackage.createchannel": "mediapackage:CreateChannel",
    "mediapackage.createharvestjob": "mediapackage:CreateHarvestJob",
    "mediapackage.createoriginendpoint": "mediapackage:CreateOriginEndpoint",
    "mediapackage.deletechannel": "mediapackage:DeleteChannel",
    "mediapackage.deleteoriginendpoint": "mediapackage:DeleteOriginEndpoint",
    "mediapackage.describechannel": "mediapackage:DescribeChannel",
    "mediapackage.describeharvestjob": "mediapackage:DescribeHarvestJob",
    "mediapackage.describeoriginendpoint": "mediapackage:DescribeOriginEndpoint",
    "mediapackage.listchannels": "mediapackage:ListChannels",
    "mediapackage.listharvestjobs": "mediapackage:ListHarvestJobs",
    "mediapackage.listoriginendpoints": "mediapackage:ListOriginEndpoints",
    "mediapackage.listtagsforresource": "mediapackage:ListTagsForResource",
    "mediapackage.rotatechannelcredentials": "mediapackage:RotateChannelCredentials",
    "mediapackage.rotateingestendpointcredentials": "mediapackage:RotateIngestEndpointCredentials",
    "mediapackage.tagresource": "mediapackage:TagResource",
    "mediapackage.untagresource": "mediapackage:UntagResource",
    "mediapackage.updatechannel": "mediapackage:UpdateChannel",
    "mediapackage.updateoriginendpoint": "mediapackage:UpdateOriginEndpoint",
    "mediapackagevod.configurelogs": "mediapackage-vod:ConfigureLogs",
    "mediapackagevod.createasset": "mediapackage-vod:CreateAsset",
    "mediapackagevod.createpackagingconfiguration": "mediapackage-vod:CreatePackagingConfiguration",
    "mediapackagevod.createpackaginggroup": "mediapackage-vod:CreatePackagingGroup",
    "mediapackagevod.deleteasset": "mediapackage-vod:DeleteAsset",
    "mediapackagevod.deletepackagingconfiguration": "mediapackage-vod:DeletePackagingConfiguration",
    "mediapackagevod.deletepackaginggroup": "mediapackage-vod:DeletePackagingGroup",
    "mediapackagevod.describeasset": "mediapackage-vod:DescribeAsset",
    "mediapackagevod.describepackagingconfiguration": "mediapackage-vod:DescribePackagingConfiguration",
    "mediapackagevod.describepackaginggroup": "mediapackage-vod:DescribePackagingGroup",
    "mediapackagevod.listassets": "mediapackage-vod:ListAssets",
    "mediapackagevod.listpackagingconfigurations": "mediapackage-vod:ListPackagingConfigurations",
    "mediapackagevod.listpackaginggroups": "mediapackage-vod:ListPackagingGroups",
    "mediapackagevod.listtagsforresource": "mediapackage-vod:ListTagsForResource",
    "mediapackagevod.tagresource": "mediapackage-vod:TagResource",
    "mediapackagevod.untagresource": "mediapackage-vod:UntagResource",
    "mediapackagevod.updatepackaginggroup": "mediapackage-vod:UpdatePackagingGroup",
    "mediastore.createcontainer": "mediastore:CreateContainer",
    "mediastore.deletecontainer": "mediastore:DeleteContainer",
    "mediastore.deletecontainerpolicy": "mediastore:DeleteContainerPolicy",
    "mediastore.deletecorspolicy": "mediastore:DeleteCorsPolicy",
    "mediastore.deletelifecyclepolicy": "mediastore:DeleteLifecyclePolicy",
    "mediastore.deletemetricpolicy": "mediastore:DeleteMetricPolicy",
    "mediastore.describecontainer": "mediastore:DescribeContainer",
    "mediastore.getcontainerpolicy": "mediastore:GetContainerPolicy",
    "mediastore.getcorspolicy": "mediastore:GetCorsPolicy",
    "mediastore.getlifecyclepolicy": "mediastore:GetLifecyclePolicy",
    "mediastore.getmetricpolicy": "mediastore:GetMetricPolicy",
    "mediastore.listcontainers": "mediastore:ListContainers",
    "mediastore.listtagsforresource": "mediastore:ListTagsForResource",
    "mediastore.putcontainerpolicy": "mediastore:PutContainerPolicy",
    "mediastore.putcorspolicy": "mediastore:PutCorsPolicy",
    "mediastore.putlifecyclepolicy": "mediastore:PutLifecyclePolicy",
    "mediastore.putmetricpolicy": "mediastore:PutMetricPolicy",
    "mediastore.startaccesslogging": "mediastore:StartAccessLogging",
    "mediastore.stopaccesslogging": "mediastore:StopAccessLogging",
    "mediastore.tagresource": "mediastore:TagResource",
    "mediastore.untagresource": "mediastore:UntagResource",
    "mediastoredata.deleteobject": "mediastore:DeleteObject",
    "mediastoredata.describeobject": "mediastore:DescribeObject",
    "mediastoredata.getobject": "mediastore:GetObject",
    "mediastoredata.listitems": "mediastore:ListItems",
    "mediastoredata.putobject": "mediastore:PutObject",
    "mediatailor.configurelogsforplaybackconfiguration": "mediatailor:ConfigureLogsForPlaybackConfiguration",
    "mediatailor.createchannel": "mediatailor:CreateChannel",
    "mediatailor.createlivesource": "mediatailor:CreateLiveSource",
    "mediatailor.createprefetchschedule": "mediatailor:CreatePrefetchSchedule",
    "mediatailor.createprogram": "mediatailor:CreateProgram",
    "mediatailor.createsourcelocation": "mediatailor:CreateSourceLocation",
    "mediatailor.createvodsource": "mediatailor:CreateVodSource",
    "mediatailor.deletechannel": "mediatailor:DeleteChannel",
    "mediatailor.deletechannelpolicy": "mediatailor:DeleteChannelPolicy",
    "mediatailor.deletelivesource": "mediatailor:DeleteLiveSource",
    "mediatailor.deleteplaybackconfiguration": "mediatailor:DeletePlaybackConfiguration",
    "mediatailor.deleteprefetchschedule": "mediatailor:DeletePrefetchSchedule",
    "mediatailor.deleteprogram": "mediatailor:DeleteProgram",
    "mediatailor.deletesourcelocation": "mediatailor:DeleteSourceLocation",
    "mediatailor.deletevodsource": "mediatailor:DeleteVodSource",
    "mediatailor.describechannel": "mediatailor:DescribeChannel",
    "mediatailor.describelivesource": "mediatailor:DescribeLiveSource",
    "mediatailor.describeprogram": "mediatailor:DescribeProgram",
    "mediatailor.describesourcelocation": "mediatailor:DescribeSourceLocation",
    "mediatailor.describevodsource": "mediatailor:DescribeVodSource",
    "mediatailor.getchannelpolicy": "mediatailor:GetChannelPolicy",
    "mediatailor.getchannelschedule": "mediatailor:GetChannelSchedule",
    "mediatailor.getplaybackconfiguration": "mediatailor:GetPlaybackConfiguration",
    "mediatailor.getprefetchschedule": "mediatailor:GetPrefetchSchedule",
    "mediatailor.listalerts": "mediatailor:ListAlerts",
    "mediatailor.listchannels": "mediatailor:ListChannels",
    "mediatailor.listlivesources": "mediatailor:ListLiveSources",
    "mediatailor.listplaybackconfigurations": "mediatailor:ListPlaybackConfigurations",
    "mediatailor.listprefetchschedules": "mediatailor:ListPrefetchSchedules",
    "mediatailor.listsourcelocations": "mediatailor:ListSourceLocations",
    "mediatailor.listtagsforresource": "mediatailor:ListTagsForResource",
    "mediatailor.listvodsources": "mediatailor:ListVodSources",
    "mediatailor.putchannelpolicy": "mediatailor:PutChannelPolicy",
    "mediatailor.putplaybackconfiguration": "mediatailor:PutPlaybackConfiguration",
    "mediatailor.startchannel": "mediatailor:StartChannel",
    "mediatailor.stopchannel": "mediatailor:StopChannel",
    "mediatailor.tagresource": "mediatailor:TagResource",
    "mediatailor.untagresource": "mediatailor:UntagResource",
    "mediatailor.updatechannel": "mediatailor:UpdateChannel",
    "mediatailor.updatelivesource": "mediatailor:UpdateLiveSource",
    "mediatailor.updatesourcelocation": "mediatailor:UpdateSourceLocation",
    "mediatailor.updatevodsource": "mediatailor:UpdateVodSource",
    "memorydb.batchupdatecluster": "memorydb:BatchUpdateCluster",
    "memorydb.copysnapshot": "memorydb:CopySnapshot",
    "memorydb.createacl": "memorydb:CreateAcl",
    "memorydb.createcluster": "memorydb:CreateCluster",
    "memorydb.createparametergroup": "memorydb:CreateParameterGroup",
    "memorydb.createsnapshot": "memorydb:CreateSnapshot",
    "memorydb.createsubnetgroup": "memorydb:CreateSubnetGroup",
    "memorydb.createuser": "memorydb:CreateUser",
    "memorydb.deleteacl": "memorydb:DeleteAcl",
    "memorydb.deletecluster": "memorydb:DeleteCluster",
    "memorydb.deleteparametergroup": "memorydb:DeleteParameterGroup",
    "memorydb.deletesnapshot": "memorydb:DeleteSnapshot",
    "memorydb.deletesubnetgroup": "memorydb:DeleteSubnetGroup",
    "memorydb.deleteuser": "memorydb:DeleteUser",
    "memorydb.describeacls": "memorydb:DescribeAcls",
    "memorydb.describeclusters": "memorydb:DescribeClusters",
    "memorydb.describeengineversions": "memorydb:DescribeEngineVersions",
    "memorydb.describeevents": "memorydb:DescribeEvents",
    "memorydb.describeparametergroups": "memorydb:DescribeParameterGroups",
    "memorydb.describeparameters": "memorydb:DescribeParameters",
    "memorydb.describeserviceupdates": "memorydb:DescribeServiceUpdates",
    "memorydb.describesnapshots": "memorydb:DescribeSnapshots",
    "memorydb.describesubnetgroups": "memorydb:DescribeSubnetGroups",
    "memorydb.describeusers": "memorydb:DescribeUsers",
    "memorydb.failovershard": "memorydb:FailoverShard",
    "memorydb.listallowednodetypeupdates": "memorydb:ListAllowedNodeTypeUpdates",
    "memorydb.listtags": "memorydb:ListTags",
    "memorydb.resetparametergroup": "memorydb:ResetParameterGroup",
    "memorydb.tagresource": "memorydb:TagResource",
    "memorydb.untagresource": "memorydb:UntagResource",
    "memorydb.updateacl": "memorydb:UpdateAcl",
    "memorydb.updatecluster": "memorydb:UpdateCluster",
    "memorydb.updateparametergroup": "memorydb:UpdateParameterGroup",
    "memorydb.updatesubnetgroup": "memorydb:UpdateSubnetGroup",
    "memorydb.updateuser": "memorydb:UpdateUser",
    "mgn.changeserverlifecyclestate": "mgn:ChangeServerLifeCycleState",
    "mgn.createlaunchconfigurationtemplate": "mgn:CreateLaunchConfigurationTemplate",
    "mgn.createreplicationconfigurationtemplate": "mgn:CreateReplicationConfigurationTemplate",
    "mgn.deletejob": "mgn:DeleteJob",
    "mgn.deletelaunchconfigurationtemplate": "mgn:DeleteLaunchConfigurationTemplate",
    "mgn.deletereplicationconfigurationtemplate": "mgn:DeleteReplicationConfigurationTemplate",
    "mgn.deletesourceserver": "mgn:DeleteSourceServer",
    "mgn.deletevcenterclient": "mgn:DeleteVcenterClient",
    "mgn.describejoblogitems": "mgn:DescribeJobLogItems",
    "mgn.describejobs": "mgn:DescribeJobs",
    "mgn.describelaunchconfigurationtemplates": "mgn:DescribeLaunchConfigurationTemplates",
    "mgn.describereplicationconfigurationtemplates": "mgn:DescribeReplicationConfigurationTemplates",
    "mgn.describesourceservers": "mgn:DescribeSourceServers",
    "mgn.describevcenterclients": "mgn:DescribeVcenterClients",
    "mgn.disconnectfromservice": "mgn:DisconnectFromService",
    "mgn.finalizecutover": "mgn:FinalizeCutover",
    "mgn.getlaunchconfiguration": "mgn:GetLaunchConfiguration",
    "mgn.getreplicationconfiguration": "mgn:GetReplicationConfiguration",
    "mgn.initializeservice": "mgn:InitializeService",
    "mgn.listtagsforresource": "mgn:ListTagsForResource",
    "mgn.markasarchived": "mgn:MarkAsArchived",
    "mgn.retrydatareplication": "mgn:RetryDataReplication",
    "mgn.startcutover": "mgn:StartCutover",
    "mgn.startreplication": "mgn:StartReplication",
    "mgn.starttest": "mgn:StartTest",
    "mgn.tagresource": "mgn:TagResource",
    "mgn.terminatetargetinstances": "mgn:TerminateTargetInstances",
    "mgn.untagresource": "mgn:UntagResource",
    "mgn.updatelaunchconfiguration": "mgn:UpdateLaunchConfiguration",
    "mgn.updatelaunchconfigurationtemplate": "mgn:UpdateLaunchConfigurationTemplate",
    "mgn.updatereplicationconfiguration": "mgn:UpdateReplicationConfiguration",
    "mgn.updatereplicationconfigurationtemplate": "mgn:UpdateReplicationConfigurationTemplate",
    "mgn.updatesourceserverreplicationtype": "mgn:UpdateSourceServerReplicationType",
    "migrationhub.associatecreatedartifact": "mgh:AssociateCreatedArtifact",
    "migrationhub.associatediscoveredresource": "mgh:AssociateDiscoveredResource",
    "migrationhub.createprogressupdatestream": "mgh:CreateProgressUpdateStream",
    "migrationhub.deleteprogressupdatestream": "mgh:DeleteProgressUpdateStream",
    "migrationhub.describeapplicationstate": "mgh:DescribeApplicationState",
    "migrationhub.describemigrationtask": "mgh:DescribeMigrationTask",
    "migrationhub.disassociatecreatedartifact": "mgh:DisassociateCreatedArtifact",
    "migrationhub.disassociatediscoveredresource": "mgh:DisassociateDiscoveredResource",
    "migrationhub.importmigrationtask": "mgh:ImportMigrationTask",
    "migrationhub.listapplicationstates": "mgh:ListApplicationStates",
    "migrationhub.listcreatedartifacts": "mgh:ListCreatedArtifacts",
    "migrationhub.listdiscoveredresources": "mgh:ListDiscoveredResources",
    "migrationhub.listmigrationtasks": "mgh:ListMigrationTasks",
    "migrationhub.listprogressupdatestreams": "mgh:ListProgressUpdateStreams",
    "migrationhub.notifyapplicationstate": "mgh:NotifyApplicationState",
    "migrationhub.notifymigrationtaskstate": "mgh:NotifyMigrationTaskState",
    "migrationhub.putresourceattributes": "mgh:PutResourceAttributes",
    "migrationhubconfig.createhomeregioncontrol": "mgh:CreateHomeRegionControl",
    "migrationhubconfig.describehomeregioncontrols": "mgh:DescribeHomeRegionControls",
    "migrationhubconfig.gethomeregion": "mgh:GetHomeRegion",
    "migrationhubrefactorspaces.createapplication": "refactor-spaces:CreateApplication",
    "migrationhubrefactorspaces.createenvironment": "refactor-spaces:CreateEnvironment",
    "migrationhubrefactorspaces.createroute": "refactor-spaces:CreateRoute",
    "migrationhubrefactorspaces.createservice": "refactor-spaces:CreateService",
    "migrationhubrefactorspaces.deleteapplication": "refactor-spaces:DeleteApplication",
    "migrationhubrefactorspaces.deleteenvironment": "refactor-spaces:DeleteEnvironment",
    "migrationhubrefactorspaces.deleteresourcepolicy": "refactor-spaces:DeleteResourcePolicy",
    "migrationhubrefactorspaces.deleteroute": "refactor-spaces:DeleteRoute",
    "migrationhubrefactorspaces.deleteservice": "refactor-spaces:DeleteService",
    "migrationhubrefactorspaces.getapplication": "refactor-spaces:GetApplication",
    "migrationhubrefactorspaces.getenvironment": "refactor-spaces:GetEnvironment",
    "migrationhubrefactorspaces.getresourcepolicy": "refactor-spaces:GetResourcePolicy",
    "migrationhubrefactorspaces.getroute": "refactor-spaces:GetRoute",
    "migrationhubrefactorspaces.getservice": "refactor-spaces:GetService",
    "migrationhubrefactorspaces.listapplications": "refactor-spaces:ListApplications",
    "migrationhubrefactorspaces.listenvironments": "refactor-spaces:ListEnvironments",
    "migrationhubrefactorspaces.listenvironmentvpcs": "refactor-spaces:ListEnvironmentVpcs",
    "migrationhubrefactorspaces.listroutes": "refactor-spaces:ListRoutes",
    "migrationhubrefactorspaces.listservices": "refactor-spaces:ListServices",
    "migrationhubrefactorspaces.listtagsforresource": "refactor-spaces:ListTagsForResource",
    "migrationhubrefactorspaces.putresourcepolicy": "refactor-spaces:PutResourcePolicy",
    "migrationhubrefactorspaces.tagresource": "refactor-spaces:TagResource",
    "migrationhubrefactorspaces.untagresource": "refactor-spaces:UntagResource",
    "migrationhubrefactorspaces.updateroute": "refactor-spaces:UpdateRoute",
    "migrationhubstrategy.getapplicationcomponentdetails": "migrationhub-strategy:GetApplicationComponentDetails",
    "migrationhubstrategy.getapplicationcomponentstrategies": "migrationhub-strategy:GetApplicationComponentStrategies",
    "migrationhubstrategy.getassessment": "migrationhub-strategy:GetAssessment",
    "migrationhubstrategy.getimportfiletask": "migrationhub-strategy:GetImportFileTask",
    "migrationhubstrategy.getportfoliopreferences": "migrationhub-strategy:GetPortfolioPreferences",
    "migrationhubstrategy.getportfoliosummary": "migrationhub-strategy:GetPortfolioSummary",
    "migrationhubstrategy.getrecommendationreportdetails": "migrationhub-strategy:GetRecommendationReportDetails",
    "migrationhubstrategy.getserverdetails": "migrationhub-strategy:GetServerDetails",
    "migrationhubstrategy.getserverstrategies": "migrationhub-strategy:GetServerStrategies",
    "migrationhubstrategy.listapplicationcomponents": "migrationhub-strategy:ListApplicationComponents",
    "migrationhubstrategy.listcollectors": "migrationhub-strategy:ListCollectors",
    "migrationhubstrategy.listimportfiletask": "migrationhub-strategy:ListImportFileTask",
    "migrationhubstrategy.listservers": "migrationhub-strategy:ListServers",
    "migrationhubstrategy.putportfoliopreferences": "migrationhub-strategy:PutPortfolioPreferences",
    "migrationhubstrategy.startassessment": "migrationhub-strategy:StartAssessment",
    "migrationhubstrategy.startimportfiletask": "migrationhub-strategy:StartImportFileTask",
    "migrationhubstrategy.startrecommendationreportgeneration": "migrationhub-strategy:StartRecommendationReportGeneration",
    "migrationhubstrategy.stopassessment": "migrationhub-strategy:StopAssessment",
    "migrationhubstrategy.updateapplicationcomponentconfig": "migrationhub-strategy:UpdateApplicationComponentConfig",
    "migrationhubstrategy.updateserverconfig": "migrationhub-strategy:UpdateServerConfig",
    "mobile.createproject": "mobilehub:CreateProject",
    "mobile.deleteproject": "mobilehub:DeleteProject",
    "mobile.describebundle": "mobilehub:DescribeBundle",
    "mobile.describeproject": "mobilehub:GetProject",
    "mobile.exportbundle": "mobilehub:ExportBundle",
    "mobile.exportproject": "mobilehub:ExportProject",
    "mobile.listbundles": "mobilehub:ListBundles",
    "mobile.listprojects": "mobilehub:ListProjects",
    "mobile.updateproject": "mobilehub:UpdateProject",
    "mobileanalytics.putevents": "mobileanalytics:PutEvents",
    "mq.createbroker": "mq:CreateBroker",
    "mq.createconfiguration": "mq:CreateConfiguration",
    "mq.createtags": "mq:CreateTags",
    "mq.createuser": "mq:CreateUser",
    "mq.deletebroker": "mq:DeleteBroker",
    "mq.deletetags": "mq:DeleteTags",
    "mq.deleteuser": "mq:DeleteUser",
    "mq.describebroker": "mq:DescribeBroker",
    "mq.describebrokerenginetypes": "mq:DescribeBrokerEngineTypes",
    "mq.describebrokerinstanceoptions": "mq:DescribeBrokerInstanceOptions",
    "mq.describeconfiguration": "mq:DescribeConfiguration",
    "mq.describeconfigurationrevision": "mq:DescribeConfigurationRevision",
    "mq.describeuser": "mq:DescribeUser",
    "mq.listbrokers": "mq:ListBrokers",
    "mq.listconfigurationrevisions": "mq:ListConfigurationRevisions",
    "mq.listconfigurations": "mq:ListConfigurations",
    "mq.listtags": "mq:ListTags",
    "mq.listusers": "mq:ListUsers",
    "mq.rebootbroker": "mq:RebootBroker",
    "mq.updatebroker": "mq:UpdateBroker",
    "mq.updateconfiguration": "mq:UpdateConfiguration",
    "mq.updateuser": "mq:UpdateUser",
    "mturk.acceptqualificationrequest": "mechanicalturk:AcceptQualificationRequest",
    "mturk.approveassignment": "mechanicalturk:ApproveAssignment",
    "mturk.associatequalificationwithworker": "mechanicalturk:AssociateQualificationWithWorker",
    "mturk.createadditionalassignmentsforhit": "mechanicalturk:CreateAdditionalAssignmentsForHIT",
    "mturk.createhit": "mechanicalturk:CreateHIT",
    "mturk.createhittype": "mechanicalturk:CreateHITType",
    "mturk.createhitwithhittype": "mechanicalturk:CreateHITWithHITType",
    "mturk.createqualificationtype": "mechanicalturk:CreateQualificationType",
    "mturk.createworkerblock": "mechanicalturk:CreateWorkerBlock",
    "mturk.deletehit": "mechanicalturk:DeleteHIT",
    "mturk.deletequalificationtype": "mechanicalturk:DeleteQualificationType",
    "mturk.deleteworkerblock": "mechanicalturk:DeleteWorkerBlock",
    "mturk.disassociatequalificationfromworker": "mechanicalturk:DisassociateQualificationFromWorker",
    "mturk.getaccountbalance": "mechanicalturk:GetAccountBalance",
    "mturk.getassignment": "mechanicalturk:GetAssignment",
    "mturk.getfileuploadurl": "mechanicalturk:GetFileUploadURL",
    "mturk.gethit": "mechanicalturk:GetHIT",
    "mturk.getqualificationscore": "mechanicalturk:GetQualificationScore",
    "mturk.getqualificationtype": "mechanicalturk:GetQualificationType",
    "mturk.listassignmentsforhit": "mechanicalturk:ListAssignmentsForHIT",
    "mturk.listbonuspayments": "mechanicalturk:ListBonusPayments",
    "mturk.listhits": "mechanicalturk:ListHITs",
    "mturk.listhitsforqualificationtype": "mechanicalturk:ListHITsForQualificationType",
    "mturk.listqualificationrequests": "mechanicalturk:ListQualificationRequests",
    "mturk.listqualificationtypes": "mechanicalturk:ListQualificationTypes",
    "mturk.listreviewablehits": "mechanicalturk:ListReviewableHITs",
    "mturk.listreviewpolicyresultsforhit": "mechanicalturk:ListReviewPolicyResultsForHIT",
    "mturk.listworkerblocks": "mechanicalturk:ListWorkerBlocks",
    "mturk.listworkerswithqualificationtype": "mechanicalturk:ListWorkersWithQualificationType",
    "mturk.notifyworkers": "mechanicalturk:NotifyWorkers",
    "mturk.rejectassignment": "mechanicalturk:RejectAssignment",
    "mturk.rejectqualificationrequest": "mechanicalturk:RejectQualificationRequest",
    "mturk.sendbonus": "mechanicalturk:SendBonus",
    "mturk.sendtesteventnotification": "mechanicalturk:SendTestEventNotification",
    "mturk.updateexpirationforhit": "mechanicalturk:UpdateExpirationForHIT",
    "mturk.updatehitreviewstatus": "mechanicalturk:UpdateHITReviewStatus",
    "mturk.updatehittypeofhit": "mechanicalturk:UpdateHITTypeOfHIT",
    "mturk.updatenotificationsettings": "mechanicalturk:UpdateNotificationSettings",
    "mturk.updatequalificationtype": "mechanicalturk:UpdateQualificationType",
    "mwaa.createclitoken": "airflow:CreateCliToken",
    "mwaa.createenvironment": "airflow:CreateEnvironment",
    "mwaa.createweblogintoken": "airflow:CreateWebLoginToken",
    "mwaa.deleteenvironment": "airflow:DeleteEnvironment",
    "mwaa.getenvironment": "airflow:GetEnvironment",
    "mwaa.listenvironments": "airflow:ListEnvironments",
    "mwaa.listtagsforresource": "airflow:ListTagsForResource",
    "mwaa.publishmetrics": "airflow:PublishMetrics",
    "mwaa.tagresource": "airflow:TagResource",
    "mwaa.untagresource": "airflow:UntagResource",
    "mwaa.updateenvironment": "airflow:UpdateEnvironment",
    "neptune.addroletodbcluster": "rds:AddRoleToDBCluster",
    "neptune.addsourceidentifiertosubscription": "rds:AddSourceIdentifierToSubscription",
    "neptune.addtagstoresource": "rds:AddTagsToResource",
    "neptune.applypendingmaintenanceaction": "rds:ApplyPendingMaintenanceAction",
    "neptune.copydbclusterparametergroup": "rds:CopyDBClusterParameterGroup",
    "neptune.copydbclustersnapshot": "rds:CopyDBClusterSnapshot",
    "neptune.copydbparametergroup": "rds:CopyDBParameterGroup",
    "neptune.createdbcluster": "rds:CreateDBCluster",
    "neptune.createdbclusterendpoint": "rds:CreateDBClusterEndpoint",
    "neptune.createdbclusterparametergroup": "rds:CreateDBClusterParameterGroup",
    "neptune.createdbclustersnapshot": "rds:CreateDBClusterSnapshot",
    "neptune.createdbinstance": "rds:CreateDBInstance",
    "neptune.createdbparametergroup": "rds:CreateDBParameterGroup",
    "neptune.createdbsubnetgroup": "rds:CreateDBSubnetGroup",
    "neptune.createeventsubscription": "rds:CreateEventSubscription",
    "neptune.createglobalcluster": "rds:CreateGlobalCluster",
    "neptune.deletedbcluster": "rds:DeleteDBCluster",
    "neptune.deletedbclusterendpoint": "rds:DeleteDBClusterEndpoint",
    "neptune.deletedbclusterparametergroup": "rds:DeleteDBClusterParameterGroup",
    "neptune.deletedbclustersnapshot": "rds:DeleteDBClusterSnapshot",
    "neptune.deletedbinstance": "rds:DeleteDBInstance",
    "neptune.deletedbparametergroup": "rds:DeleteDBParameterGroup",
    "neptune.deletedbsubnetgroup": "rds:DeleteDBSubnetGroup",
    "neptune.deleteeventsubscription": "rds:DeleteEventSubscription",
    "neptune.deleteglobalcluster": "rds:DeleteGlobalCluster",
    "neptune.describedbclusterendpoints": "rds:DescribeDBClusterEndpoints",
    "neptune.describedbclusterparametergroups": "rds:DescribeDBClusterParameterGroups",
    "neptune.describedbclusterparameters": "rds:DescribeDBClusterParameters",
    "neptune.describedbclusters": "rds:DescribeDBClusters",
    "neptune.describedbclustersnapshotattributes": "rds:DescribeDBClusterSnapshotAttributes",
    "neptune.describedbclustersnapshots": "rds:DescribeDBClusterSnapshots",
    "neptune.describedbengineversions": "rds:DescribeDBEngineVersions",
    "neptune.describedbinstances": "rds:DescribeDBInstances",
    "neptune.describedbparametergroups": "rds:DescribeDBParameterGroups",
    "neptune.describedbparameters": "rds:DescribeDBParameters",
    "neptune.describedbsubnetgroups": "rds:DescribeDBSubnetGroups",
    "neptune.describeenginedefaultclusterparameters": "rds:DescribeEngineDefaultClusterParameters",
    "neptune.describeenginedefaultparameters": "rds:DescribeEngineDefaultParameters",
    "neptune.describeeventcategories": "rds:DescribeEventCategories",
    "neptune.describeevents": "rds:DescribeEvents",
    "neptune.describeeventsubscriptions": "rds:DescribeEventSubscriptions",
    "neptune.describeglobalclusters": "rds:DescribeGlobalClusters",
    "neptune.describeorderabledbinstanceoptions": "rds:DescribeOrderableDBInstanceOptions",
    "neptune.describependingmaintenanceactions": "rds:DescribePendingMaintenanceActions",
    "neptune.describevaliddbinstancemodifications": "rds:DescribeValidDBInstanceModifications",
    "neptune.failoverdbcluster": "rds:FailoverDBCluster",
    "neptune.failoverglobalcluster": "rds:FailoverGlobalCluster",
    "neptune.listtagsforresource": "rds:ListTagsForResource",
    "neptune.modifydbcluster": "rds:ModifyDBCluster",
    "neptune.modifydbclusterendpoint": "rds:ModifyDBClusterEndpoint",
    "neptune.modifydbclusterparametergroup": "rds:ModifyDBClusterParameterGroup",
    "neptune.modifydbclustersnapshotattribute": "rds:ModifyDBClusterSnapshotAttribute",
    "neptune.modifydbinstance": "rds:ModifyDBInstance",
    "neptune.modifydbparametergroup": "rds:ModifyDBParameterGroup",
    "neptune.modifydbsubnetgroup": "rds:ModifyDBSubnetGroup",
    "neptune.modifyeventsubscription": "rds:ModifyEventSubscription",
    "neptune.modifyglobalcluster": "rds:ModifyGlobalCluster",
    "neptune.promotereadreplicadbcluster": "rds:PromoteReadReplicaDBCluster",
    "neptune.rebootdbinstance": "rds:RebootDBInstance",
    "neptune.removefromglobalcluster": "rds:RemoveFromGlobalCluster",
    "neptune.removerolefromdbcluster": "rds:RemoveRoleFromDBCluster",
    "neptune.removesourceidentifierfromsubscription": "rds:RemoveSourceIdentifierFromSubscription",
    "neptune.removetagsfromresource": "rds:RemoveTagsFromResource",
    "neptune.resetdbclusterparametergroup": "rds:ResetDBClusterParameterGroup",
    "neptune.resetdbparametergroup": "rds:ResetDBParameterGroup",
    "neptune.restoredbclusterfromsnapshot": "rds:RestoreDBClusterFromSnapshot",
    "neptune.restoredbclustertopointintime": "rds:RestoreDBClusterToPointInTime",
    "neptune.startdbcluster": "rds:StartDBCluster",
    "neptune.stopdbcluster": "rds:StopDBCluster",
    "networkfirewall.associatefirewallpolicy": "network-firewall:AssociateFirewallPolicy",
    "networkfirewall.associatesubnets": "network-firewall:AssociateSubnets",
    "networkfirewall.createfirewall": "network-firewall:CreateFirewall",
    "networkfirewall.createfirewallpolicy": "network-firewall:CreateFirewallPolicy",
    "networkfirewall.createrulegroup": "network-firewall:CreateRuleGroup",
    "networkfirewall.deletefirewall": "network-firewall:DeleteFirewall",
    "networkfirewall.deletefirewallpolicy": "network-firewall:DeleteFirewallPolicy",
    "networkfirewall.deleteresourcepolicy": "network-firewall:DeleteResourcePolicy",
    "networkfirewall.deleterulegroup": "network-firewall:DeleteRuleGroup",
    "networkfirewall.describefirewall": "network-firewall:DescribeFirewall",
    "networkfirewall.describefirewallpolicy": "network-firewall:DescribeFirewallPolicy",
    "networkfirewall.describeloggingconfiguration": "network-firewall:DescribeLoggingConfiguration",
    "networkfirewall.describeresourcepolicy": "network-firewall:DescribeResourcePolicy",
    "networkfirewall.describerulegroup": "network-firewall:DescribeRuleGroup",
    "networkfirewall.describerulegroupmetadata": "network-firewall:DescribeRuleGroupMetadata",
    "networkfirewall.disassociatesubnets": "network-firewall:DisassociateSubnets",
    "networkfirewall.listfirewallpolicies": "network-firewall:ListFirewallPolicies",
    "networkfirewall.listfirewalls": "network-firewall:ListFirewalls",
    "networkfirewall.listrulegroups": "network-firewall:ListRuleGroups",
    "networkfirewall.listtagsforresource": "network-firewall:ListTagsForResource",
    "networkfirewall.putresourcepolicy": "network-firewall:PutResourcePolicy",
    "networkfirewall.tagresource": "network-firewall:TagResource",
    "networkfirewall.untagresource": "network-firewall:UntagResource",
    "networkfirewall.updatefirewalldeleteprotection": "network-firewall:UpdateFirewallDeleteProtection",
    "networkfirewall.updatefirewalldescription": "network-firewall:UpdateFirewallDescription",
    "networkfirewall.updatefirewallpolicy": "network-firewall:UpdateFirewallPolicy",
    "networkfirewall.updatefirewallpolicychangeprotection": "network-firewall:UpdateFirewallPolicyChangeProtection",
    "networkfirewall.updateloggingconfiguration": "network-firewall:UpdateLoggingConfiguration",
    "networkfirewall.updaterulegroup": "network-firewall:UpdateRuleGroup",
    "networkfirewall.updatesubnetchangeprotection": "network-firewall:UpdateSubnetChangeProtection",
    "networkmanager.acceptattachment": "networkmanager:AcceptAttachment",
    "networkmanager.associateconnectpeer": "networkmanager:AssociateConnectPeer",
    "networkmanager.associatecustomergateway": "networkmanager:AssociateCustomerGateway",
    "networkmanager.associatelink": "networkmanager:AssociateLink",
    "networkmanager.associatetransitgatewayconnectpeer": "networkmanager:AssociateTransitGatewayConnectPeer",
    "networkmanager.createconnectattachment": "networkmanager:CreateConnectAttachment",
    "networkmanager.createconnection": "networkmanager:CreateConnection",
    "networkmanager.createconnectpeer": "networkmanager:CreateConnectPeer",
    "networkmanager.createcorenetwork": "networkmanager:CreateCoreNetwork",
    "networkmanager.createdevice": "networkmanager:CreateDevice",
    "networkmanager.createglobalnetwork": "networkmanager:CreateGlobalNetwork",
    "networkmanager.createlink": "networkmanager:CreateLink",
    "networkmanager.createsite": "networkmanager:CreateSite",
    "networkmanager.createsitetositevpnattachment": "networkmanager:CreateSiteToSiteVpnAttachment",
    "networkmanager.createvpcattachment": "networkmanager:CreateVpcAttachment",
    "networkmanager.deleteattachment": "networkmanager:DeleteAttachment",
    "networkmanager.deleteconnection": "networkmanager:DeleteConnection",
    "networkmanager.deleteconnectpeer": "networkmanager:DeleteConnectPeer",
    "networkmanager.deletecorenetwork": "networkmanager:DeleteCoreNetwork",
    "networkmanager.deletecorenetworkpolicyversion": "networkmanager:DeleteCoreNetworkPolicyVersion",
    "networkmanager.deletedevice": "networkmanager:DeleteDevice",
    "networkmanager.deleteglobalnetwork": "networkmanager:DeleteGlobalNetwork",
    "networkmanager.deletelink": "networkmanager:DeleteLink",
    "networkmanager.deleteresourcepolicy": "networkmanager:DeleteResourcePolicy",
    "networkmanager.deletesite": "networkmanager:DeleteSite",
    "networkmanager.deregistertransitgateway": "networkmanager:DeregisterTransitGateway",
    "networkmanager.describeglobalnetworks": "networkmanager:DescribeGlobalNetworks",
    "networkmanager.disassociateconnectpeer": "networkmanager:DisassociateConnectPeer",
    "networkmanager.disassociatecustomergateway": "networkmanager:DisassociateCustomerGateway",
    "networkmanager.disassociatelink": "networkmanager:DisassociateLink",
    "networkmanager.disassociatetransitgatewayconnectpeer": "networkmanager:DisassociateTransitGatewayConnectPeer",
    "networkmanager.executecorenetworkchangeset": "networkmanager:ExecuteCoreNetworkChangeSet",
    "networkmanager.getconnectattachment": "networkmanager:GetConnectAttachment",
    "networkmanager.getconnections": "networkmanager:GetConnections",
    "networkmanager.getconnectpeer": "networkmanager:GetConnectPeer",
    "networkmanager.getconnectpeerassociations": "networkmanager:GetConnectPeerAssociations",
    "networkmanager.getcorenetwork": "networkmanager:GetCoreNetwork",
    "networkmanager.getcorenetworkchangeset": "networkmanager:GetCoreNetworkChangeSet",
    "networkmanager.getcorenetworkpolicy": "networkmanager:GetCoreNetworkPolicy",
    "networkmanager.getcustomergatewayassociations": "networkmanager:GetCustomerGatewayAssociations",
    "networkmanager.getdevices": "networkmanager:GetDevices",
    "networkmanager.getlinkassociations": "networkmanager:GetLinkAssociations",
    "networkmanager.getlinks": "networkmanager:GetLinks",
    "networkmanager.getnetworkresourcecounts": "networkmanager:GetNetworkResourceCounts",
    "networkmanager.getnetworkresourcerelationships": "networkmanager:GetNetworkResourceRelationships",
    "networkmanager.getnetworkresources": "networkmanager:GetNetworkResources",
    "networkmanager.getnetworkroutes": "networkmanager:GetNetworkRoutes",
    "networkmanager.getnetworktelemetry": "networkmanager:GetNetworkTelemetry",
    "networkmanager.getresourcepolicy": "networkmanager:GetResourcePolicy",
    "networkmanager.getrouteanalysis": "networkmanager:GetRouteAnalysis",
    "networkmanager.getsites": "networkmanager:GetSites",
    "networkmanager.getsitetositevpnattachment": "networkmanager:GetSiteToSiteVpnAttachment",
    "networkmanager.gettransitgatewayconnectpeerassociations": "networkmanager:GetTransitGatewayConnectPeerAssociations",
    "networkmanager.gettransitgatewayregistrations": "networkmanager:GetTransitGatewayRegistrations",
    "networkmanager.getvpcattachment": "networkmanager:GetVpcAttachment",
    "networkmanager.listattachments": "networkmanager:ListAttachments",
    "networkmanager.listconnectpeers": "networkmanager:ListConnectPeers",
    "networkmanager.listcorenetworkpolicyversions": "networkmanager:ListCoreNetworkPolicyVersions",
    "networkmanager.listcorenetworks": "networkmanager:ListCoreNetworks",
    "networkmanager.listorganizationserviceaccessstatus": "networkmanager:ListOrganizationServiceAccessStatus",
    "networkmanager.listtagsforresource": "networkmanager:ListTagsForResource",
    "networkmanager.putcorenetworkpolicy": "networkmanager:PutCoreNetworkPolicy",
    "networkmanager.putresourcepolicy": "networkmanager:PutResourcePolicy",
    "networkmanager.registertransitgateway": "networkmanager:RegisterTransitGateway",
    "networkmanager.rejectattachment": "networkmanager:RejectAttachment",
    "networkmanager.restorecorenetworkpolicyversion": "networkmanager:RestoreCoreNetworkPolicyVersion",
    "networkmanager.startorganizationserviceaccessupdate": "networkmanager:StartOrganizationServiceAccessUpdate",
    "networkmanager.startrouteanalysis": "networkmanager:StartRouteAnalysis",
    "networkmanager.tagresource": "networkmanager:TagResource",
    "networkmanager.untagresource": "networkmanager:UntagResource",
    "networkmanager.updateconnection": "networkmanager:UpdateConnection",
    "networkmanager.updatecorenetwork": "networkmanager:UpdateCoreNetwork",
    "networkmanager.updatedevice": "networkmanager:UpdateDevice",
    "networkmanager.updateglobalnetwork": "networkmanager:UpdateGlobalNetwork",
    "networkmanager.updatelink": "networkmanager:UpdateLink",
    "networkmanager.updatenetworkresourcemetadata": "networkmanager:UpdateNetworkResourceMetadata",
    "networkmanager.updatesite": "networkmanager:UpdateSite",
    "networkmanager.updatevpcattachment": "networkmanager:UpdateVpcAttachment",
    "nimble.accepteulas": "nimble:AcceptEulas",
    "nimble.createlaunchprofile": "nimble:CreateLaunchProfile",
    "nimble.createstreamingimage": "nimble:CreateStreamingImage",
    "nimble.createstreamingsession": "nimble:CreateStreamingSession",
    "nimble.createstreamingsessionstream": "nimble:CreateStreamingSessionStream",
    "nimble.createstudio": "nimble:CreateStudio",
    "nimble.createstudiocomponent": "nimble:CreateStudioComponent",
    "nimble.deletelaunchprofile": "nimble:DeleteLaunchProfile",
    "nimble.deletelaunchprofilemember": "nimble:DeleteLaunchProfileMember",
    "nimble.deletestreamingimage": "nimble:DeleteStreamingImage",
    "nimble.deletestreamingsession": "nimble:DeleteStreamingSession",
    "nimble.deletestudio": "nimble:DeleteStudio",
    "nimble.deletestudiocomponent": "nimble:DeleteStudioComponent",
    "nimble.deletestudiomember": "nimble:DeleteStudioMember",
    "nimble.geteula": "nimble:GetEula",
    "nimble.getlaunchprofile": "nimble:GetLaunchProfile",
    "nimble.getlaunchprofiledetails": "nimble:GetLaunchProfileDetails",
    "nimble.getlaunchprofileinitialization": "nimble:GetLaunchProfileInitialization",
    "nimble.getlaunchprofilemember": "nimble:GetLaunchProfileMember",
    "nimble.getstreamingimage": "nimble:GetStreamingImage",
    "nimble.getstreamingsession": "nimble:GetStreamingSession",
    "nimble.getstreamingsessionstream": "nimble:GetStreamingSessionStream",
    "nimble.getstudio": "nimble:GetStudio",
    "nimble.getstudiocomponent": "nimble:GetStudioComponent",
    "nimble.getstudiomember": "nimble:GetStudioMember",
    "nimble.listeulaacceptances": "nimble:ListEulaAcceptances",
    "nimble.listeulas": "nimble:ListEulas",
    "nimble.listlaunchprofilemembers": "nimble:ListLaunchProfileMembers",
    "nimble.listlaunchprofiles": "nimble:ListLaunchProfiles",
    "nimble.liststreamingimages": "nimble:ListStreamingImages",
    "nimble.liststreamingsessions": "nimble:ListStreamingSessions",
    "nimble.liststudiocomponents": "nimble:ListStudioComponents",
    "nimble.liststudiomembers": "nimble:ListStudioMembers",
    "nimble.liststudios": "nimble:ListStudios",
    "nimble.listtagsforresource": "nimble:ListTagsForResource",
    "nimble.putlaunchprofilemembers": "nimble:PutLaunchProfileMembers",
    "nimble.putstudiomembers": "nimble:PutStudioMembers",
    "nimble.startstreamingsession": "nimble:StartStreamingSession",
    "nimble.startstudiossoconfigurationrepair": "nimble:StartStudioSSOConfigurationRepair",
    "nimble.stopstreamingsession": "nimble:StopStreamingSession",
    "nimble.tagresource": "nimble:TagResource",
    "nimble.untagresource": "nimble:UntagResource",
    "nimble.updatelaunchprofile": "nimble:UpdateLaunchProfile",
    "nimble.updatelaunchprofilemember": "nimble:UpdateLaunchProfileMember",
    "nimble.updatestreamingimage": "nimble:UpdateStreamingImage",
    "nimble.updatestudio": "nimble:UpdateStudio",
    "nimble.updatestudiocomponent": "nimble:UpdateStudioComponent",
    "opensearch.acceptinboundconnection": "es:AcceptInboundConnection",
    "opensearch.addtags": "es:AddTags",
    "opensearch.associatepackage": "es:AssociatePackage",
    "opensearch.cancelservicesoftwareupdate": "es:CancelServiceSoftwareUpdate",
    "opensearch.createdomain": "es:CreateDomain",
    "opensearch.createoutboundconnection": "es:CreateOutboundConnection",
    "opensearch.createpackage": "es:CreatePackage",
    "opensearch.deletedomain": "es:DeleteDomain",
    "opensearch.deleteinboundconnection": "es:DeleteInboundConnection",
    "opensearch.deleteoutboundconnection": "es:DeleteOutboundConnection",
    "opensearch.deletepackage": "es:DeletePackage",
    "opensearch.describedomain": "es:DescribeDomain",
    "opensearch.describedomainautotunes": "es:DescribeDomainAutoTunes",
    "opensearch.describedomainchangeprogress": "es:DescribeDomainChangeProgress",
    "opensearch.describedomainconfig": "es:DescribeDomainConfig",
    "opensearch.describedomains": "es:DescribeDomains",
    "opensearch.describeinboundconnections": "es:DescribeInboundConnections",
    "opensearch.describeinstancetypelimits": "es:DescribeInstanceTypeLimits",
    "opensearch.describeoutboundconnections": "es:DescribeOutboundConnections",
    "opensearch.describepackages": "es:DescribePackages",
    "opensearch.describereservedinstanceofferings": "es:DescribeReservedInstanceOfferings",
    "opensearch.describereservedinstances": "es:DescribeReservedInstances",
    "opensearch.dissociatepackage": "es:DissociatePackage",
    "opensearch.getcompatibleversions": "es:GetCompatibleVersions",
    "opensearch.getpackageversionhistory": "es:GetPackageVersionHistory",
    "opensearch.getupgradehistory": "es:GetUpgradeHistory",
    "opensearch.getupgradestatus": "es:GetUpgradeStatus",
    "opensearch.listdomainnames": "es:ListDomainNames",
    "opensearch.listdomainsforpackage": "es:ListDomainsForPackage",
    "opensearch.listinstancetypedetails": "es:ListInstanceTypeDetails",
    "opensearch.listpackagesfordomain": "es:ListPackagesForDomain",
    "opensearch.listtags": "es:ListTags",
    "opensearch.listversions": "es:ListVersions",
    "opensearch.purchasereservedinstanceoffering": "es:PurchaseReservedInstanceOffering",
    "opensearch.rejectinboundconnection": "es:RejectInboundConnection",
    "opensearch.removetags": "es:RemoveTags",
    "opensearch.startservicesoftwareupdate": "es:StartServiceSoftwareUpdate",
    "opensearch.updatedomainconfig": "es:UpdateDomainConfig",
    "opensearch.updatepackage": "es:UpdatePackage",
    "opensearch.upgradedomain": "es:UpgradeDomain",
    "opsworks.assigninstance": "opsworks:AssignInstance",
    "opsworks.assignvolume": "opsworks:AssignVolume",
    "opsworks.associateelasticip": "opsworks:AssociateElasticIp",
    "opsworks.attachelasticloadbalancer": "opsworks:AttachElasticLoadBalancer",
    "opsworks.clonestack": "opsworks:CloneStack",
    "opsworks.createapp": "opsworks:CreateApp",
    "opsworks.createdeployment": "opsworks:CreateDeployment",
    "opsworks.createinstance": "opsworks:CreateInstance",
    "opsworks.createlayer": "opsworks:CreateLayer",
    "opsworks.createstack": "opsworks:CreateStack",
    "opsworks.createuserprofile": "opsworks:CreateUserProfile",
    "opsworks.deleteapp": "opsworks:DeleteApp",
    "opsworks.deleteinstance": "opsworks:DeleteInstance",
    "opsworks.deletelayer": "opsworks:DeleteLayer",
    "opsworks.deletestack": "opsworks:DeleteStack",
    "opsworks.deleteuserprofile": "opsworks:DeleteUserProfile",
    "opsworks.deregisterecscluster": "opsworks:DeregisterEcsCluster",
    "opsworks.deregisterelasticip": "opsworks:DeregisterElasticIp",
    "opsworks.deregisterinstance": "opsworks:DeregisterInstance",
    "opsworks.deregisterrdsdbinstance": "opsworks:DeregisterRdsDbInstance",
    "opsworks.deregistervolume": "opsworks:DeregisterVolume",
    "opsworks.describeagentversions": "opsworks:DescribeAgentVersions",
    "opsworks.describeapps": "opsworks:DescribeApps",
    "opsworks.describecommands": "opsworks:DescribeCommands",
    "opsworks.describedeployments": "opsworks:DescribeDeployments",
    "opsworks.describeecsclusters": "opsworks:DescribeEcsClusters",
    "opsworks.describeelasticips": "opsworks:DescribeElasticIps",
    "opsworks.describeelasticloadbalancers": "opsworks:DescribeElasticLoadBalancers",
    "opsworks.describeinstances": "opsworks:DescribeInstances",
    "opsworks.describelayers": "opsworks:DescribeLayers",
    "opsworks.describeloadbasedautoscaling": "opsworks:DescribeLoadBasedAutoScaling",
    "opsworks.describemyuserprofile": "opsworks:DescribeMyUserProfile",
    "opsworks.describeoperatingsystems": "opsworks:DescribeOperatingSystems",
    "opsworks.describepermissions": "opsworks:DescribePermissions",
    "opsworks.describeraidarrays": "opsworks:DescribeRaidArrays",
    "opsworks.describerdsdbinstances": "opsworks:DescribeRdsDbInstances",
    "opsworks.describeserviceerrors": "opsworks:DescribeServiceErrors",
    "opsworks.describestackprovisioningparameters": "opsworks:DescribeStackProvisioningParameters",
    "opsworks.describestacks": "opsworks:DescribeStacks",
    "opsworks.describestacksummary": "opsworks:DescribeStackSummary",
    "opsworks.describetimebasedautoscaling": "opsworks:DescribeTimeBasedAutoScaling",
    "opsworks.describeuserprofiles": "opsworks:DescribeUserProfiles",
    "opsworks.describevolumes": "opsworks:DescribeVolumes",
    "opsworks.detachelasticloadbalancer": "opsworks:DetachElasticLoadBalancer",
    "opsworks.disassociateelasticip": "opsworks:DisassociateElasticIp",
    "opsworks.gethostnamesuggestion": "opsworks:GetHostnameSuggestion",
    "opsworks.grantaccess": "opsworks:GrantAccess",
    "opsworks.listtags": "opsworks:ListTags",
    "opsworks.rebootinstance": "opsworks:RebootInstance",
    "opsworks.registerecscluster": "opsworks:RegisterEcsCluster",
    "opsworks.registerelasticip": "opsworks:RegisterElasticIp",
    "opsworks.registerinstance": "opsworks:RegisterInstance",
    "opsworks.registerrdsdbinstance": "opsworks:RegisterRdsDbInstance",
    "opsworks.registervolume": "opsworks:RegisterVolume",
    "opsworks.setloadbasedautoscaling": "opsworks:SetLoadBasedAutoScaling",
    "opsworks.setpermission": "opsworks:SetPermission",
    "opsworks.settimebasedautoscaling": "opsworks:SetTimeBasedAutoScaling",
    "opsworks.startinstance": "opsworks:StartInstance",
    "opsworks.startstack": "opsworks:StartStack",
    "opsworks.stopinstance": "opsworks:StopInstance",
    "opsworks.stopstack": "opsworks:StopStack",
    "opsworks.tagresource": "opsworks:TagResource",
    "opsworks.unassigninstance": "opsworks:UnassignInstance",
    "opsworks.unassignvolume": "opsworks:UnassignVolume",
    "opsworks.untagresource": "opsworks:UntagResource",
    "opsworks.updateapp": "opsworks:UpdateApp",
    "opsworks.updateelasticip": "opsworks:UpdateElasticIp",
    "opsworks.updateinstance": "opsworks:UpdateInstance",
    "opsworks.updatelayer": "opsworks:UpdateLayer",
    "opsworks.updatemyuserprofile": "opsworks:UpdateMyUserProfile",
    "opsworks.updaterdsdbinstance": "opsworks:UpdateRdsDbInstance",
    "opsworks.updatestack": "opsworks:UpdateStack",
    "opsworks.updateuserprofile": "opsworks:UpdateUserProfile",
    "opsworks.updatevolume": "opsworks:UpdateVolume",
    "opsworkscm.associatenode": "opsworks-cm:AssociateNode",
    "opsworkscm.createbackup": "opsworks-cm:CreateBackup",
    "opsworkscm.createserver": "opsworks-cm:CreateServer",
    "opsworkscm.deletebackup": "opsworks-cm:DeleteBackup",
    "opsworkscm.deleteserver": "opsworks-cm:DeleteServer",
    "opsworkscm.describeaccountattributes": "opsworks-cm:DescribeAccountAttributes",
    "opsworkscm.describebackups": "opsworks-cm:DescribeBackups",
    "opsworkscm.describeevents": "opsworks-cm:DescribeEvents",
    "opsworkscm.describenodeassociationstatus": "opsworks-cm:DescribeNodeAssociationStatus",
    "opsworkscm.describeservers": "opsworks-cm:DescribeServers",
    "opsworkscm.disassociatenode": "opsworks-cm:DisassociateNode",
    "opsworkscm.exportserverengineattribute": "opsworks-cm:ExportServerEngineAttribute",
    "opsworkscm.listtagsforresource": "opsworks-cm:ListTagsForResource",
    "opsworkscm.restoreserver": "opsworks-cm:RestoreServer",
    "opsworkscm.startmaintenance": "opsworks-cm:StartMaintenance",
    "opsworkscm.tagresource": "opsworks-cm:TagResource",
    "opsworkscm.untagresource": "opsworks-cm:UntagResource",
    "opsworkscm.updateserver": "opsworks-cm:UpdateServer",
    "opsworkscm.updateserverengineattributes": "opsworks-cm:UpdateServerEngineAttributes",
    "organizations.accepthandshake": "organizations:AcceptHandshake",
    "organizations.attachpolicy": "organizations:AttachPolicy",
    "organizations.cancelhandshake": "organizations:CancelHandshake",
    "organizations.closeaccount": "organizations:CloseAccount",
    "organizations.createaccount": "organizations:CreateAccount",
    "organizations.creategovcloudaccount": "organizations:CreateGovCloudAccount",
    "organizations.createorganization": "organizations:CreateOrganization",
    "organizations.createorganizationalunit": "organizations:CreateOrganizationalUnit",
    "organizations.createpolicy": "organizations:CreatePolicy",
    "organizations.declinehandshake": "organizations:DeclineHandshake",
    "organizations.deleteorganization": "organizations:DeleteOrganization",
    "organizations.deleteorganizationalunit": "organizations:DeleteOrganizationalUnit",
    "organizations.deletepolicy": "organizations:DeletePolicy",
    "organizations.deregisterdelegatedadministrator": "organizations:DeregisterDelegatedAdministrator",
    "organizations.describeaccount": "organizations:DescribeAccount",
    "organizations.describecreateaccountstatus": "organizations:DescribeCreateAccountStatus",
    "organizations.describeeffectivepolicy": "organizations:DescribeEffectivePolicy",
    "organizations.describehandshake": "organizations:DescribeHandshake",
    "organizations.describeorganization": "organizations:DescribeOrganization",
    "organizations.describeorganizationalunit": "organizations:DescribeOrganizationalUnit",
    "organizations.describepolicy": "organizations:DescribePolicy",
    "organizations.detachpolicy": "organizations:DetachPolicy",
    "organizations.disableawsserviceaccess": "organizations:DisableAWSServiceAccess",
    "organizations.disablepolicytype": "organizations:DisablePolicyType",
    "organizations.enableallfeatures": "organizations:EnableAllFeatures",
    "organizations.enableawsserviceaccess": "organizations:EnableAWSServiceAccess",
    "organizations.enablepolicytype": "organizations:EnablePolicyType",
    "organizations.inviteaccounttoorganization": "organizations:InviteAccountToOrganization",
    "organizations.leaveorganization": "organizations:LeaveOrganization",
    "organizations.listaccounts": "organizations:ListAccounts",
    "organizations.listaccountsforparent": "organizations:ListAccountsForParent",
    "organizations.listawsserviceaccessfororganization": "organizations:ListAWSServiceAccessForOrganization",
    "organizations.listchildren": "organizations:ListChildren",
    "organizations.listcreateaccountstatus": "organizations:ListCreateAccountStatus",
    "organizations.listdelegatedadministrators": "organizations:ListDelegatedAdministrators",
    "organizations.listdelegatedservicesforaccount": "organizations:ListDelegatedServicesForAccount",
    "organizations.listhandshakesforaccount": "organizations:ListHandshakesForAccount",
    "organizations.listhandshakesfororganization": "organizations:ListHandshakesForOrganization",
    "organizations.listorganizationalunitsforparent": "organizations:ListOrganizationalUnitsForParent",
    "organizations.listparents": "organizations:ListParents",
    "organizations.listpolicies": "organizations:ListPolicies",
    "organizations.listpoliciesfortarget": "organizations:ListPoliciesForTarget",
    "organizations.listroots": "organizations:ListRoots",
    "organizations.listtagsforresource": "organizations:ListTagsForResource",
    "organizations.listtargetsforpolicy": "organizations:ListTargetsForPolicy",
    "organizations.moveaccount": "organizations:MoveAccount",
    "organizations.registerdelegatedadministrator": "organizations:RegisterDelegatedAdministrator",
    "organizations.removeaccountfromorganization": "organizations:RemoveAccountFromOrganization",
    "organizations.tagresource": "organizations:TagResource",
    "organizations.untagresource": "organizations:UntagResource",
    "organizations.updateorganizationalunit": "organizations:UpdateOrganizationalUnit",
    "organizations.updatepolicy": "organizations:UpdatePolicy",
    "outposts.cancelorder": "outposts:CancelOrder",
    "outposts.createorder": "outposts:CreateOrder",
    "outposts.createoutpost": "outposts:CreateOutpost",
    "outposts.createsite": "outposts:CreateSite",
    "outposts.deleteoutpost": "outposts:DeleteOutpost",
    "outposts.deletesite": "outposts:DeleteSite",
    "outposts.getcatalogitem": "outposts:GetCatalogItem",
    "outposts.getconnection": "outposts:GetConnection",
    "outposts.getorder": "outposts:GetOrder",
    "outposts.getoutpost": "outposts:GetOutpost",
    "outposts.getoutpostinstancetypes": "outposts:GetOutpostInstanceTypes",
    "outposts.getsite": "outposts:GetSite",
    "outposts.getsiteaddress": "outposts:GetSiteAddress",
    "outposts.listassets": "outposts:ListAssets",
    "outposts.listcatalogitems": "outposts:ListCatalogItems",
    "outposts.listorders": "outposts:ListOrders",
    "outposts.listoutposts": "outposts:ListOutposts",
    "outposts.listsites": "outposts:ListSites",
    "outposts.listtagsforresource": "outposts:ListTagsForResource",
    "outposts.startconnection": "outposts:StartConnection",
    "outposts.tagresource": "outposts:TagResource",
    "outposts.untagresource": "outposts:UntagResource",
    "outposts.updateoutpost": "outposts:UpdateOutpost",
    "outposts.updatesite": "outposts:UpdateSite",
    "outposts.updatesiteaddress": "outposts:UpdateSiteAddress",
    "outposts.updatesiterackphysicalproperties": "outposts:UpdateSiteRackPhysicalProperties",
    "panorama.createapplicationinstance": "panorama:CreateApplicationInstance",
    "panorama.createjobfordevices": "panorama:CreateJobForDevices",
    "panorama.createnodefromtemplatejob": "panorama:CreateNodeFromTemplateJob",
    "panorama.createpackage": "panorama:CreatePackage",
    "panorama.createpackageimportjob": "panorama:CreatePackageImportJob",
    "panorama.deletedevice": "panorama:DeleteDevice",
    "panorama.deletepackage": "panorama:DeletePackage",
    "panorama.deregisterpackageversion": "panorama:DeregisterPackageVersion",
    "panorama.describeapplicationinstance": "panorama:DescribeApplicationInstance",
    "panorama.describeapplicationinstancedetails": "panorama:DescribeApplicationInstanceDetails",
    "panorama.describedevice": "panorama:DescribeDevice",
    "panorama.describedevicejob": "panorama:DescribeDeviceJob",
    "panorama.describenode": "panorama:DescribeNode",
    "panorama.describenodefromtemplatejob": "panorama:DescribeNodeFromTemplateJob",
    "panorama.describepackage": "panorama:DescribePackage",
    "panorama.describepackageimportjob": "panorama:DescribePackageImportJob",
    "panorama.describepackageversion": "panorama:DescribePackageVersion",
    "panorama.listapplicationinstancedependencies": "panorama:ListApplicationInstanceDependencies",
    "panorama.listapplicationinstancenodeinstances": "panorama:ListApplicationInstanceNodeInstances",
    "panorama.listapplicationinstances": "panorama:ListApplicationInstances",
    "panorama.listdevices": "panorama:ListDevices",
    "panorama.listdevicesjobs": "panorama:ListDevicesJobs",
    "panorama.listnodefromtemplatejobs": "panorama:ListNodeFromTemplateJobs",
    "panorama.listnodes": "panorama:ListNodes",
    "panorama.listpackageimportjobs": "panorama:ListPackageImportJobs",
    "panorama.listpackages": "panorama:ListPackages",
    "panorama.listtagsforresource": "panorama:ListTagsForResource",
    "panorama.provisiondevice": "panorama:ProvisionDevice",
    "panorama.registerpackageversion": "panorama:RegisterPackageVersion",
    "panorama.removeapplicationinstance": "panorama:RemoveApplicationInstance",
    "panorama.tagresource": "panorama:TagResource",
    "panorama.untagresource": "panorama:UntagResource",
    "panorama.updatedevicemetadata": "panorama:UpdateDeviceMetadata",
    "personalize.createbatchinferencejob": "personalize:CreateBatchInferenceJob",
    "personalize.createbatchsegmentjob": "personalize:CreateBatchSegmentJob",
    "personalize.createcampaign": "personalize:CreateCampaign",
    "personalize.createdataset": "personalize:CreateDataset",
    "personalize.createdatasetexportjob": "personalize:CreateDatasetExportJob",
    "personalize.createdatasetgroup": "personalize:CreateDatasetGroup",
    "personalize.createdatasetimportjob": "personalize:CreateDatasetImportJob",
    "personalize.createeventtracker": "personalize:CreateEventTracker",
    "personalize.createfilter": "personalize:CreateFilter",
    "personalize.createrecommender": "personalize:CreateRecommender",
    "personalize.createschema": "personalize:CreateSchema",
    "personalize.createsolution": "personalize:CreateSolution",
    "personalize.createsolutionversion": "personalize:CreateSolutionVersion",
    "personalize.deletecampaign": "personalize:DeleteCampaign",
    "personalize.deletedataset": "personalize:DeleteDataset",
    "personalize.deletedatasetgroup": "personalize:DeleteDatasetGroup",
    "personalize.deleteeventtracker": "personalize:DeleteEventTracker",
    "personalize.deletefilter": "personalize:DeleteFilter",
    "personalize.deleterecommender": "personalize:DeleteRecommender",
    "personalize.deleteschema": "personalize:DeleteSchema",
    "personalize.deletesolution": "personalize:DeleteSolution",
    "personalize.describealgorithm": "personalize:DescribeAlgorithm",
    "personalize.describebatchinferencejob": "personalize:DescribeBatchInferenceJob",
    "personalize.describebatchsegmentjob": "personalize:DescribeBatchSegmentJob",
    "personalize.describecampaign": "personalize:DescribeCampaign",
    "personalize.describedataset": "personalize:DescribeDataset",
    "personalize.describedatasetexportjob": "personalize:DescribeDatasetExportJob",
    "personalize.describedatasetgroup": "personalize:DescribeDatasetGroup",
    "personalize.describedatasetimportjob": "personalize:DescribeDatasetImportJob",
    "personalize.describeeventtracker": "personalize:DescribeEventTracker",
    "personalize.describefeaturetransformation": "personalize:DescribeFeatureTransformation",
    "personalize.describefilter": "personalize:DescribeFilter",
    "personalize.describerecipe": "personalize:DescribeRecipe",
    "personalize.describerecommender": "personalize:DescribeRecommender",
    "personalize.describeschema": "personalize:DescribeSchema",
    "personalize.describesolution": "personalize:DescribeSolution",
    "personalize.describesolutionversion": "personalize:DescribeSolutionVersion",
    "personalize.getsolutionmetrics": "personalize:GetSolutionMetrics",
    "personalize.listbatchinferencejobs": "personalize:ListBatchInferenceJobs",
    "personalize.listbatchsegmentjobs": "personalize:ListBatchSegmentJobs",
    "personalize.listcampaigns": "personalize:ListCampaigns",
    "personalize.listdatasetexportjobs": "personalize:ListDatasetExportJobs",
    "personalize.listdatasetgroups": "personalize:ListDatasetGroups",
    "personalize.listdatasetimportjobs": "personalize:ListDatasetImportJobs",
    "personalize.listdatasets": "personalize:ListDatasets",
    "personalize.listeventtrackers": "personalize:ListEventTrackers",
    "personalize.listfilters": "personalize:ListFilters",
    "personalize.listrecipes": "personalize:ListRecipes",
    "personalize.listrecommenders": "personalize:ListRecommenders",
    "personalize.listschemas": "personalize:ListSchemas",
    "personalize.listsolutions": "personalize:ListSolutions",
    "personalize.listsolutionversions": "personalize:ListSolutionVersions",
    "personalize.startrecommender": "personalize:StartRecommender",
    "personalize.stoprecommender": "personalize:StopRecommender",
    "personalize.stopsolutionversioncreation": "personalize:StopSolutionVersionCreation",
    "personalize.updatecampaign": "personalize:UpdateCampaign",
    "personalize.updaterecommender": "personalize:UpdateRecommender",
    "personalizeevents.putevents": "personalize:PutEvents",
    "personalizeevents.putitems": "personalize:PutItems",
    "personalizeevents.putusers": "personalize:PutUsers",
    "personalizeruntime.getpersonalizedranking": "personalize:GetPersonalizedRanking",
    "personalizeruntime.getrecommendations": "personalize:GetRecommendations",
    "pi.describedimensionkeys": "pi:DescribeDimensionKeys",
    "pi.getdimensionkeydetails": "pi:GetDimensionKeyDetails",
    "pi.getresourcemetadata": "pi:GetResourceMetadata",
    "pi.getresourcemetrics": "pi:GetResourceMetrics",
    "pi.listavailableresourcedimensions": "pi:ListAvailableResourceDimensions",
    "pi.listavailableresourcemetrics": "pi:ListAvailableResourceMetrics",
    "pinpoint.createapp": "mobiletargeting:CreateApp",
    "pinpoint.createcampaign": "mobiletargeting:CreateCampaign",
    "pinpoint.createemailtemplate": "mobiletargeting:CreateEmailTemplate",
    "pinpoint.createexportjob": "mobiletargeting:CreateExportJob",
    "pinpoint.createimportjob": "mobiletargeting:CreateImportJob",
    "pinpoint.createinapptemplate": "mobiletargeting:CreateInAppTemplate",
    "pinpoint.createjourney": "mobiletargeting:CreateJourney",
    "pinpoint.createpushtemplate": "mobiletargeting:CreatePushTemplate",
    "pinpoint.createrecommenderconfiguration": "mobiletargeting:CreateRecommenderConfiguration",
    "pinpoint.createsegment": "mobiletargeting:CreateSegment",
    "pinpoint.createsmstemplate": "mobiletargeting:CreateSmsTemplate",
    "pinpoint.createvoicetemplate": "mobiletargeting:CreateVoiceTemplate",
    "pinpoint.deleteadmchannel": "mobiletargeting:DeleteAdmChannel",
    "pinpoint.deleteapnschannel": "mobiletargeting:DeleteApnsChannel",
    "pinpoint.deleteapnssandboxchannel": "mobiletargeting:DeleteApnsSandboxChannel",
    "pinpoint.deleteapnsvoipchannel": "mobiletargeting:DeleteApnsVoipChannel",
    "pinpoint.deleteapnsvoipsandboxchannel": "mobiletargeting:DeleteApnsVoipSandboxChannel",
    "pinpoint.deleteapp": "mobiletargeting:DeleteApp",
    "pinpoint.deletebaiduchannel": "mobiletargeting:DeleteBaiduChannel",
    "pinpoint.deletecampaign": "mobiletargeting:DeleteCampaign",
    "pinpoint.deleteemailchannel": "mobiletargeting:DeleteEmailChannel",
    "pinpoint.deleteemailtemplate": "mobiletargeting:DeleteEmailTemplate",
    "pinpoint.deleteendpoint": "mobiletargeting:DeleteEndpoint",
    "pinpoint.deleteeventstream": "mobiletargeting:DeleteEventStream",
    "pinpoint.deletegcmchannel": "mobiletargeting:DeleteGcmChannel",
    "pinpoint.deleteinapptemplate": "mobiletargeting:DeleteInAppTemplate",
    "pinpoint.deletejourney": "mobiletargeting:DeleteJourney",
    "pinpoint.deletepushtemplate": "mobiletargeting:DeletePushTemplate",
    "pinpoint.deleterecommenderconfiguration": "mobiletargeting:DeleteRecommenderConfiguration",
    "pinpoint.deletesegment": "mobiletargeting:DeleteSegment",
    "pinpoint.deletesmschannel": "mobiletargeting:DeleteSmsChannel",
    "pinpoint.deletesmstemplate": "mobiletargeting:DeleteSmsTemplate",
    "pinpoint.deleteuserendpoints": "mobiletargeting:DeleteUserEndpoints",
    "pinpoint.deletevoicechannel": "mobiletargeting:DeleteVoiceChannel",
    "pinpoint.deletevoicetemplate": "mobiletargeting:DeleteVoiceTemplate",
    "pinpoint.getadmchannel": "mobiletargeting:GetAdmChannel",
    "pinpoint.getapnschannel": "mobiletargeting:GetApnsChannel",
    "pinpoint.getapnssandboxchannel": "mobiletargeting:GetApnsSandboxChannel",
    "pinpoint.getapnsvoipchannel": "mobiletargeting:GetApnsVoipChannel",
    "pinpoint.getapnsvoipsandboxchannel": "mobiletargeting:GetApnsVoipSandboxChannel",
    "pinpoint.getapp": "mobiletargeting:GetApp",
    "pinpoint.getapplicationdaterangekpi": "mobiletargeting:GetApplicationDateRangeKpi",
    "pinpoint.getapplicationsettings": "mobiletargeting:GetApplicationSettings",
    "pinpoint.getapps": "mobiletargeting:GetApps",
    "pinpoint.getbaiduchannel": "mobiletargeting:GetBaiduChannel",
    "pinpoint.getcampaign": "mobiletargeting:GetCampaign",
    "pinpoint.getcampaignactivities": "mobiletargeting:GetCampaignActivities",
    "pinpoint.getcampaigndaterangekpi": "mobiletargeting:GetCampaignDateRangeKpi",
    "pinpoint.getcampaigns": "mobiletargeting:GetCampaigns",
    "pinpoint.getcampaignversion": "mobiletargeting:GetCampaignVersion",
    "pinpoint.getcampaignversions": "mobiletargeting:GetCampaignVersions",
    "pinpoint.getchannels": "mobiletargeting:GetChannels",
    "pinpoint.getemailchannel": "mobiletargeting:GetEmailChannel",
    "pinpoint.getemailtemplate": "mobiletargeting:GetEmailTemplate",
    "pinpoint.getendpoint": "mobiletargeting:GetEndpoint",
    "pinpoint.geteventstream": "mobiletargeting:GetEventStream",
    "pinpoint.getexportjob": "mobiletargeting:GetExportJob",
    "pinpoint.getexportjobs": "mobiletargeting:GetExportJobs",
    "pinpoint.getgcmchannel": "mobiletargeting:GetGcmChannel",
    "pinpoint.getimportjob": "mobiletargeting:GetImportJob",
    "pinpoint.getimportjobs": "mobiletargeting:GetImportJobs",
    "pinpoint.getinappmessages": "mobiletargeting:GetInAppMessages",
    "pinpoint.getinapptemplate": "mobiletargeting:GetInAppTemplate",
    "pinpoint.getjourney": "mobiletargeting:GetJourney",
    "pinpoint.getjourneydaterangekpi": "mobiletargeting:GetJourneyDateRangeKpi",
    "pinpoint.getjourneyexecutionactivitymetrics": "mobiletargeting:GetJourneyExecutionActivityMetrics",
    "pinpoint.getjourneyexecutionmetrics": "mobiletargeting:GetJourneyExecutionMetrics",
    "pinpoint.getpushtemplate": "mobiletargeting:GetPushTemplate",
    "pinpoint.getrecommenderconfiguration": "mobiletargeting:GetRecommenderConfiguration",
    "pinpoint.getrecommenderconfigurations": "mobiletargeting:GetRecommenderConfigurations",
    "pinpoint.getsegment": "mobiletargeting:GetSegment",
    "pinpoint.getsegmentexportjobs": "mobiletargeting:GetSegmentExportJobs",
    "pinpoint.getsegmentimportjobs": "mobiletargeting:GetSegmentImportJobs",
    "pinpoint.getsegments": "mobiletargeting:GetSegments",
    "pinpoint.getsegmentversion": "mobiletargeting:GetSegmentVersion",
    "pinpoint.getsegmentversions": "mobiletargeting:GetSegmentVersions",
    "pinpoint.getsmschannel": "mobiletargeting:GetSmsChannel",
    "pinpoint.getsmstemplate": "mobiletargeting:GetSmsTemplate",
    "pinpoint.getuserendpoints": "mobiletargeting:GetUserEndpoints",
    "pinpoint.getvoicechannel": "mobiletargeting:GetVoiceChannel",
    "pinpoint.getvoicetemplate": "mobiletargeting:GetVoiceTemplate",
    "pinpoint.listjourneys": "mobiletargeting:ListJourneys",
    "pinpoint.listtagsforresource": "mobiletargeting:ListTagsForResource",
    "pinpoint.listtemplates": "mobiletargeting:ListTemplates",
    "pinpoint.listtemplateversions": "mobiletargeting:ListTemplateVersions",
    "pinpoint.phonenumbervalidate": "mobiletargeting:PhoneNumberValidate",
    "pinpoint.putevents": "mobiletargeting:PutEvents",
    "pinpoint.puteventstream": "mobiletargeting:PutEventStream",
    "pinpoint.removeattributes": "mobiletargeting:RemoveAttributes",
    "pinpoint.sendmessages": "mobiletargeting:SendMessages",
    "pinpoint.sendotpmessage": "mobiletargeting:SendOTPMessage",
    "pinpoint.sendusersmessages": "mobiletargeting:SendUsersMessages",
    "pinpoint.tagresource": "mobiletargeting:TagResource",
    "pinpoint.untagresource": "mobiletargeting:UntagResource",
    "pinpoint.updateadmchannel": "mobiletargeting:UpdateAdmChannel",
    "pinpoint.updateapnschannel": "mobiletargeting:UpdateApnsChannel",
    "pinpoint.updateapnssandboxchannel": "mobiletargeting:UpdateApnsSandboxChannel",
    "pinpoint.updateapnsvoipchannel": "mobiletargeting:UpdateApnsVoipChannel",
    "pinpoint.updateapnsvoipsandboxchannel": "mobiletargeting:UpdateApnsVoipSandboxChannel",
    "pinpoint.updateapplicationsettings": "mobiletargeting:UpdateApplicationSettings",
    "pinpoint.updatebaiduchannel": "mobiletargeting:UpdateBaiduChannel",
    "pinpoint.updatecampaign": "mobiletargeting:UpdateCampaign",
    "pinpoint.updateemailchannel": "mobiletargeting:UpdateEmailChannel",
    "pinpoint.updateemailtemplate": "mobiletargeting:UpdateEmailTemplate",
    "pinpoint.updateendpoint": "mobiletargeting:UpdateEndpoint",
    "pinpoint.updateendpointsbatch": "mobiletargeting:UpdateEndpointsBatch",
    "pinpoint.updategcmchannel": "mobiletargeting:UpdateGcmChannel",
    "pinpoint.updateinapptemplate": "mobiletargeting:UpdateInAppTemplate",
    "pinpoint.updatejourney": "mobiletargeting:UpdateJourney",
    "pinpoint.updatejourneystate": "mobiletargeting:UpdateJourneyState",
    "pinpoint.updatepushtemplate": "mobiletargeting:UpdatePushTemplate",
    "pinpoint.updaterecommenderconfiguration": "mobiletargeting:UpdateRecommenderConfiguration",
    "pinpoint.updatesegment": "mobiletargeting:UpdateSegment",
    "pinpoint.updatesmschannel": "mobiletargeting:UpdateSmsChannel",
    "pinpoint.updatesmstemplate": "mobiletargeting:UpdateSmsTemplate",
    "pinpoint.updatetemplateactiveversion": "mobiletargeting:UpdateTemplateActiveVersion",
    "pinpoint.updatevoicechannel": "mobiletargeting:UpdateVoiceChannel",
    "pinpoint.updatevoicetemplate": "mobiletargeting:UpdateVoiceTemplate",
    "pinpoint.verifyotpmessage": "mobiletargeting:VerifyOTPMessage",
    "pinpointemail.createconfigurationset": "ses:CreateConfigurationSet",
    "pinpointemail.createconfigurationseteventdestination": "ses:CreateConfigurationSetEventDestination",
    "pinpointemail.creatededicatedippool": "ses:CreateDedicatedIpPool",
    "pinpointemail.createdeliverabilitytestreport": "ses:CreateDeliverabilityTestReport",
    "pinpointemail.createemailidentity": "ses:CreateEmailIdentity",
    "pinpointemail.deleteconfigurationset": "ses:DeleteConfigurationSet",
    "pinpointemail.deleteconfigurationseteventdestination": "ses:DeleteConfigurationSetEventDestination",
    "pinpointemail.deletededicatedippool": "ses:DeleteDedicatedIpPool",
    "pinpointemail.deleteemailidentity": "ses:DeleteEmailIdentity",
    "pinpointemail.getaccount": "ses:GetAccount",
    "pinpointemail.getblacklistreports": "ses:GetBlacklistReports",
    "pinpointemail.getconfigurationset": "ses:GetConfigurationSet",
    "pinpointemail.getconfigurationseteventdestinations": "ses:GetConfigurationSetEventDestinations",
    "pinpointemail.getdedicatedip": "ses:GetDedicatedIp",
    "pinpointemail.getdedicatedips": "ses:GetDedicatedIps",
    "pinpointemail.getdeliverabilitydashboardoptions": "ses:GetDeliverabilityDashboardOptions",
    "pinpointemail.getdeliverabilitytestreport": "ses:GetDeliverabilityTestReport",
    "pinpointemail.getdomaindeliverabilitycampaign": "ses:GetDomainDeliverabilityCampaign",
    "pinpointemail.getdomainstatisticsreport": "ses:GetDomainStatisticsReport",
    "pinpointemail.getemailidentity": "ses:GetEmailIdentity",
    "pinpointemail.listconfigurationsets": "ses:ListConfigurationSets",
    "pinpointemail.listdedicatedippools": "ses:ListDedicatedIpPools",
    "pinpointemail.listdeliverabilitytestreports": "ses:ListDeliverabilityTestReports",
    "pinpointemail.listdomaindeliverabilitycampaigns": "ses:ListDomainDeliverabilityCampaigns",
    "pinpointemail.listemailidentities": "ses:ListEmailIdentities",
    "pinpointemail.listtagsforresource": "ses:ListTagsForResource",
    "pinpointemail.putaccountdedicatedipwarmupattributes": "ses:PutAccountDedicatedIpWarmupAttributes",
    "pinpointemail.putaccountsendingattributes": "ses:PutAccountSendingAttributes",
    "pinpointemail.putconfigurationsetdeliveryoptions": "ses:PutConfigurationSetDeliveryOptions",
    "pinpointemail.putconfigurationsetreputationoptions": "ses:PutConfigurationSetReputationOptions",
    "pinpointemail.putconfigurationsetsendingoptions": "ses:PutConfigurationSetSendingOptions",
    "pinpointemail.putconfigurationsettrackingoptions": "ses:PutConfigurationSetTrackingOptions",
    "pinpointemail.putdedicatedipinpool": "ses:PutDedicatedIpInPool",
    "pinpointemail.putdedicatedipwarmupattributes": "ses:PutDedicatedIpWarmupAttributes",
    "pinpointemail.putdeliverabilitydashboardoption": "ses:PutDeliverabilityDashboardOption",
    "pinpointemail.putemailidentitydkimattributes": "ses:PutEmailIdentityDkimAttributes",
    "pinpointemail.putemailidentityfeedbackattributes": "ses:PutEmailIdentityFeedbackAttributes",
    "pinpointemail.putemailidentitymailfromattributes": "ses:PutEmailIdentityMailFromAttributes",
    "pinpointemail.sendemail": "ses:SendEmail",
    "pinpointemail.tagresource": "ses:TagResource",
    "pinpointemail.untagresource": "ses:UntagResource",
    "pinpointemail.updateconfigurationseteventdestination": "ses:UpdateConfigurationSetEventDestination",
    "pinpointsmsvoice.createconfigurationset": "sms-voice:CreateConfigurationSet",
    "pinpointsmsvoice.createconfigurationseteventdestination": "sms-voice:CreateConfigurationSetEventDestination",
    "pinpointsmsvoice.deleteconfigurationset": "sms-voice:DeleteConfigurationSet",
    "pinpointsmsvoice.deleteconfigurationseteventdestination": "sms-voice:DeleteConfigurationSetEventDestination",
    "pinpointsmsvoice.getconfigurationseteventdestinations": "sms-voice:GetConfigurationSetEventDestinations",
    "pinpointsmsvoice.listconfigurationsets": "sms-voice:ListConfigurationSets",
    "pinpointsmsvoice.sendvoicemessage": "sms-voice:SendVoiceMessage",
    "pinpointsmsvoice.updateconfigurationseteventdestination": "sms-voice:UpdateConfigurationSetEventDestination",
    "polly.deletelexicon": "polly:DeleteLexicon",
    "polly.describevoices": "polly:DescribeVoices",
    "polly.getlexicon": "polly:GetLexicon",
    "polly.getspeechsynthesistask": "polly:GetSpeechSynthesisTask",
    "polly.listlexicons": "polly:ListLexicons",
    "polly.listspeechsynthesistasks": "polly:ListSpeechSynthesisTasks",
    "polly.putlexicon": "polly:PutLexicon",
    "polly.startspeechsynthesistask": "polly:StartSpeechSynthesisTask",
    "polly.synthesizespeech": "polly:SynthesizeSpeech",
    "pricing.describeservices": "pricing:DescribeServices",
    "pricing.getattributevalues": "pricing:GetAttributeValues",
    "pricing.getproducts": "pricing:GetProducts",
    "proton.acceptenvironmentaccountconnection": "proton:AcceptEnvironmentAccountConnection",
    "proton.cancelenvironmentdeployment": "proton:CancelEnvironmentDeployment",
    "proton.cancelserviceinstancedeployment": "proton:CancelServiceInstanceDeployment",
    "proton.cancelservicepipelinedeployment": "proton:CancelServicePipelineDeployment",
    "proton.createenvironment": "proton:CreateEnvironment",
    "proton.createenvironmentaccountconnection": "proton:CreateEnvironmentAccountConnection",
    "proton.createenvironmenttemplate": "proton:CreateEnvironmentTemplate",
    "proton.createenvironmenttemplateversion": "proton:CreateEnvironmentTemplateVersion",
    "proton.createrepository": "proton:CreateRepository",
    "proton.createservice": "proton:CreateService",
    "proton.createservicetemplate": "proton:CreateServiceTemplate",
    "proton.createservicetemplateversion": "proton:CreateServiceTemplateVersion",
    "proton.createtemplatesyncconfig": "proton:CreateTemplateSyncConfig",
    "proton.deleteenvironment": "proton:DeleteEnvironment",
    "proton.deleteenvironmentaccountconnection": "proton:DeleteEnvironmentAccountConnection",
    "proton.deleteenvironmenttemplate": "proton:DeleteEnvironmentTemplate",
    "proton.deleteenvironmenttemplateversion": "proton:DeleteEnvironmentTemplateVersion",
    "proton.deleterepository": "proton:DeleteRepository",
    "proton.deleteservice": "proton:DeleteService",
    "proton.deleteservicetemplate": "proton:DeleteServiceTemplate",
    "proton.deleteservicetemplateversion": "proton:DeleteServiceTemplateVersion",
    "proton.deletetemplatesyncconfig": "proton:DeleteTemplateSyncConfig",
    "proton.getaccountsettings": "proton:GetAccountSettings",
    "proton.getenvironment": "proton:GetEnvironment",
    "proton.getenvironmentaccountconnection": "proton:GetEnvironmentAccountConnection",
    "proton.getenvironmenttemplate": "proton:GetEnvironmentTemplate",
    "proton.getenvironmenttemplateversion": "proton:GetEnvironmentTemplateVersion",
    "proton.getrepository": "proton:GetRepository",
    "proton.getrepositorysyncstatus": "proton:GetRepositorySyncStatus",
    "proton.getservice": "proton:GetService",
    "proton.getserviceinstance": "proton:GetServiceInstance",
    "proton.getservicetemplate": "proton:GetServiceTemplate",
    "proton.getservicetemplateversion": "proton:GetServiceTemplateVersion",
    "proton.gettemplatesyncconfig": "proton:GetTemplateSyncConfig",
    "proton.gettemplatesyncstatus": "proton:GetTemplateSyncStatus",
    "proton.listenvironmentaccountconnections": "proton:ListEnvironmentAccountConnections",
    "proton.listenvironmentoutputs": "proton:ListEnvironmentOutputs",
    "proton.listenvironmentprovisionedresources": "proton:ListEnvironmentProvisionedResources",
    "proton.listenvironments": "proton:ListEnvironments",
    "proton.listenvironmenttemplates": "proton:ListEnvironmentTemplates",
    "proton.listenvironmenttemplateversions": "proton:ListEnvironmentTemplateVersions",
    "proton.listrepositories": "proton:ListRepositories",
    "proton.listrepositorysyncdefinitions": "proton:ListRepositorySyncDefinitions",
    "proton.listserviceinstanceoutputs": "proton:ListServiceInstanceOutputs",
    "proton.listserviceinstanceprovisionedresources": "proton:ListServiceInstanceProvisionedResources",
    "proton.listserviceinstances": "proton:ListServiceInstances",
    "proton.listservicepipelineoutputs": "proton:ListServicePipelineOutputs",
    "proton.listservicepipelineprovisionedresources": "proton:ListServicePipelineProvisionedResources",
    "proton.listservices": "proton:ListServices",
    "proton.listservicetemplates": "proton:ListServiceTemplates",
    "proton.listservicetemplateversions": "proton:ListServiceTemplateVersions",
    "proton.listtagsforresource": "proton:ListTagsForResource",
    "proton.notifyresourcedeploymentstatuschange": "proton:NotifyResourceDeploymentStatusChange",
    "proton.rejectenvironmentaccountconnection": "proton:RejectEnvironmentAccountConnection",
    "proton.tagresource": "proton:TagResource",
    "proton.untagresource": "proton:UntagResource",
    "proton.updateaccountsettings": "proton:UpdateAccountSettings",
    "proton.updateenvironment": "proton:UpdateEnvironment",
    "proton.updateenvironmentaccountconnection": "proton:UpdateEnvironmentAccountConnection",
    "proton.updateenvironmenttemplate": "proton:UpdateEnvironmentTemplate",
    "proton.updateenvironmenttemplateversion": "proton:UpdateEnvironmentTemplateVersion",
    "proton.updateservice": "proton:UpdateService",
    "proton.updateserviceinstance": "proton:UpdateServiceInstance",
    "proton.updateservicepipeline": "proton:UpdateServicePipeline",
    "proton.updateservicetemplate": "proton:UpdateServiceTemplate",
    "proton.updateservicetemplateversion": "proton:UpdateServiceTemplateVersion",
    "proton.updatetemplatesyncconfig": "proton:UpdateTemplateSyncConfig",
    "qldb.canceljournalkinesisstream": "qldb:CancelJournalKinesisStream",
    "qldb.createledger": "qldb:CreateLedger",
    "qldb.deleteledger": "qldb:DeleteLedger",
    "qldb.describejournalkinesisstream": "qldb:DescribeJournalKinesisStream",
    "qldb.describejournals3export": "qldb:DescribeJournalS3Export",
    "qldb.describeledger": "qldb:DescribeLedger",
    "qldb.exportjournaltos3": "qldb:ExportJournalToS3",
    "qldb.getblock": "qldb:GetBlock",
    "qldb.getdigest": "qldb:GetDigest",
    "qldb.getrevision": "qldb:GetRevision",
    "qldb.listjournalkinesisstreamsforledger": "qldb:ListJournalKinesisStreamsForLedger",
    "qldb.listjournals3exports": "qldb:ListJournalS3Exports",
    "qldb.listjournals3exportsforledger": "qldb:ListJournalS3ExportsForLedger",
    "qldb.listledgers": "qldb:ListLedgers",
    "qldb.listtagsforresource": "qldb:ListTagsForResource",
    "qldb.streamjournaltokinesis": "qldb:StreamJournalToKinesis",
    "qldb.tagresource": "qldb:TagResource",
    "qldb.untagresource": "qldb:UntagResource",
    "qldb.updateledger": "qldb:UpdateLedger",
    "qldb.updateledgerpermissionsmode": "qldb:UpdateLedgerPermissionsMode",
    "qldbsession.sendcommand": "qldb:SendCommand",
    "quicksight.cancelingestion": "quicksight:CancelIngestion",
    "quicksight.createaccountcustomization": "quicksight:CreateAccountCustomization",
    "quicksight.createanalysis": "quicksight:CreateAnalysis",
    "quicksight.createdashboard": "quicksight:CreateDashboard",
    "quicksight.createdataset": "quicksight:CreateDataSet",
    "quicksight.createdatasource": "quicksight:CreateDataSource",
    "quicksight.createfolder": "quicksight:CreateFolder",
    "quicksight.createfoldermembership": "quicksight:CreateFolderMembership",
    "quicksight.creategroup": "quicksight:CreateGroup",
    "quicksight.creategroupmembership": "quicksight:CreateGroupMembership",
    "quicksight.createiampolicyassignment": "quicksight:CreateIAMPolicyAssignment",
    "quicksight.createingestion": "quicksight:CreateIngestion",
    "quicksight.createnamespace": "quicksight:CreateNamespace",
    "quicksight.createtemplate": "quicksight:CreateTemplate",
    "quicksight.createtemplatealias": "quicksight:CreateTemplateAlias",
    "quicksight.createtheme": "quicksight:CreateTheme",
    "quicksight.createthemealias": "quicksight:CreateThemeAlias",
    "quicksight.deleteaccountcustomization": "quicksight:DeleteAccountCustomization",
    "quicksight.deleteanalysis": "quicksight:DeleteAnalysis",
    "quicksight.deletedashboard": "quicksight:DeleteDashboard",
    "quicksight.deletedataset": "quicksight:DeleteDataSet",
    "quicksight.deletedatasource": "quicksight:DeleteDataSource",
    "quicksight.deletefolder": "quicksight:DeleteFolder",
    "quicksight.deletefoldermembership": "quicksight:DeleteFolderMembership",
    "quicksight.deletegroup": "quicksight:DeleteGroup",
    "quicksight.deletegroupmembership": "quicksight:DeleteGroupMembership",
    "quicksight.deleteiampolicyassignment": "quicksight:DeleteIAMPolicyAssignment",
    "quicksight.deletenamespace": "quicksight:DeleteNamespace",
    "quicksight.deletetemplate": "quicksight:DeleteTemplate",
    "quicksight.deletetemplatealias": "quicksight:DeleteTemplateAlias",
    "quicksight.deletetheme": "quicksight:DeleteTheme",
    "quicksight.deletethemealias": "quicksight:DeleteThemeAlias",
    "quicksight.deleteuser": "quicksight:DeleteUser",
    "quicksight.deleteuserbyprincipalid": "quicksight:DeleteUserByPrincipalId",
    "quicksight.describeaccountcustomization": "quicksight:DescribeAccountCustomization",
    "quicksight.describeaccountsettings": "quicksight:DescribeAccountSettings",
    "quicksight.describeanalysis": "quicksight:DescribeAnalysis",
    "quicksight.describeanalysispermissions": "quicksight:DescribeAnalysisPermissions",
    "quicksight.describedashboard": "quicksight:DescribeDashboard",
    "quicksight.describedashboardpermissions": "quicksight:DescribeDashboardPermissions",
    "quicksight.describedataset": "quicksight:DescribeDataSet",
    "quicksight.describedatasetpermissions": "quicksight:DescribeDataSetPermissions",
    "quicksight.describedatasource": "quicksight:DescribeDataSource",
    "quicksight.describedatasourcepermissions": "quicksight:DescribeDataSourcePermissions",
    "quicksight.describefolder": "quicksight:DescribeFolder",
    "quicksight.describefolderpermissions": "quicksight:DescribeFolderPermissions",
    "quicksight.describefolderresolvedpermissions": "quicksight:DescribeFolderResolvedPermissions",
    "quicksight.describegroup": "quicksight:DescribeGroup",
    "quicksight.describegroupmembership": "quicksight:DescribeGroupMembership",
    "quicksight.describeiampolicyassignment": "quicksight:DescribeIAMPolicyAssignment",
    "quicksight.describeingestion": "quicksight:DescribeIngestion",
    "quicksight.describeiprestriction": "quicksight:DescribeIpRestriction",
    "quicksight.describenamespace": "quicksight:DescribeNamespace",
    "quicksight.describetemplate": "quicksight:DescribeTemplate",
    "quicksight.describetemplatealias": "quicksight:DescribeTemplateAlias",
    "quicksight.describetemplatepermissions": "quicksight:DescribeTemplatePermissions",
    "quicksight.describetheme": "quicksight:DescribeTheme",
    "quicksight.describethemealias": "quicksight:DescribeThemeAlias",
    "quicksight.describethemepermissions": "quicksight:DescribeThemePermissions",
    "quicksight.describeuser": "quicksight:DescribeUser",
    "quicksight.generateembedurlforanonymoususer": "quicksight:GenerateEmbedUrlForAnonymousUser",
    "quicksight.generateembedurlforregistereduser": "quicksight:GenerateEmbedUrlForRegisteredUser",
    "quicksight.getdashboardembedurl": "quicksight:GetDashboardEmbedUrl",
    "quicksight.getsessionembedurl": "quicksight:GetSessionEmbedUrl",
    "quicksight.listanalyses": "quicksight:ListAnalyses",
    "quicksight.listdashboards": "quicksight:ListDashboards",
    "quicksight.listdashboardversions": "quicksight:ListDashboardVersions",
    "quicksight.listdatasets": "quicksight:ListDataSets",
    "quicksight.listdatasources": "quicksight:ListDataSources",
    "quicksight.listfoldermembers": "quicksight:ListFolderMembers",
    "quicksight.listfolders": "quicksight:ListFolders",
    "quicksight.listgroupmemberships": "quicksight:ListGroupMemberships",
    "quicksight.listgroups": "quicksight:ListGroups",
    "quicksight.listiampolicyassignments": "quicksight:ListIAMPolicyAssignments",
    "quicksight.listiampolicyassignmentsforuser": "quicksight:ListIAMPolicyAssignmentsForUser",
    "quicksight.listingestions": "quicksight:ListIngestions",
    "quicksight.listnamespaces": "quicksight:ListNamespaces",
    "quicksight.listtagsforresource": "quicksight:ListTagsForResource",
    "quicksight.listtemplatealiases": "quicksight:ListTemplateAliases",
    "quicksight.listtemplates": "quicksight:ListTemplates",
    "quicksight.listtemplateversions": "quicksight:ListTemplateVersions",
    "quicksight.listthemealiases": "quicksight:ListThemeAliases",
    "quicksight.listthemes": "quicksight:ListThemes",
    "quicksight.listthemeversions": "quicksight:ListThemeVersions",
    "quicksight.listusergroups": "quicksight:ListUserGroups",
    "quicksight.listusers": "quicksight:ListUsers",
    "quicksight.registeruser": "quicksight:RegisterUser",
    "quicksight.restoreanalysis": "quicksight:RestoreAnalysis",
    "quicksight.searchanalyses": "quicksight:SearchAnalyses",
    "quicksight.searchdashboards": "quicksight:SearchDashboards",
    "quicksight.searchfolders": "quicksight:SearchFolders",
    "quicksight.searchgroups": "quicksight:SearchGroups",
    "quicksight.tagresource": "quicksight:TagResource",
    "quicksight.untagresource": "quicksight:UntagResource",
    "quicksight.updateaccountcustomization": "quicksight:UpdateAccountCustomization",
    "quicksight.updateaccountsettings": "quicksight:UpdateAccountSettings",
    "quicksight.updateanalysis": "quicksight:UpdateAnalysis",
    "quicksight.updateanalysispermissions": "quicksight:UpdateAnalysisPermissions",
    "quicksight.updatedashboard": "quicksight:UpdateDashboard",
    "quicksight.updatedashboardpermissions": "quicksight:UpdateDashboardPermissions",
    "quicksight.updatedashboardpublishedversion": "quicksight:UpdateDashboardPublishedVersion",
    "quicksight.updatedataset": "quicksight:UpdateDataSet",
    "quicksight.updatedatasetpermissions": "quicksight:UpdateDataSetPermissions",
    "quicksight.updatedatasource": "quicksight:UpdateDataSource",
    "quicksight.updatedatasourcepermissions": "quicksight:UpdateDataSourcePermissions",
    "quicksight.updatefolder": "quicksight:UpdateFolder",
    "quicksight.updatefolderpermissions": "quicksight:UpdateFolderPermissions",
    "quicksight.updategroup": "quicksight:UpdateGroup",
    "quicksight.updateiampolicyassignment": "quicksight:UpdateIAMPolicyAssignment",
    "quicksight.updateiprestriction": "quicksight:UpdateIpRestriction",
    "quicksight.updatepublicsharingsettings": "quicksight:UpdatePublicSharingSettings",
    "quicksight.updatetemplate": "quicksight:UpdateTemplate",
    "quicksight.updatetemplatealias": "quicksight:UpdateTemplateAlias",
    "quicksight.updatetemplatepermissions": "quicksight:UpdateTemplatePermissions",
    "quicksight.updatetheme": "quicksight:UpdateTheme",
    "quicksight.updatethemealias": "quicksight:UpdateThemeAlias",
    "quicksight.updatethemepermissions": "quicksight:UpdateThemePermissions",
    "quicksight.updateuser": "quicksight:UpdateUser",
    "ram.acceptresourceshareinvitation": "ram:AcceptResourceShareInvitation",
    "ram.associateresourceshare": "ram:AssociateResourceShare",
    "ram.associateresourcesharepermission": "ram:AssociateResourceSharePermission",
    "ram.createresourceshare": "ram:CreateResourceShare",
    "ram.deleteresourceshare": "ram:DeleteResourceShare",
    "ram.disassociateresourceshare": "ram:DisassociateResourceShare",
    "ram.disassociateresourcesharepermission": "ram:DisassociateResourceSharePermission",
    "ram.enablesharingwithawsorganization": "ram:EnableSharingWithAwsOrganization",
    "ram.getpermission": "ram:GetPermission",
    "ram.getresourcepolicies": "ram:GetResourcePolicies",
    "ram.getresourceshareassociations": "ram:GetResourceShareAssociations",
    "ram.getresourceshareinvitations": "ram:GetResourceShareInvitations",
    "ram.getresourceshares": "ram:GetResourceShares",
    "ram.listpendinginvitationresources": "ram:ListPendingInvitationResources",
    "ram.listpermissions": "ram:ListPermissions",
    "ram.listpermissionversions": "ram:ListPermissionVersions",
    "ram.listprincipals": "ram:ListPrincipals",
    "ram.listresources": "ram:ListResources",
    "ram.listresourcesharepermissions": "ram:ListResourceSharePermissions",
    "ram.listresourcetypes": "ram:ListResourceTypes",
    "ram.promoteresourcesharecreatedfrompolicy": "ram:PromoteResourceShareCreatedFromPolicy",
    "ram.rejectresourceshareinvitation": "ram:RejectResourceShareInvitation",
    "ram.tagresource": "ram:TagResource",
    "ram.untagresource": "ram:UntagResource",
    "ram.updateresourceshare": "ram:UpdateResourceShare",
    "rbin.createrule": "rbin:CreateRule",
    "rbin.deleterule": "rbin:DeleteRule",
    "rbin.getrule": "rbin:GetRule",
    "rbin.listrules": "rbin:ListRules",
    "rbin.listtagsforresource": "rbin:ListTagsForResource",
    "rbin.tagresource": "rbin:TagResource",
    "rbin.untagresource": "rbin:UntagResource",
    "rbin.updaterule": "rbin:UpdateRule",
    "rds.addroletodbcluster": "rds:AddRoleToDBCluster",
    "rds.addroletodbinstance": "rds:AddRoleToDBInstance",
    "rds.addsourceidentifiertosubscription": "rds:AddSourceIdentifierToSubscription",
    "rds.addtagstoresource": "rds:AddTagsToResource",
    "rds.applypendingmaintenanceaction": "rds:ApplyPendingMaintenanceAction",
    "rds.authorizedbsecuritygroupingress": "rds:AuthorizeDBSecurityGroupIngress",
    "rds.backtrackdbcluster": "rds:BacktrackDBCluster",
    "rds.cancelexporttask": "rds:CancelExportTask",
    "rds.copydbclusterparametergroup": "rds:CopyDBClusterParameterGroup",
    "rds.copydbclustersnapshot": "rds:CopyDBClusterSnapshot",
    "rds.copydbparametergroup": "rds:CopyDBParameterGroup",
    "rds.copydbsnapshot": "rds:CopyDBSnapshot",
    "rds.copyoptiongroup": "rds:CopyOptionGroup",
    "rds.createcustomavailabilityzone": "rds:CreateCustomAvailabilityZone",
    "rds.createcustomdbengineversion": "rds:CreateCustomDBEngineVersion",
    "rds.createdbcluster": "rds:CreateDBCluster",
    "rds.createdbclusterendpoint": "rds:CreateDBClusterEndpoint",
    "rds.createdbclusterparametergroup": "rds:CreateDBClusterParameterGroup",
    "rds.createdbclustersnapshot": "rds:CreateDBClusterSnapshot",
    "rds.createdbinstance": "rds:CreateDBInstance",
    "rds.createdbinstancereadreplica": "rds:CreateDBInstanceReadReplica",
    "rds.createdbparametergroup": "rds:CreateDBParameterGroup",
    "rds.createdbproxy": "rds:CreateDBProxy",
    "rds.createdbproxyendpoint": "rds:CreateDBProxyEndpoint",
    "rds.createdbsecuritygroup": "rds:CreateDBSecurityGroup",
    "rds.createdbsnapshot": "rds:CreateDBSnapshot",
    "rds.createdbsubnetgroup": "rds:CreateDBSubnetGroup",
    "rds.createeventsubscription": "rds:CreateEventSubscription",
    "rds.createglobalcluster": "rds:CreateGlobalCluster",
    "rds.createoptiongroup": "rds:CreateOptionGroup",
    "rds.deletecustomavailabilityzone": "rds:DeleteCustomAvailabilityZone",
    "rds.deletecustomdbengineversion": "rds:DeleteCustomDBEngineVersion",
    "rds.deletedbcluster": "rds:DeleteDBCluster",
    "rds.deletedbclusterendpoint": "rds:DeleteDBClusterEndpoint",
    "rds.deletedbclusterparametergroup": "rds:DeleteDBClusterParameterGroup",
    "rds.deletedbclustersnapshot": "rds:DeleteDBClusterSnapshot",
    "rds.deletedbinstance": "rds:DeleteDBInstance",
    "rds.deletedbinstanceautomatedbackup": "rds:DeleteDBInstanceAutomatedBackup",
    "rds.deletedbparametergroup": "rds:DeleteDBParameterGroup",
    "rds.deletedbproxy": "rds:DeleteDBProxy",
    "rds.deletedbproxyendpoint": "rds:DeleteDBProxyEndpoint",
    "rds.deletedbsecuritygroup": "rds:DeleteDBSecurityGroup",
    "rds.deletedbsnapshot": "rds:DeleteDBSnapshot",
    "rds.deletedbsubnetgroup": "rds:DeleteDBSubnetGroup",
    "rds.deleteeventsubscription": "rds:DeleteEventSubscription",
    "rds.deleteglobalcluster": "rds:DeleteGlobalCluster",
    "rds.deleteinstallationmedia": "rds:DeleteInstallationMedia",
    "rds.deleteoptiongroup": "rds:DeleteOptionGroup",
    "rds.deregisterdbproxytargets": "rds:DeregisterDBProxyTargets",
    "rds.describeaccountattributes": "rds:DescribeAccountAttributes",
    "rds.describecertificates": "rds:DescribeCertificates",
    "rds.describecustomavailabilityzones": "rds:DescribeCustomAvailabilityZones",
    "rds.describedbclusterbacktracks": "rds:DescribeDBClusterBacktracks",
    "rds.describedbclusterendpoints": "rds:DescribeDBClusterEndpoints",
    "rds.describedbclusterparametergroups": "rds:DescribeDBClusterParameterGroups",
    "rds.describedbclusterparameters": "rds:DescribeDBClusterParameters",
    "rds.describedbclusters": "rds:DescribeDBClusters",
    "rds.describedbclustersnapshotattributes": "rds:DescribeDBClusterSnapshotAttributes",
    "rds.describedbclustersnapshots": "rds:DescribeDBClusterSnapshots",
    "rds.describedbengineversions": "rds:DescribeDBEngineVersions",
    "rds.describedbinstanceautomatedbackups": "rds:DescribeDBInstanceAutomatedBackups",
    "rds.describedbinstances": "rds:DescribeDBInstances",
    "rds.describedblogfiles": "rds:DescribeDBLogFiles",
    "rds.describedbparametergroups": "rds:DescribeDBParameterGroups",
    "rds.describedbparameters": "rds:DescribeDBParameters",
    "rds.describedbproxies": "rds:DescribeDBProxies",
    "rds.describedbproxyendpoints": "rds:DescribeDBProxyEndpoints",
    "rds.describedbproxytargetgroups": "rds:DescribeDBProxyTargetGroups",
    "rds.describedbproxytargets": "rds:DescribeDBProxyTargets",
    "rds.describedbsecuritygroups": "rds:DescribeDBSecurityGroups",
    "rds.describedbsnapshotattributes": "rds:DescribeDBSnapshotAttributes",
    "rds.describedbsnapshots": "rds:DescribeDBSnapshots",
    "rds.describedbsubnetgroups": "rds:DescribeDBSubnetGroups",
    "rds.describeenginedefaultclusterparameters": "rds:DescribeEngineDefaultClusterParameters",
    "rds.describeenginedefaultparameters": "rds:DescribeEngineDefaultParameters",
    "rds.describeeventcategories": "rds:DescribeEventCategories",
    "rds.describeevents": "rds:DescribeEvents",
    "rds.describeeventsubscriptions": "rds:DescribeEventSubscriptions",
    "rds.describeexporttasks": "rds:DescribeExportTasks",
    "rds.describeglobalclusters": "rds:DescribeGlobalClusters",
    "rds.describeinstallationmedia": "rds:DescribeInstallationMedia",
    "rds.describeoptiongroupoptions": "rds:DescribeOptionGroupOptions",
    "rds.describeoptiongroups": "rds:DescribeOptionGroups",
    "rds.describeorderabledbinstanceoptions": "rds:DescribeOrderableDBInstanceOptions",
    "rds.describependingmaintenanceactions": "rds:DescribePendingMaintenanceActions",
    "rds.describereserveddbinstances": "rds:DescribeReservedDBInstances",
    "rds.describereserveddbinstancesofferings": "rds:DescribeReservedDBInstancesOfferings",
    "rds.describesourceregions": "rds:DescribeSourceRegions",
    "rds.describevaliddbinstancemodifications": "rds:DescribeValidDBInstanceModifications",
    "rds.downloaddblogfileportion": "rds:DownloadDBLogFilePortion",
    "rds.failoverdbcluster": "rds:FailoverDBCluster",
    "rds.failoverglobalcluster": "rds:FailoverGlobalCluster",
    "rds.importinstallationmedia": "rds:ImportInstallationMedia",
    "rds.listtagsforresource": "rds:ListTagsForResource",
    "rds.modifycertificates": "rds:ModifyCertificates",
    "rds.modifycurrentdbclustercapacity": "rds:ModifyCurrentDBClusterCapacity",
    "rds.modifycustomdbengineversion": "rds:ModifyCustomDBEngineVersion",
    "rds.modifydbcluster": "rds:ModifyDBCluster",
    "rds.modifydbclusterendpoint": "rds:ModifyDBClusterEndpoint",
    "rds.modifydbclusterparametergroup": "rds:ModifyDBClusterParameterGroup",
    "rds.modifydbclustersnapshotattribute": "rds:ModifyDBClusterSnapshotAttribute",
    "rds.modifydbinstance": "rds:ModifyDBInstance",
    "rds.modifydbparametergroup": "rds:ModifyDBParameterGroup",
    "rds.modifydbproxy": "rds:ModifyDBProxy",
    "rds.modifydbproxyendpoint": "rds:ModifyDBProxyEndpoint",
    "rds.modifydbproxytargetgroup": "rds:ModifyDBProxyTargetGroup",
    "rds.modifydbsnapshot": "rds:ModifyDBSnapshot",
    "rds.modifydbsnapshotattribute": "rds:ModifyDBSnapshotAttribute",
    "rds.modifydbsubnetgroup": "rds:ModifyDBSubnetGroup",
    "rds.modifyeventsubscription": "rds:ModifyEventSubscription",
    "rds.modifyglobalcluster": "rds:ModifyGlobalCluster",
    "rds.modifyoptiongroup": "rds:ModifyOptionGroup",
    "rds.promotereadreplica": "rds:PromoteReadReplica",
    "rds.promotereadreplicadbcluster": "rds:PromoteReadReplicaDBCluster",
    "rds.purchasereserveddbinstancesoffering": "rds:PurchaseReservedDBInstancesOffering",
    "rds.rebootdbcluster": "rds:RebootDBCluster",
    "rds.rebootdbinstance": "rds:RebootDBInstance",
    "rds.registerdbproxytargets": "rds:RegisterDBProxyTargets",
    "rds.removefromglobalcluster": "rds:RemoveFromGlobalCluster",
    "rds.removerolefromdbcluster": "rds:RemoveRoleFromDBCluster",
    "rds.removerolefromdbinstance": "rds:RemoveRoleFromDBInstance",
    "rds.removesourceidentifierfromsubscription": "rds:RemoveSourceIdentifierFromSubscription",
    "rds.removetagsfromresource": "rds:RemoveTagsFromResource",
    "rds.resetdbclusterparametergroup": "rds:ResetDBClusterParameterGroup",
    "rds.resetdbparametergroup": "rds:ResetDBParameterGroup",
    "rds.restoredbclusterfroms3": "rds:RestoreDBClusterFromS3",
    "rds.restoredbclusterfromsnapshot": "rds:RestoreDBClusterFromSnapshot",
    "rds.restoredbclustertopointintime": "rds:RestoreDBClusterToPointInTime",
    "rds.restoredbinstancefromdbsnapshot": "rds:RestoreDBInstanceFromDBSnapshot",
    "rds.restoredbinstancefroms3": "rds:RestoreDBInstanceFromS3",
    "rds.restoredbinstancetopointintime": "rds:RestoreDBInstanceToPointInTime",
    "rds.revokedbsecuritygroupingress": "rds:RevokeDBSecurityGroupIngress",
    "rds.startactivitystream": "rds:StartActivityStream",
    "rds.startdbcluster": "rds:StartDBCluster",
    "rds.startdbinstance": "rds:StartDBInstance",
    "rds.startdbinstanceautomatedbackupsreplication": "rds:StartDBInstanceAutomatedBackupsReplication",
    "rds.startexporttask": "rds:StartExportTask",
    "rds.stopactivitystream": "rds:StopActivityStream",
    "rds.stopdbcluster": "rds:StopDBCluster",
    "rds.stopdbinstance": "rds:StopDBInstance",
    "rds.stopdbinstanceautomatedbackupsreplication": "rds:StopDBInstanceAutomatedBackupsReplication",
    "rdsdataservice.batchexecutestatement": "rds-data:BatchExecuteStatement",
    "rdsdataservice.begintransaction": "rds-data:BeginTransaction",
    "rdsdataservice.committransaction": "rds-data:CommitTransaction",
    "rdsdataservice.executesql": "rds-data:ExecuteSql",
    "rdsdataservice.executestatement": "rds-data:ExecuteStatement",
    "rdsdataservice.rollbacktransaction": "rds-data:RollbackTransaction",
    "redshift.acceptreservednodeexchange": "redshift:AcceptReservedNodeExchange",
    "redshift.addpartner": "redshift:AddPartner",
    "redshift.associatedatashareconsumer": "redshift:AssociateDataShareConsumer",
    "redshift.authorizeclustersecuritygroupingress": "redshift:AuthorizeClusterSecurityGroupIngress",
    "redshift.authorizedatashare": "redshift:AuthorizeDataShare",
    "redshift.authorizeendpointaccess": "redshift:AuthorizeEndpointAccess",
    "redshift.authorizesnapshotaccess": "redshift:AuthorizeSnapshotAccess",
    "redshift.batchdeleteclustersnapshots": "redshift:BatchDeleteClusterSnapshots",
    "redshift.batchmodifyclustersnapshots": "redshift:BatchModifyClusterSnapshots",
    "redshift.cancelresize": "redshift:CancelResize",
    "redshift.copyclustersnapshot": "redshift:CopyClusterSnapshot",
    "redshift.createauthenticationprofile": "redshift:CreateAuthenticationProfile",
    "redshift.createcluster": "redshift:CreateCluster",
    "redshift.createclusterparametergroup": "redshift:CreateClusterParameterGroup",
    "redshift.createclustersecuritygroup": "redshift:CreateClusterSecurityGroup",
    "redshift.createclustersnapshot": "redshift:CreateClusterSnapshot",
    "redshift.createclustersubnetgroup": "redshift:CreateClusterSubnetGroup",
    "redshift.createendpointaccess": "redshift:CreateEndpointAccess",
    "redshift.createeventsubscription": "redshift:CreateEventSubscription",
    "redshift.createhsmclientcertificate": "redshift:CreateHsmClientCertificate",
    "redshift.createhsmconfiguration": "redshift:CreateHsmConfiguration",
    "redshift.createscheduledaction": "redshift:CreateScheduledAction",
    "redshift.createsnapshotcopygrant": "redshift:CreateSnapshotCopyGrant",
    "redshift.createsnapshotschedule": "redshift:CreateSnapshotSchedule",
    "redshift.createtags": "redshift:CreateTags",
    "redshift.createusagelimit": "redshift:CreateUsageLimit",
    "redshift.deauthorizedatashare": "redshift:DeauthorizeDataShare",
    "redshift.deleteauthenticationprofile": "redshift:DeleteAuthenticationProfile",
    "redshift.deletecluster": "redshift:DeleteCluster",
    "redshift.deleteclusterparametergroup": "redshift:DeleteClusterParameterGroup",
    "redshift.deleteclustersecuritygroup": "redshift:DeleteClusterSecurityGroup",
    "redshift.deleteclustersnapshot": "redshift:DeleteClusterSnapshot",
    "redshift.deleteclustersubnetgroup": "redshift:DeleteClusterSubnetGroup",
    "redshift.deleteendpointaccess": "redshift:DeleteEndpointAccess",
    "redshift.deleteeventsubscription": "redshift:DeleteEventSubscription",
    "redshift.deletehsmclientcertificate": "redshift:DeleteHsmClientCertificate",
    "redshift.deletehsmconfiguration": "redshift:DeleteHsmConfiguration",
    "redshift.deletepartner": "redshift:DeletePartner",
    "redshift.deletescheduledaction": "redshift:DeleteScheduledAction",
    "redshift.deletesnapshotcopygrant": "redshift:DeleteSnapshotCopyGrant",
    "redshift.deletesnapshotschedule": "redshift:DeleteSnapshotSchedule",
    "redshift.deletetags": "redshift:DeleteTags",
    "redshift.deleteusagelimit": "redshift:DeleteUsageLimit",
    "redshift.describeaccountattributes": "redshift:DescribeAccountAttributes",
    "redshift.describeauthenticationprofiles": "redshift:DescribeAuthenticationProfiles",
    "redshift.describeclusterdbrevisions": "redshift:DescribeClusterDbRevisions",
    "redshift.describeclusterparametergroups": "redshift:DescribeClusterParameterGroups",
    "redshift.describeclusterparameters": "redshift:DescribeClusterParameters",
    "redshift.describeclusters": "redshift:DescribeClusters",
    "redshift.describeclustersecuritygroups": "redshift:DescribeClusterSecurityGroups",
    "redshift.describeclustersnapshots": "redshift:DescribeClusterSnapshots",
    "redshift.describeclustersubnetgroups": "redshift:DescribeClusterSubnetGroups",
    "redshift.describeclustertracks": "redshift:DescribeClusterTracks",
    "redshift.describeclusterversions": "redshift:DescribeClusterVersions",
    "redshift.describedatashares": "redshift:DescribeDataShares",
    "redshift.describedatasharesforconsumer": "redshift:DescribeDataSharesForConsumer",
    "redshift.describedatasharesforproducer": "redshift:DescribeDataSharesForProducer",
    "redshift.describedefaultclusterparameters": "redshift:DescribeDefaultClusterParameters",
    "redshift.describeendpointaccess": "redshift:DescribeEndpointAccess",
    "redshift.describeendpointauthorization": "redshift:DescribeEndpointAuthorization",
    "redshift.describeeventcategories": "redshift:DescribeEventCategories",
    "redshift.describeevents": "redshift:DescribeEvents",
    "redshift.describeeventsubscriptions": "redshift:DescribeEventSubscriptions",
    "redshift.describehsmclientcertificates": "redshift:DescribeHsmClientCertificates",
    "redshift.describehsmconfigurations": "redshift:DescribeHsmConfigurations",
    "redshift.describeloggingstatus": "redshift:DescribeLoggingStatus",
    "redshift.describenodeconfigurationoptions": "redshift:DescribeNodeConfigurationOptions",
    "redshift.describeorderableclusteroptions": "redshift:DescribeOrderableClusterOptions",
    "redshift.describepartners": "redshift:DescribePartners",
    "redshift.describereservednodeexchangestatus": "redshift:DescribeReservedNodeExchangeStatus",
    "redshift.describereservednodeofferings": "redshift:DescribeReservedNodeOfferings",
    "redshift.describereservednodes": "redshift:DescribeReservedNodes",
    "redshift.describeresize": "redshift:DescribeResize",
    "redshift.describescheduledactions": "redshift:DescribeScheduledActions",
    "redshift.describesnapshotcopygrants": "redshift:DescribeSnapshotCopyGrants",
    "redshift.describesnapshotschedules": "redshift:DescribeSnapshotSchedules",
    "redshift.describestorage": "redshift:DescribeStorage",
    "redshift.describetablerestorestatus": "redshift:DescribeTableRestoreStatus",
    "redshift.describetags": "redshift:DescribeTags",
    "redshift.describeusagelimits": "redshift:DescribeUsageLimits",
    "redshift.disablelogging": "redshift:DisableLogging",
    "redshift.disablesnapshotcopy": "redshift:DisableSnapshotCopy",
    "redshift.disassociatedatashareconsumer": "redshift:DisassociateDataShareConsumer",
    "redshift.enablelogging": "redshift:EnableLogging",
    "redshift.enablesnapshotcopy": "redshift:EnableSnapshotCopy",
    "redshift.getclustercredentials": "redshift:GetClusterCredentials",
    "redshift.getreservednodeexchangeconfigurationoptions": "redshift:GetReservedNodeExchangeConfigurationOptions",
    "redshift.getreservednodeexchangeofferings": "redshift:GetReservedNodeExchangeOfferings",
    "redshift.modifyaquaconfiguration": "redshift:ModifyAquaConfiguration",
    "redshift.modifyauthenticationprofile": "redshift:ModifyAuthenticationProfile",
    "redshift.modifycluster": "redshift:ModifyCluster",
    "redshift.modifyclusterdbrevision": "redshift:ModifyClusterDbRevision",
    "redshift.modifyclusteriamroles": "redshift:ModifyClusterIamRoles",
    "redshift.modifyclustermaintenance": "redshift:ModifyClusterMaintenance",
    "redshift.modifyclusterparametergroup": "redshift:ModifyClusterParameterGroup",
    "redshift.modifyclustersnapshot": "redshift:ModifyClusterSnapshot",
    "redshift.modifyclustersnapshotschedule": "redshift:ModifyClusterSnapshotSchedule",
    "redshift.modifyclustersubnetgroup": "redshift:ModifyClusterSubnetGroup",
    "redshift.modifyendpointaccess": "redshift:ModifyEndpointAccess",
    "redshift.modifyeventsubscription": "redshift:ModifyEventSubscription",
    "redshift.modifyscheduledaction": "redshift:ModifyScheduledAction",
    "redshift.modifysnapshotcopyretentionperiod": "redshift:ModifySnapshotCopyRetentionPeriod",
    "redshift.modifysnapshotschedule": "redshift:ModifySnapshotSchedule",
    "redshift.modifyusagelimit": "redshift:ModifyUsageLimit",
    "redshift.pausecluster": "redshift:PauseCluster",
    "redshift.purchasereservednodeoffering": "redshift:PurchaseReservedNodeOffering",
    "redshift.rebootcluster": "redshift:RebootCluster",
    "redshift.rejectdatashare": "redshift:RejectDataShare",
    "redshift.resetclusterparametergroup": "redshift:ResetClusterParameterGroup",
    "redshift.resizecluster": "redshift:ResizeCluster",
    "redshift.restorefromclustersnapshot": "redshift:RestoreFromClusterSnapshot",
    "redshift.restoretablefromclustersnapshot": "redshift:RestoreTableFromClusterSnapshot",
    "redshift.resumecluster": "redshift:ResumeCluster",
    "redshift.revokeclustersecuritygroupingress": "redshift:RevokeClusterSecurityGroupIngress",
    "redshift.revokeendpointaccess": "redshift:RevokeEndpointAccess",
    "redshift.revokesnapshotaccess": "redshift:RevokeSnapshotAccess",
    "redshift.rotateencryptionkey": "redshift:RotateEncryptionKey",
    "redshift.updatepartnerstatus": "redshift:UpdatePartnerStatus",
    "redshiftdata.batchexecutestatement": "redshift-data:BatchExecuteStatement",
    "redshiftdata.cancelstatement": "redshift-data:CancelStatement",
    "redshiftdata.describestatement": "redshift-data:DescribeStatement",
    "redshiftdata.describetable": "redshift-data:DescribeTable",
    "redshiftdata.executestatement": "redshift-data:ExecuteStatement",
    "redshiftdata.getstatementresult": "redshift-data:GetStatementResult",
    "redshiftdata.listdatabases": "redshift-data:ListDatabases",
    "redshiftdata.listschemas": "redshift-data:ListSchemas",
    "redshiftdata.liststatements": "redshift-data:ListStatements",
    "redshiftdata.listtables": "redshift-data:ListTables",
    "rekognition.comparefaces": "rekognition:CompareFaces",
    "rekognition.createcollection": "rekognition:CreateCollection",
    "rekognition.createdataset": "rekognition:CreateDataset",
    "rekognition.createproject": "rekognition:CreateProject",
    "rekognition.createprojectversion": "rekognition:CreateProjectVersion",
    "rekognition.createstreamprocessor": "rekognition:CreateStreamProcessor",
    "rekognition.deletecollection": "rekognition:DeleteCollection",
    "rekognition.deletedataset": "rekognition:DeleteDataset",
    "rekognition.deletefaces": "rekognition:DeleteFaces",
    "rekognition.deleteproject": "rekognition:DeleteProject",
    "rekognition.deleteprojectversion": "rekognition:DeleteProjectVersion",
    "rekognition.deletestreamprocessor": "rekognition:DeleteStreamProcessor",
    "rekognition.describecollection": "rekognition:DescribeCollection",
    "rekognition.describedataset": "rekognition:DescribeDataset",
    "rekognition.describeprojects": "rekognition:DescribeProjects",
    "rekognition.describeprojectversions": "rekognition:DescribeProjectVersions",
    "rekognition.describestreamprocessor": "rekognition:DescribeStreamProcessor",
    "rekognition.detectcustomlabels": "rekognition:DetectCustomLabels",
    "rekognition.detectfaces": "rekognition:DetectFaces",
    "rekognition.detectlabels": "rekognition:DetectLabels",
    "rekognition.detectmoderationlabels": "rekognition:DetectModerationLabels",
    "rekognition.detectprotectiveequipment": "rekognition:DetectProtectiveEquipment",
    "rekognition.detecttext": "rekognition:DetectText",
    "rekognition.distributedatasetentries": "rekognition:DistributeDatasetEntries",
    "rekognition.getcelebrityinfo": "rekognition:GetCelebrityInfo",
    "rekognition.getcelebrityrecognition": "rekognition:GetCelebrityRecognition",
    "rekognition.getcontentmoderation": "rekognition:GetContentModeration",
    "rekognition.getfacedetection": "rekognition:GetFaceDetection",
    "rekognition.getfacesearch": "rekognition:GetFaceSearch",
    "rekognition.getlabeldetection": "rekognition:GetLabelDetection",
    "rekognition.getpersontracking": "rekognition:GetPersonTracking",
    "rekognition.getsegmentdetection": "rekognition:GetSegmentDetection",
    "rekognition.gettextdetection": "rekognition:GetTextDetection",
    "rekognition.indexfaces": "rekognition:IndexFaces",
    "rekognition.listcollections": "rekognition:ListCollections",
    "rekognition.listdatasetentries": "rekognition:ListDatasetEntries",
    "rekognition.listdatasetlabels": "rekognition:ListDatasetLabels",
    "rekognition.listfaces": "rekognition:ListFaces",
    "rekognition.liststreamprocessors": "rekognition:ListStreamProcessors",
    "rekognition.listtagsforresource": "rekognition:ListTagsForResource",
    "rekognition.recognizecelebrities": "rekognition:RecognizeCelebrities",
    "rekognition.searchfaces": "rekognition:SearchFaces",
    "rekognition.searchfacesbyimage": "rekognition:SearchFacesByImage",
    "rekognition.startcelebrityrecognition": "rekognition:StartCelebrityRecognition",
    "rekognition.startcontentmoderation": "rekognition:StartContentModeration",
    "rekognition.startfacedetection": "rekognition:StartFaceDetection",
    "rekognition.startfacesearch": "rekognition:StartFaceSearch",
    "rekognition.startlabeldetection": "rekognition:StartLabelDetection",
    "rekognition.startpersontracking": "rekognition:StartPersonTracking",
    "rekognition.startprojectversion": "rekognition:StartProjectVersion",
    "rekognition.startsegmentdetection": "rekognition:StartSegmentDetection",
    "rekognition.startstreamprocessor": "rekognition:StartStreamProcessor",
    "rekognition.starttextdetection": "rekognition:StartTextDetection",
    "rekognition.stopprojectversion": "rekognition:StopProjectVersion",
    "rekognition.stopstreamprocessor": "rekognition:StopStreamProcessor",
    "rekognition.tagresource": "rekognition:TagResource",
    "rekognition.untagresource": "rekognition:UntagResource",
    "rekognition.updatedatasetentries": "rekognition:UpdateDatasetEntries",
    "rekognition.updatestreamprocessor": "rekognition:UpdateStreamProcessor",
    "resiliencehub.adddraftappversionresourcemappings": "resiliencehub:AddDraftAppVersionResourceMappings",
    "resiliencehub.createapp": "resiliencehub:CreateApp",
    "resiliencehub.createrecommendationtemplate": "resiliencehub:CreateRecommendationTemplate",
    "resiliencehub.createresiliencypolicy": "resiliencehub:CreateResiliencyPolicy",
    "resiliencehub.deleteapp": "resiliencehub:DeleteApp",
    "resiliencehub.deleteappassessment": "resiliencehub:DeleteAppAssessment",
    "resiliencehub.deleterecommendationtemplate": "resiliencehub:DeleteRecommendationTemplate",
    "resiliencehub.deleteresiliencypolicy": "resiliencehub:DeleteResiliencyPolicy",
    "resiliencehub.describeapp": "resiliencehub:DescribeApp",
    "resiliencehub.describeappassessment": "resiliencehub:DescribeAppAssessment",
    "resiliencehub.describeappversionresourcesresolutionstatus": "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
    "resiliencehub.describeappversiontemplate": "resiliencehub:DescribeAppVersionTemplate",
    "resiliencehub.describedraftappversionresourcesimportstatus": "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
    "resiliencehub.describeresiliencypolicy": "resiliencehub:DescribeResiliencyPolicy",
    "resiliencehub.importresourcestodraftappversion": "resiliencehub:ImportResourcesToDraftAppVersion",
    "resiliencehub.listalarmrecommendations": "resiliencehub:ListAlarmRecommendations",
    "resiliencehub.listappassessments": "resiliencehub:ListAppAssessments",
    "resiliencehub.listappcomponentcompliances": "resiliencehub:ListAppComponentCompliances",
    "resiliencehub.listappcomponentrecommendations": "resiliencehub:ListAppComponentRecommendations",
    "resiliencehub.listapps": "resiliencehub:ListApps",
    "resiliencehub.listappversionresourcemappings": "resiliencehub:ListAppVersionResourceMappings",
    "resiliencehub.listappversionresources": "resiliencehub:ListAppVersionResources",
    "resiliencehub.listappversions": "resiliencehub:ListAppVersions",
    "resiliencehub.listrecommendationtemplates": "resiliencehub:ListRecommendationTemplates",
    "resiliencehub.listresiliencypolicies": "resiliencehub:ListResiliencyPolicies",
    "resiliencehub.listsoprecommendations": "resiliencehub:ListSopRecommendations",
    "resiliencehub.listsuggestedresiliencypolicies": "resiliencehub:ListSuggestedResiliencyPolicies",
    "resiliencehub.listtagsforresource": "resiliencehub:ListTagsForResource",
    "resiliencehub.listtestrecommendations": "resiliencehub:ListTestRecommendations",
    "resiliencehub.listunsupportedappversionresources": "resiliencehub:ListUnsupportedAppVersionResources",
    "resiliencehub.publishappversion": "resiliencehub:PublishAppVersion",
    "resiliencehub.putdraftappversiontemplate": "resiliencehub:PutDraftAppVersionTemplate",
    "resiliencehub.removedraftappversionresourcemappings": "resiliencehub:RemoveDraftAppVersionResourceMappings",
    "resiliencehub.resolveappversionresources": "resiliencehub:ResolveAppVersionResources",
    "resiliencehub.startappassessment": "resiliencehub:StartAppAssessment",
    "resiliencehub.tagresource": "resiliencehub:TagResource",
    "resiliencehub.untagresource": "resiliencehub:UntagResource",
    "resiliencehub.updateapp": "resiliencehub:UpdateApp",
    "resiliencehub.updateresiliencypolicy": "resiliencehub:UpdateResiliencyPolicy",
    "resourcegroups.creategroup": "resource-groups:CreateGroup",
    "resourcegroups.deletegroup": "resource-groups:DeleteGroup",
    "resourcegroups.getgroup": "resource-groups:GetGroup",
    "resourcegroups.getgroupconfiguration": "resource-groups:GetGroupConfiguration",
    "resourcegroups.getgroupquery": "resource-groups:GetGroupQuery",
    "resourcegroups.gettags": "resource-groups:GetTags",
    "resourcegroups.groupresources": "resource-groups:GroupResources",
    "resourcegroups.listgroupresources": "resource-groups:ListGroupResources",
    "resourcegroups.listgroups": "resource-groups:ListGroups",
    "resourcegroups.putgroupconfiguration": "resource-groups:PutGroupConfiguration",
    "resourcegroups.searchresources": "resource-groups:SearchResources",
    "resourcegroups.tag": "resource-groups:Tag",
    "resourcegroups.ungroupresources": "resource-groups:UngroupResources",
    "resourcegroups.untag": "resource-groups:Untag",
    "resourcegroups.updategroup": "resource-groups:UpdateGroup",
    "resourcegroups.updategroupquery": "resource-groups:UpdateGroupQuery",
    "resourcegroupstaggingapi.describereportcreation": "tag:DescribeReportCreation",
    "resourcegroupstaggingapi.getcompliancesummary": "tag:GetComplianceSummary",
    "resourcegroupstaggingapi.getresources": "tag:GetResources",
    "resourcegroupstaggingapi.gettagkeys": "tag:GetTagKeys",
    "resourcegroupstaggingapi.gettagvalues": "tag:GetTagValues",
    "resourcegroupstaggingapi.startreportcreation": "tag:StartReportCreation",
    "resourcegroupstaggingapi.tagresources": "tag:TagResources",
    "resourcegroupstaggingapi.untagresources": "tag:UntagResources",
    "robomaker.batchdeleteworlds": "robomaker:BatchDeleteWorlds",
    "robomaker.batchdescribesimulationjob": "robomaker:BatchDescribeSimulationJob",
    "robomaker.canceldeploymentjob": "robomaker:CancelDeploymentJob",
    "robomaker.cancelsimulationjob": "robomaker:CancelSimulationJob",
    "robomaker.cancelsimulationjobbatch": "robomaker:CancelSimulationJobBatch",
    "robomaker.cancelworldexportjob": "robomaker:CancelWorldExportJob",
    "robomaker.cancelworldgenerationjob": "robomaker:CancelWorldGenerationJob",
    "robomaker.createdeploymentjob": "robomaker:CreateDeploymentJob",
    "robomaker.createfleet": "robomaker:CreateFleet",
    "robomaker.createrobot": "robomaker:CreateRobot",
    "robomaker.createrobotapplication": "robomaker:CreateRobotApplication",
    "robomaker.createrobotapplicationversion": "robomaker:CreateRobotApplicationVersion",
    "robomaker.createsimulationapplication": "robomaker:CreateSimulationApplication",
    "robomaker.createsimulationapplicationversion": "robomaker:CreateSimulationApplicationVersion",
    "robomaker.createsimulationjob": "robomaker:CreateSimulationJob",
    "robomaker.createworldexportjob": "robomaker:CreateWorldExportJob",
    "robomaker.createworldgenerationjob": "robomaker:CreateWorldGenerationJob",
    "robomaker.createworldtemplate": "robomaker:CreateWorldTemplate",
    "robomaker.deletefleet": "robomaker:DeleteFleet",
    "robomaker.deleterobot": "robomaker:DeleteRobot",
    "robomaker.deleterobotapplication": "robomaker:DeleteRobotApplication",
    "robomaker.deletesimulationapplication": "robomaker:DeleteSimulationApplication",
    "robomaker.deleteworldtemplate": "robomaker:DeleteWorldTemplate",
    "robomaker.deregisterrobot": "robomaker:DeregisterRobot",
    "robomaker.describedeploymentjob": "robomaker:DescribeDeploymentJob",
    "robomaker.describefleet": "robomaker:DescribeFleet",
    "robomaker.describerobot": "robomaker:DescribeRobot",
    "robomaker.describerobotapplication": "robomaker:DescribeRobotApplication",
    "robomaker.describesimulationapplication": "robomaker:DescribeSimulationApplication",
    "robomaker.describesimulationjob": "robomaker:DescribeSimulationJob",
    "robomaker.describesimulationjobbatch": "robomaker:DescribeSimulationJobBatch",
    "robomaker.describeworld": "robomaker:DescribeWorld",
    "robomaker.describeworldexportjob": "robomaker:DescribeWorldExportJob",
    "robomaker.describeworldgenerationjob": "robomaker:DescribeWorldGenerationJob",
    "robomaker.describeworldtemplate": "robomaker:DescribeWorldTemplate",
    "robomaker.getworldtemplatebody": "robomaker:GetWorldTemplateBody",
    "robomaker.listdeploymentjobs": "robomaker:ListDeploymentJobs",
    "robomaker.listfleets": "robomaker:ListFleets",
    "robomaker.listrobotapplications": "robomaker:ListRobotApplications",
    "robomaker.listrobots": "robomaker:ListRobots",
    "robomaker.listsimulationapplications": "robomaker:ListSimulationApplications",
    "robomaker.listsimulationjobbatches": "robomaker:ListSimulationJobBatches",
    "robomaker.listsimulationjobs": "robomaker:ListSimulationJobs",
    "robomaker.listtagsforresource": "robomaker:ListTagsForResource",
    "robomaker.listworldexportjobs": "robomaker:ListWorldExportJobs",
    "robomaker.listworldgenerationjobs": "robomaker:ListWorldGenerationJobs",
    "robomaker.listworlds": "robomaker:ListWorlds",
    "robomaker.listworldtemplates": "robomaker:ListWorldTemplates",
    "robomaker.registerrobot": "robomaker:RegisterRobot",
    "robomaker.restartsimulationjob": "robomaker:RestartSimulationJob",
    "robomaker.startsimulationjobbatch": "robomaker:StartSimulationJobBatch",
    "robomaker.syncdeploymentjob": "robomaker:SyncDeploymentJob",
    "robomaker.tagresource": "robomaker:TagResource",
    "robomaker.untagresource": "robomaker:UntagResource",
    "robomaker.updaterobotapplication": "robomaker:UpdateRobotApplication",
    "robomaker.updatesimulationapplication": "robomaker:UpdateSimulationApplication",
    "robomaker.updateworldtemplate": "robomaker:UpdateWorldTemplate",
    "route53.activatekeysigningkey": "route53:ActivateKeySigningKey",
    "route53.associatevpcwithhostedzone": "route53:AssociateVPCWithHostedZone",
    "route53.changecidrcollection": "route53:ChangeCidrCollection",
    "route53.changeresourcerecordsets": "route53:ChangeResourceRecordSets",
    "route53.changetagsforresource": "route53:ChangeTagsForResource",
    "route53.createcidrcollection": "route53:CreateCidrCollection",
    "route53.createhealthcheck": "route53:CreateHealthCheck",
    "route53.createhostedzone": "route53:CreateHostedZone",
    "route53.createkeysigningkey": "route53:CreateKeySigningKey",
    "route53.createqueryloggingconfig": "route53:CreateQueryLoggingConfig",
    "route53.createreusabledelegationset": "route53:CreateReusableDelegationSet",
    "route53.createtrafficpolicy": "route53:CreateTrafficPolicy",
    "route53.createtrafficpolicyinstance": "route53:CreateTrafficPolicyInstance",
    "route53.createtrafficpolicyversion": "route53:CreateTrafficPolicyVersion",
    "route53.createvpcassociationauthorization": "route53:CreateVPCAssociationAuthorization",
    "route53.deactivatekeysigningkey": "route53:DeactivateKeySigningKey",
    "route53.deletecidrcollection": "route53:DeleteCidrCollection",
    "route53.deletehealthcheck": "route53:DeleteHealthCheck",
    "route53.deletehostedzone": "route53:DeleteHostedZone",
    "route53.deletekeysigningkey": "route53:DeleteKeySigningKey",
    "route53.deletequeryloggingconfig": "route53:DeleteQueryLoggingConfig",
    "route53.deletereusabledelegationset": "route53:DeleteReusableDelegationSet",
    "route53.deletetrafficpolicy": "route53:DeleteTrafficPolicy",
    "route53.deletetrafficpolicyinstance": "route53:DeleteTrafficPolicyInstance",
    "route53.deletevpcassociationauthorization": "route53:DeleteVPCAssociationAuthorization",
    "route53.disablehostedzonednssec": "route53:DisableHostedZoneDNSSEC",
    "route53.disassociatevpcfromhostedzone": "route53:DisassociateVPCFromHostedZone",
    "route53.enablehostedzonednssec": "route53:EnableHostedZoneDNSSEC",
    "route53.getaccountlimit": "route53:GetAccountLimit",
    "route53.getchange": "route53:GetChange",
    "route53.getcheckeripranges": "route53:GetCheckerIpRanges",
    "route53.getdnssec": "route53:GetDNSSEC",
    "route53.getgeolocation": "route53:GetGeoLocation",
    "route53.gethealthcheck": "route53:GetHealthCheck",
    "route53.gethealthcheckcount": "route53:GetHealthCheckCount",
    "route53.gethealthchecklastfailurereason": "route53:GetHealthCheckLastFailureReason",
    "route53.gethealthcheckstatus": "route53:GetHealthCheckStatus",
    "route53.gethostedzone": "route53:GetHostedZone",
    "route53.gethostedzonecount": "route53:GetHostedZoneCount",
    "route53.gethostedzonelimit": "route53:GetHostedZoneLimit",
    "route53.getqueryloggingconfig": "route53:GetQueryLoggingConfig",
    "route53.getreusabledelegationset": "route53:GetReusableDelegationSet",
    "route53.getreusabledelegationsetlimit": "route53:GetReusableDelegationSetLimit",
    "route53.gettrafficpolicy": "route53:GetTrafficPolicy",
    "route53.gettrafficpolicyinstance": "route53:GetTrafficPolicyInstance",
    "route53.gettrafficpolicyinstancecount": "route53:GetTrafficPolicyInstanceCount",
    "route53.listcidrblocks": "route53:ListCidrBlocks",
    "route53.listcidrcollections": "route53:ListCidrCollections",
    "route53.listcidrlocations": "route53:ListCidrLocations",
    "route53.listgeolocations": "route53:ListGeoLocations",
    "route53.listhealthchecks": "route53:ListHealthChecks",
    "route53.listhostedzones": "route53:ListHostedZones",
    "route53.listhostedzonesbyname": "route53:ListHostedZonesByName",
    "route53.listhostedzonesbyvpc": "route53:ListHostedZonesByVPC",
    "route53.listqueryloggingconfigs": "route53:ListQueryLoggingConfigs",
    "route53.listresourcerecordsets": "route53:ListResourceRecordSets",
    "route53.listreusabledelegationsets": "route53:ListReusableDelegationSets",
    "route53.listtagsforresource": "route53:ListTagsForResource",
    "route53.listtagsforresources": "route53:ListTagsForResources",
    "route53.listtrafficpolicies": "route53:ListTrafficPolicies",
    "route53.listtrafficpolicyinstances": "route53:ListTrafficPolicyInstances",
    "route53.listtrafficpolicyinstancesbyhostedzone": "route53:ListTrafficPolicyInstancesByHostedZone",
    "route53.listtrafficpolicyinstancesbypolicy": "route53:ListTrafficPolicyInstancesByPolicy",
    "route53.listtrafficpolicyversions": "route53:ListTrafficPolicyVersions",
    "route53.listvpcassociationauthorizations": "route53:ListVPCAssociationAuthorizations",
    "route53.testdnsanswer": "route53:TestDNSAnswer",
    "route53.updatehealthcheck": "route53:UpdateHealthCheck",
    "route53.updatehostedzonecomment": "route53:UpdateHostedZoneComment",
    "route53.updatetrafficpolicycomment": "route53:UpdateTrafficPolicyComment",
    "route53.updatetrafficpolicyinstance": "route53:UpdateTrafficPolicyInstance",
    "route53domains.acceptdomaintransferfromanotherawsaccount": "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
    "route53domains.canceldomaintransfertoanotherawsaccount": "route53domains:CancelDomainTransferToAnotherAwsAccount",
    "route53domains.checkdomainavailability": "route53domains:CheckDomainAvailability",
    "route53domains.checkdomaintransferability": "route53domains:CheckDomainTransferability",
    "route53domains.deletedomain": "route53domains:DeleteDomain",
    "route53domains.deletetagsfordomain": "route53domains:DeleteTagsForDomain",
    "route53domains.disabledomainautorenew": "route53domains:DisableDomainAutoRenew",
    "route53domains.disabledomaintransferlock": "route53domains:DisableDomainTransferLock",
    "route53domains.enabledomainautorenew": "route53domains:EnableDomainAutoRenew",
    "route53domains.enabledomaintransferlock": "route53domains:EnableDomainTransferLock",
    "route53domains.getcontactreachabilitystatus": "route53domains:GetContactReachabilityStatus",
    "route53domains.getdomaindetail": "route53domains:GetDomainDetail",
    "route53domains.getdomainsuggestions": "route53domains:GetDomainSuggestions",
    "route53domains.getoperationdetail": "route53domains:GetOperationDetail",
    "route53domains.listdomains": "route53domains:ListDomains",
    "route53domains.listoperations": "route53domains:ListOperations",
    "route53domains.listprices": "route53domains:ListPrices",
    "route53domains.listtagsfordomain": "route53domains:ListTagsForDomain",
    "route53domains.registerdomain": "route53domains:RegisterDomain",
    "route53domains.rejectdomaintransferfromanotherawsaccount": "route53domains:RejectDomainTransferFromAnotherAwsAccount",
    "route53domains.renewdomain": "route53domains:RenewDomain",
    "route53domains.resendcontactreachabilityemail": "route53domains:ResendContactReachabilityEmail",
    "route53domains.retrievedomainauthcode": "route53domains:RetrieveDomainAuthCode",
    "route53domains.transferdomain": "route53domains:TransferDomain",
    "route53domains.transferdomaintoanotherawsaccount": "route53domains:TransferDomainToAnotherAwsAccount",
    "route53domains.updatedomaincontact": "route53domains:UpdateDomainContact",
    "route53domains.updatedomaincontactprivacy": "route53domains:UpdateDomainContactPrivacy",
    "route53domains.updatedomainnameservers": "route53domains:UpdateDomainNameservers",
    "route53domains.updatetagsfordomain": "route53domains:UpdateTagsForDomain",
    "route53domains.viewbilling": "route53domains:ViewBilling",
    "route53recoverycluster.getroutingcontrolstate": "route53-recovery-cluster:GetRoutingControlState",
    "route53recoverycluster.listroutingcontrols": "route53-recovery-cluster:ListRoutingControls",
    "route53recoverycluster.updateroutingcontrolstate": "route53-recovery-cluster:UpdateRoutingControlState",
    "route53recoverycluster.updateroutingcontrolstates": "route53-recovery-cluster:UpdateRoutingControlStates",
    "route53recoverycontrolconfig.createcluster": "route53-recovery-control-config:CreateCluster",
    "route53recoverycontrolconfig.createcontrolpanel": "route53-recovery-control-config:CreateControlPanel",
    "route53recoverycontrolconfig.createroutingcontrol": "route53-recovery-control-config:CreateRoutingControl",
    "route53recoverycontrolconfig.createsafetyrule": "route53-recovery-control-config:CreateSafetyRule",
    "route53recoverycontrolconfig.deletecluster": "route53-recovery-control-config:DeleteCluster",
    "route53recoverycontrolconfig.deletecontrolpanel": "route53-recovery-control-config:DeleteControlPanel",
    "route53recoverycontrolconfig.deleteroutingcontrol": "route53-recovery-control-config:DeleteRoutingControl",
    "route53recoverycontrolconfig.deletesafetyrule": "route53-recovery-control-config:DeleteSafetyRule",
    "route53recoverycontrolconfig.describecluster": "route53-recovery-control-config:DescribeCluster",
    "route53recoverycontrolconfig.describecontrolpanel": "route53-recovery-control-config:DescribeControlPanel",
    "route53recoverycontrolconfig.describeroutingcontrol": "route53-recovery-control-config:DescribeRoutingControl",
    "route53recoverycontrolconfig.describesafetyrule": "route53-recovery-control-config:DescribeSafetyRule",
    "route53recoverycontrolconfig.listassociatedroute53healthchecks": "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
    "route53recoverycontrolconfig.listclusters": "route53-recovery-control-config:ListClusters",
    "route53recoverycontrolconfig.listcontrolpanels": "route53-recovery-control-config:ListControlPanels",
    "route53recoverycontrolconfig.listroutingcontrols": "route53-recovery-control-config:ListRoutingControls",
    "route53recoverycontrolconfig.listsafetyrules": "route53-recovery-control-config:ListSafetyRules",
    "route53recoverycontrolconfig.listtagsforresource": "route53-recovery-control-config:ListTagsForResource",
    "route53recoverycontrolconfig.tagresource": "route53-recovery-control-config:TagResource",
    "route53recoverycontrolconfig.untagresource": "route53-recovery-control-config:UntagResource",
    "route53recoverycontrolconfig.updatecontrolpanel": "route53-recovery-control-config:UpdateControlPanel",
    "route53recoverycontrolconfig.updateroutingcontrol": "route53-recovery-control-config:UpdateRoutingControl",
    "route53recoverycontrolconfig.updatesafetyrule": "route53-recovery-control-config:UpdateSafetyRule",
    "route53recoveryreadiness.createcell": "route53-recovery-readiness:CreateCell",
    "route53recoveryreadiness.createcrossaccountauthorization": "route53-recovery-readiness:CreateCrossAccountAuthorization",
    "route53recoveryreadiness.createreadinesscheck": "route53-recovery-readiness:CreateReadinessCheck",
    "route53recoveryreadiness.createrecoverygroup": "route53-recovery-readiness:CreateRecoveryGroup",
    "route53recoveryreadiness.createresourceset": "route53-recovery-readiness:CreateResourceSet",
    "route53recoveryreadiness.deletecell": "route53-recovery-readiness:DeleteCell",
    "route53recoveryreadiness.deletecrossaccountauthorization": "route53-recovery-readiness:DeleteCrossAccountAuthorization",
    "route53recoveryreadiness.deletereadinesscheck": "route53-recovery-readiness:DeleteReadinessCheck",
    "route53recoveryreadiness.deleterecoverygroup": "route53-recovery-readiness:DeleteRecoveryGroup",
    "route53recoveryreadiness.deleteresourceset": "route53-recovery-readiness:DeleteResourceSet",
    "route53recoveryreadiness.getarchitecturerecommendations": "route53-recovery-readiness:GetArchitectureRecommendations",
    "route53recoveryreadiness.getcell": "route53-recovery-readiness:GetCell",
    "route53recoveryreadiness.getcellreadinesssummary": "route53-recovery-readiness:GetCellReadinessSummary",
    "route53recoveryreadiness.getreadinesscheck": "route53-recovery-readiness:GetReadinessCheck",
    "route53recoveryreadiness.getreadinesscheckresourcestatus": "route53-recovery-readiness:GetReadinessCheckResourceStatus",
    "route53recoveryreadiness.getreadinesscheckstatus": "route53-recovery-readiness:GetReadinessCheckStatus",
    "route53recoveryreadiness.getrecoverygroup": "route53-recovery-readiness:GetRecoveryGroup",
    "route53recoveryreadiness.getrecoverygroupreadinesssummary": "route53-recovery-readiness:GetRecoveryGroupReadinessSummary",
    "route53recoveryreadiness.getresourceset": "route53-recovery-readiness:GetResourceSet",
    "route53recoveryreadiness.listcells": "route53-recovery-readiness:ListCells",
    "route53recoveryreadiness.listcrossaccountauthorizations": "route53-recovery-readiness:ListCrossAccountAuthorizations",
    "route53recoveryreadiness.listreadinesschecks": "route53-recovery-readiness:ListReadinessChecks",
    "route53recoveryreadiness.listrecoverygroups": "route53-recovery-readiness:ListRecoveryGroups",
    "route53recoveryreadiness.listresourcesets": "route53-recovery-readiness:ListResourceSets",
    "route53recoveryreadiness.listrules": "route53-recovery-readiness:ListRules",
    "route53recoveryreadiness.listtagsforresources": "route53-recovery-readiness:ListTagsForResources",
    "route53recoveryreadiness.tagresource": "route53-recovery-readiness:TagResource",
    "route53recoveryreadiness.untagresource": "route53-recovery-readiness:UntagResource",
    "route53recoveryreadiness.updatecell": "route53-recovery-readiness:UpdateCell",
    "route53recoveryreadiness.updatereadinesscheck": "route53-recovery-readiness:UpdateReadinessCheck",
    "route53recoveryreadiness.updaterecoverygroup": "route53-recovery-readiness:UpdateRecoveryGroup",
    "route53recoveryreadiness.updateresourceset": "route53-recovery-readiness:UpdateResourceSet",
    "route53resolver.associatefirewallrulegroup": "route53resolver:AssociateFirewallRuleGroup",
    "route53resolver.associateresolverendpointipaddress": "route53resolver:AssociateResolverEndpointIpAddress",
    "route53resolver.associateresolverquerylogconfig": "route53resolver:AssociateResolverQueryLogConfig",
    "route53resolver.associateresolverrule": "route53resolver:AssociateResolverRule",
    "route53resolver.createfirewalldomainlist": "route53resolver:CreateFirewallDomainList",
    "route53resolver.createfirewallrule": "route53resolver:CreateFirewallRule",
    "route53resolver.createfirewallrulegroup": "route53resolver:CreateFirewallRuleGroup",
    "route53resolver.createresolverendpoint": "route53resolver:CreateResolverEndpoint",
    "route53resolver.createresolverquerylogconfig": "route53resolver:CreateResolverQueryLogConfig",
    "route53resolver.createresolverrule": "route53resolver:CreateResolverRule",
    "route53resolver.deletefirewalldomainlist": "route53resolver:DeleteFirewallDomainList",
    "route53resolver.deletefirewallrule": "route53resolver:DeleteFirewallRule",
    "route53resolver.deletefirewallrulegroup": "route53resolver:DeleteFirewallRuleGroup",
    "route53resolver.deleteresolverendpoint": "route53resolver:DeleteResolverEndpoint",
    "route53resolver.deleteresolverquerylogconfig": "route53resolver:DeleteResolverQueryLogConfig",
    "route53resolver.deleteresolverrule": "route53resolver:DeleteResolverRule",
    "route53resolver.disassociatefirewallrulegroup": "route53resolver:DisassociateFirewallRuleGroup",
    "route53resolver.disassociateresolverendpointipaddress": "route53resolver:DisassociateResolverEndpointIpAddress",
    "route53resolver.disassociateresolverquerylogconfig": "route53resolver:DisassociateResolverQueryLogConfig",
    "route53resolver.disassociateresolverrule": "route53resolver:DisassociateResolverRule",
    "route53resolver.getfirewallconfig": "route53resolver:GetFirewallConfig",
    "route53resolver.getfirewalldomainlist": "route53resolver:GetFirewallDomainList",
    "route53resolver.getfirewallrulegroup": "route53resolver:GetFirewallRuleGroup",
    "route53resolver.getfirewallrulegroupassociation": "route53resolver:GetFirewallRuleGroupAssociation",
    "route53resolver.getfirewallrulegrouppolicy": "route53resolver:GetFirewallRuleGroupPolicy",
    "route53resolver.getresolverconfig": "route53resolver:GetResolverConfig",
    "route53resolver.getresolverdnssecconfig": "route53resolver:GetResolverDnssecConfig",
    "route53resolver.getresolverendpoint": "route53resolver:GetResolverEndpoint",
    "route53resolver.getresolverquerylogconfig": "route53resolver:GetResolverQueryLogConfig",
    "route53resolver.getresolverquerylogconfigassociation": "route53resolver:GetResolverQueryLogConfigAssociation",
    "route53resolver.getresolverquerylogconfigpolicy": "route53resolver:GetResolverQueryLogConfigPolicy",
    "route53resolver.getresolverrule": "route53resolver:GetResolverRule",
    "route53resolver.getresolverruleassociation": "route53resolver:GetResolverRuleAssociation",
    "route53resolver.getresolverrulepolicy": "route53resolver:GetResolverRulePolicy",
    "route53resolver.importfirewalldomains": "route53resolver:ImportFirewallDomains",
    "route53resolver.listfirewallconfigs": "route53resolver:ListFirewallConfigs",
    "route53resolver.listfirewalldomainlists": "route53resolver:ListFirewallDomainLists",
    "route53resolver.listfirewalldomains": "route53resolver:ListFirewallDomains",
    "route53resolver.listfirewallrulegroupassociations": "route53resolver:ListFirewallRuleGroupAssociations",
    "route53resolver.listfirewallrulegroups": "route53resolver:ListFirewallRuleGroups",
    "route53resolver.listfirewallrules": "route53resolver:ListFirewallRules",
    "route53resolver.listresolverconfigs": "route53resolver:ListResolverConfigs",
    "route53resolver.listresolverdnssecconfigs": "route53resolver:ListResolverDnssecConfigs",
    "route53resolver.listresolverendpointipaddresses": "route53resolver:ListResolverEndpointIpAddresses",
    "route53resolver.listresolverendpoints": "route53resolver:ListResolverEndpoints",
    "route53resolver.listresolverquerylogconfigassociations": "route53resolver:ListResolverQueryLogConfigAssociations",
    "route53resolver.listresolverquerylogconfigs": "route53resolver:ListResolverQueryLogConfigs",
    "route53resolver.listresolverruleassociations": "route53resolver:ListResolverRuleAssociations",
    "route53resolver.listresolverrules": "route53resolver:ListResolverRules",
    "route53resolver.listtagsforresource": "route53resolver:ListTagsForResource",
    "route53resolver.putfirewallrulegrouppolicy": "route53resolver:PutFirewallRuleGroupPolicy",
    "route53resolver.putresolverquerylogconfigpolicy": "route53resolver:PutResolverQueryLogConfigPolicy",
    "route53resolver.putresolverrulepolicy": "route53resolver:PutResolverRulePolicy",
    "route53resolver.tagresource": "route53resolver:TagResource",
    "route53resolver.untagresource": "route53resolver:UntagResource",
    "route53resolver.updatefirewallconfig": "route53resolver:UpdateFirewallConfig",
    "route53resolver.updatefirewalldomains": "route53resolver:UpdateFirewallDomains",
    "route53resolver.updatefirewallrule": "route53resolver:UpdateFirewallRule",
    "route53resolver.updatefirewallrulegroupassociation": "route53resolver:UpdateFirewallRuleGroupAssociation",
    "route53resolver.updateresolverconfig": "route53resolver:UpdateResolverConfig",
    "route53resolver.updateresolverdnssecconfig": "route53resolver:UpdateResolverDnssecConfig",
    "route53resolver.updateresolverendpoint": "route53resolver:UpdateResolverEndpoint",
    "route53resolver.updateresolverrule": "route53resolver:UpdateResolverRule",
    "rum.createappmonitor": "rum:CreateAppMonitor",
    "rum.deleteappmonitor": "rum:DeleteAppMonitor",
    "rum.getappmonitor": "rum:GetAppMonitor",
    "rum.getappmonitordata": "rum:GetAppMonitorData",
    "rum.listappmonitors": "rum:ListAppMonitors",
    "rum.listtagsforresource": "rum:ListTagsForResource",
    "rum.putrumevents": "rum:PutRumEvents",
    "rum.tagresource": "rum:TagResource",
    "rum.untagresource": "rum:UntagResource",
    "rum.updateappmonitor": "rum:UpdateAppMonitor",
    "s3.abortmultipartupload": "s3:AbortMultipartUpload",
    "s3.completemultipartupload": "s3:PutObject",
    "s3.copyobject": "s3:ListBucket",
    "s3.createbucket": "s3:CreateBucket",
    "s3.createmultipartupload": "s3:PutObject",
    "s3.deletebucket": "s3:DeleteBucket",
    "s3.deletebucketanalyticsconfiguration": "s3:PutAnalyticsConfiguration",
    "s3.deletebucketcors": "s3:PutBucketCORS",
    "s3.deletebucketencryption": "s3:PutEncryptionConfiguration",
    "s3.deletebucketintelligenttieringconfiguration": "s3:DeleteIntelligentTieringConfiguration",
    "s3.deletebucketinventoryconfiguration": "s3:PutInventoryConfiguration",
    "s3.deletebucketlifecycle": "s3:PutLifecycleConfiguration",
    "s3.deletebucketmetricsconfiguration": "s3:PutMetricsConfiguration",
    "s3.deletebucketownershipcontrols": "s3:DeleteBucketOwnershipControls",
    "s3.deletebucketpolicy": "s3:DeleteBucketPolicy",
    "s3.deletebucketreplication": "s3:PutReplicationConfiguration",
    "s3.deletebuckettagging": "s3:PutBucketTagging",
    "s3.deletebucketwebsite": "s3:DeleteBucketWebsite",
    "s3.deleteobject": "s3:DeleteObject",
    "s3.deleteobjects": "s3:DeleteObject",
    "s3.deleteobjecttagging": "s3:DeleteObjectTagging",
    "s3.deletepublicaccessblock": "s3:PutBucketPublicAccessBlock",
    "s3.getbucketaccelerateconfiguration": "s3:GetAccelerateConfiguration",
    "s3.getbucketacl": "s3:GetBucketAcl",
    "s3.getbucketanalyticsconfiguration": "s3:GetAnalyticsConfiguration",
    "s3.getbucketcors": "s3:GetBucketCORS",
    "s3.getbucketencryption": "s3:GetEncryptionConfiguration",
    "s3.getbucketintelligenttieringconfiguration": "s3:GetIntelligentTieringConfiguration",
    "s3.getbucketinventoryconfiguration": "s3:GetInventoryConfiguration",
    "s3.getbucketlifecycle": "s3:GetLifecycleConfiguration",
    "s3.getbucketlifecycleconfiguration": "s3:GetLifecycleConfiguration",
    "s3.getbucketlocation": "s3:GetBucketLocation",
    "s3.getbucketlogging": "s3:GetBucketLogging",
    "s3.getbucketmetricsconfiguration": "s3:GetMetricsConfiguration",
    "s3.getbucketnotification": "s3:GetBucketNotification",
    "s3.getbucketnotificationconfiguration": "s3:GetBucketNotification",
    "s3.getbucketownershipcontrols": "s3:GetBucketOwnershipControls",
    "s3.getbucketpolicy": "s3:GetBucketPolicy",
    "s3.getbucketpolicystatus": "s3:GetBucketPolicyStatus",
    "s3.getbucketreplication": "s3:GetReplicationConfiguration",
    "s3.getbucketrequestpayment": "s3:GetBucketRequestPayment",
    "s3.getbuckettagging": "s3:GetBucketTagging",
    "s3.getbucketversioning": "s3:GetBucketVersioning",
    "s3.getbucketwebsite": "s3:GetBucketWebsite",
    "s3.getobject": "s3:GetObject",
    "s3.getobjectacl": "s3:GetObjectAcl",
    "s3.getobjectattributes": "s3:GetObjectAttributes",
    "s3.getobjectlegalhold": "s3:GetObjectLegalHold",
    "s3.getobjectlockconfiguration": "s3:GetBucketObjectLockConfiguration",
    "s3.getobjectretention": "s3:GetObjectRetention",
    "s3.getobjecttagging": "s3:GetObjectTagging",
    "s3.getobjecttorrent": "s3:GetObjectTorrent",
    "s3.getpublicaccessblock": "s3:GetBucketPublicAccessBlock",
    "s3.headbucket": "s3:ListBucket",
    "s3.headobject": "s3:GetObject",
    "s3.listbucketanalyticsconfigurations": "s3:GetAnalyticsConfiguration",
    "s3.listbucketintelligenttieringconfigurations": "s3:GetIntelligentTieringConfiguration",
    "s3.listbucketinventoryconfigurations": "s3:GetInventoryConfiguration",
    "s3.listbucketmetricsconfigurations": "s3:GetMetricsConfiguration",
    "s3.listbuckets": "s3:ListAllMyBuckets",
    "s3.listmultipartuploads": "s3:ListBucketMultipartUploads",
    "s3.listobjects": "s3:ListBucket",
    "s3.listobjectsv2": "s3:ListBucket",
    "s3.listobjectversions": "s3:ListBucketVersions",
    "s3.listparts": "s3:ListMultipartUploadParts",
    "s3.putbucketaccelerateconfiguration": "s3:PutAccelerateConfiguration",
    "s3.putbucketacl": "s3:PutBucketAcl",
    "s3.putbucketanalyticsconfiguration": "s3:PutAnalyticsConfiguration",
    "s3.putbucketcors": "s3:PutBucketCORS",
    "s3.putbucketencryption": "s3:PutEncryptionConfiguration",
    "s3.putbucketintelligenttieringconfiguration": "s3:PutIntelligentTieringConfiguration",
    "s3.putbucketinventoryconfiguration": "s3:PutInventoryConfiguration",
    "s3.putbucketlifecycle": "s3:PutLifecycleConfiguration",
    "s3.putbucketlifecycleconfiguration": "s3:PutLifecycleConfiguration",
    "s3.putbucketlogging": "s3:PutBucketLogging",
    "s3.putbucketmetricsconfiguration": "s3:PutMetricsConfiguration",
    "s3.putbucketnotification": "s3:PutBucketNotification",
    "s3.putbucketnotificationconfiguration": "s3:PutBucketNotification",
    "s3.putbucketownershipcontrols": "s3:PutBucketOwnershipControls",
    "s3.putbucketpolicy": "s3:PutBucketPolicy",
    "s3.putbucketreplication": "s3:PutReplicationConfiguration",
    "s3.putbucketrequestpayment": "s3:PutBucketRequestPayment",
    "s3.putbuckettagging": "s3:PutBucketTagging",
    "s3.putbucketversioning": "s3:PutBucketVersioning",
    "s3.putbucketwebsite": "s3:PutBucketWebsite",
    "s3.putobject": "s3:PutObject",
    "s3.putobjectacl": "s3:PutObjectAcl",
    "s3.putobjectlegalhold": "s3:PutObjectLegalHold",
    "s3.putobjectlockconfiguration": "s3:PutBucketObjectLockConfiguration",
    "s3.putobjectretention": "s3:PutObjectRetention",
    "s3.putobjecttagging": "s3:PutObjectTagging",
    "s3.putpublicaccessblock": "s3:PutBucketPublicAccessBlock",
    "s3.restoreobject": "s3:RestoreObject",
    "s3.selectobjectcontent": "s3:GetObject",
    "s3.uploadpart": "s3:PutObject",
    "s3.uploadfile": "s3:PutObject",
    "s3.uploadpartcopy": "s3:PutObject",
    "s3.writegetobjectresponse": "s3-object-lambda:WriteGetObjectResponse",
    "s3control.createaccesspoint": "s3-outposts:CreateAccessPoint",
    "s3control.createaccesspointforobjectlambda": "s3:CreateAccessPointForObjectLambda",
    "s3control.createbucket": "s3-outposts:CreateBucket",
    "s3control.createjob": "s3:CreateJob",
    "s3control.createmultiregionaccesspoint": "s3:CreateMultiRegionAccessPoint",
    "s3control.deleteaccesspoint": "s3-outposts:DeleteAccessPoint",
    "s3control.deleteaccesspointforobjectlambda": "s3:DeleteAccessPointForObjectLambda",
    "s3control.deleteaccesspointpolicy": "s3-outposts:DeleteAccessPointPolicy",
    "s3control.deleteaccesspointpolicyforobjectlambda": "s3:DeleteAccessPointPolicyForObjectLambda",
    "s3control.deletebucket": "s3-outposts:DeleteBucket",
    "s3control.deletebucketlifecycleconfiguration": "s3-outposts:DeleteLifecycleConfiguration",
    "s3control.deletebucketpolicy": "s3-outposts:DeleteBucketPolicy",
    "s3control.deletebuckettagging": "s3-outposts:PutBucketTagging",
    "s3control.deletejobtagging": "s3:DeleteJobTagging",
    "s3control.deletemultiregionaccesspoint": "s3:DeleteMultiRegionAccessPoint",
    "s3control.deletepublicaccessblock": "s3:PutAccountPublicAccessBlock",
    "s3control.deletestoragelensconfiguration": "s3:DeleteStorageLensConfiguration",
    "s3control.deletestoragelensconfigurationtagging": "s3:DeleteStorageLensConfigurationTagging",
    "s3control.describejob": "s3:DescribeJob",
    "s3control.describemultiregionaccesspointoperation": "s3:DescribeMultiRegionAccessPointOperation",
    "s3control.getaccesspoint": "s3-outposts:GetAccessPoint",
    "s3control.getaccesspointconfigurationforobjectlambda": "s3:GetAccessPointConfigurationForObjectLambda",
    "s3control.getaccesspointforobjectlambda": "s3:GetAccessPointForObjectLambda",
    "s3control.getaccesspointpolicy": "s3-outposts:GetAccessPointPolicy",
    "s3control.getaccesspointpolicyforobjectlambda": "s3:GetAccessPointPolicyForObjectLambda",
    "s3control.getaccesspointpolicystatus": "s3:GetAccessPointPolicyStatus",
    "s3control.getaccesspointpolicystatusforobjectlambda": "s3:GetAccessPointPolicyStatusForObjectLambda",
    "s3control.getbucket": "s3-outposts:GetBucket",
    "s3control.getbucketlifecycleconfiguration": "s3-outposts:GetLifecycleConfiguration",
    "s3control.getbucketpolicy": "s3-outposts:GetBucketPolicy",
    "s3control.getbuckettagging": "s3-outposts:GetBucketTagging",
    "s3control.getjobtagging": "s3:GetJobTagging",
    "s3control.getmultiregionaccesspoint": "s3:GetMultiRegionAccessPoint",
    "s3control.getmultiregionaccesspointpolicy": "s3:GetMultiRegionAccessPointPolicy",
    "s3control.getmultiregionaccesspointpolicystatus": "s3:GetMultiRegionAccessPointPolicyStatus",
    "s3control.getpublicaccessblock": "s3:GetAccountPublicAccessBlock",
    "s3control.getstoragelensconfiguration": "s3:GetStorageLensConfiguration",
    "s3control.getstoragelensconfigurationtagging": "s3:GetStorageLensConfigurationTagging",
    "s3control.listaccesspoints": "s3-outposts:ListAccessPoints",
    "s3control.listaccesspointsforobjectlambda": "s3:ListAccessPointsForObjectLambda",
    "s3control.listjobs": "s3:ListJobs",
    "s3control.listmultiregionaccesspoints": "s3:ListMultiRegionAccessPoints",
    "s3control.listregionalbuckets": "s3-outposts:ListRegionalBuckets",
    "s3control.liststoragelensconfigurations": "s3:ListStorageLensConfigurations",
    "s3control.putaccesspointconfigurationforobjectlambda": "s3:PutAccessPointConfigurationForObjectLambda",
    "s3control.putaccesspointpolicy": "s3-outposts:PutAccessPointPolicy",
    "s3control.putaccesspointpolicyforobjectlambda": "s3:PutAccessPointPolicyForObjectLambda",
    "s3control.putbucketlifecycleconfiguration": "s3-outposts:PutLifecycleConfiguration",
    "s3control.putbucketpolicy": "s3-outposts:PutBucketPolicy",
    "s3control.putbuckettagging": "s3-outposts:PutBucketTagging",
    "s3control.putjobtagging": "s3:PutJobTagging",
    "s3control.putmultiregionaccesspointpolicy": "s3:PutMultiRegionAccessPointPolicy",
    "s3control.putpublicaccessblock": "s3:PutAccountPublicAccessBlock",
    "s3control.putstoragelensconfiguration": "s3:PutStorageLensConfiguration",
    "s3control.putstoragelensconfigurationtagging": "s3:PutStorageLensConfigurationTagging",
    "s3control.updatejobpriority": "s3:UpdateJobPriority",
    "s3control.updatejobstatus": "s3:UpdateJobStatus",
    "s3outposts.createendpoint": "s3-outposts:CreateEndpoint",
    "s3outposts.deleteendpoint": "s3-outposts:DeleteEndpoint",
    "s3outposts.listendpoints": "s3-outposts:ListEndpoints",
    "s3outposts.listsharedendpoints": "s3-outposts:ListSharedEndpoints",
    "sagemaker.addassociation": "sagemaker:AddAssociation",
    "sagemaker.addtags": "sagemaker:AddTags",
    "sagemaker.associatetrialcomponent": "sagemaker:AssociateTrialComponent",
    "sagemaker.batchdescribemodelpackage": "sagemaker:BatchDescribeModelPackage",
    "sagemaker.createaction": "sagemaker:CreateAction",
    "sagemaker.createalgorithm": "sagemaker:CreateAlgorithm",
    "sagemaker.createapp": "sagemaker:CreateApp",
    "sagemaker.createappimageconfig": "sagemaker:CreateAppImageConfig",
    "sagemaker.createartifact": "sagemaker:CreateArtifact",
    "sagemaker.createautomljob": "sagemaker:CreateAutoMLJob",
    "sagemaker.createcoderepository": "sagemaker:CreateCodeRepository",
    "sagemaker.createcompilationjob": "sagemaker:CreateCompilationJob",
    "sagemaker.createcontext": "sagemaker:CreateContext",
    "sagemaker.createdataqualityjobdefinition": "sagemaker:CreateDataQualityJobDefinition",
    "sagemaker.createdevicefleet": "sagemaker:CreateDeviceFleet",
    "sagemaker.createdomain": "sagemaker:CreateDomain",
    "sagemaker.createedgepackagingjob": "sagemaker:CreateEdgePackagingJob",
    "sagemaker.createendpoint": "sagemaker:CreateEndpoint",
    "sagemaker.createendpointconfig": "sagemaker:CreateEndpointConfig",
    "sagemaker.createexperiment": "sagemaker:CreateExperiment",
    "sagemaker.createfeaturegroup": "sagemaker:CreateFeatureGroup",
    "sagemaker.createflowdefinition": "sagemaker:CreateFlowDefinition",
    "sagemaker.createhumantaskui": "sagemaker:CreateHumanTaskUi",
    "sagemaker.createhyperparametertuningjob": "sagemaker:CreateHyperParameterTuningJob",
    "sagemaker.createimage": "sagemaker:CreateImage",
    "sagemaker.createimageversion": "sagemaker:CreateImageVersion",
    "sagemaker.createinferencerecommendationsjob": "sagemaker:CreateInferenceRecommendationsJob",
    "sagemaker.createlabelingjob": "sagemaker:CreateLabelingJob",
    "sagemaker.createmodel": "sagemaker:CreateModel",
    "sagemaker.createmodelbiasjobdefinition": "sagemaker:CreateModelBiasJobDefinition",
    "sagemaker.createmodelexplainabilityjobdefinition": "sagemaker:CreateModelExplainabilityJobDefinition",
    "sagemaker.createmodelpackage": "sagemaker:CreateModelPackage",
    "sagemaker.createmodelpackagegroup": "sagemaker:CreateModelPackageGroup",
    "sagemaker.createmodelqualityjobdefinition": "sagemaker:CreateModelQualityJobDefinition",
    "sagemaker.createmonitoringschedule": "sagemaker:CreateMonitoringSchedule",
    "sagemaker.createnotebookinstance": "sagemaker:CreateNotebookInstance",
    "sagemaker.createnotebookinstancelifecycleconfig": "sagemaker:CreateNotebookInstanceLifecycleConfig",
    "sagemaker.createpipeline": "sagemaker:CreatePipeline",
    "sagemaker.createpresigneddomainurl": "sagemaker:CreatePresignedDomainUrl",
    "sagemaker.createpresignednotebookinstanceurl": "sagemaker:CreatePresignedNotebookInstanceUrl",
    "sagemaker.createprocessingjob": "sagemaker:CreateProcessingJob",
    "sagemaker.createproject": "sagemaker:CreateProject",
    "sagemaker.createstudiolifecycleconfig": "sagemaker:CreateStudioLifecycleConfig",
    "sagemaker.createtrainingjob": "sagemaker:CreateTrainingJob",
    "sagemaker.createtransformjob": "sagemaker:CreateTransformJob",
    "sagemaker.createtrial": "sagemaker:CreateTrial",
    "sagemaker.createtrialcomponent": "sagemaker:CreateTrialComponent",
    "sagemaker.createuserprofile": "sagemaker:CreateUserProfile",
    "sagemaker.createworkforce": "sagemaker:CreateWorkforce",
    "sagemaker.createworkteam": "sagemaker:CreateWorkteam",
    "sagemaker.deleteaction": "sagemaker:DeleteAction",
    "sagemaker.deletealgorithm": "sagemaker:DeleteAlgorithm",
    "sagemaker.deleteapp": "sagemaker:DeleteApp",
    "sagemaker.deleteappimageconfig": "sagemaker:DeleteAppImageConfig",
    "sagemaker.deleteartifact": "sagemaker:DeleteArtifact",
    "sagemaker.deleteassociation": "sagemaker:DeleteAssociation",
    "sagemaker.deletecoderepository": "sagemaker:DeleteCodeRepository",
    "sagemaker.deletecontext": "sagemaker:DeleteContext",
    "sagemaker.deletedataqualityjobdefinition": "sagemaker:DeleteDataQualityJobDefinition",
    "sagemaker.deletedevicefleet": "sagemaker:DeleteDeviceFleet",
    "sagemaker.deletedomain": "sagemaker:DeleteDomain",
    "sagemaker.deleteendpoint": "sagemaker:DeleteEndpoint",
    "sagemaker.deleteendpointconfig": "sagemaker:DeleteEndpointConfig",
    "sagemaker.deleteexperiment": "sagemaker:DeleteExperiment",
    "sagemaker.deletefeaturegroup": "sagemaker:DeleteFeatureGroup",
    "sagemaker.deleteflowdefinition": "sagemaker:DeleteFlowDefinition",
    "sagemaker.deletehumantaskui": "sagemaker:DeleteHumanTaskUi",
    "sagemaker.deleteimage": "sagemaker:DeleteImage",
    "sagemaker.deleteimageversion": "sagemaker:DeleteImageVersion",
    "sagemaker.deletemodel": "sagemaker:DeleteModel",
    "sagemaker.deletemodelbiasjobdefinition": "sagemaker:DeleteModelBiasJobDefinition",
    "sagemaker.deletemodelexplainabilityjobdefinition": "sagemaker:DeleteModelExplainabilityJobDefinition",
    "sagemaker.deletemodelpackage": "sagemaker:DeleteModelPackage",
    "sagemaker.deletemodelpackagegroup": "sagemaker:DeleteModelPackageGroup",
    "sagemaker.deletemodelpackagegrouppolicy": "sagemaker:DeleteModelPackageGroupPolicy",
    "sagemaker.deletemodelqualityjobdefinition": "sagemaker:DeleteModelQualityJobDefinition",
    "sagemaker.deletemonitoringschedule": "sagemaker:DeleteMonitoringSchedule",
    "sagemaker.deletenotebookinstance": "sagemaker:DeleteNotebookInstance",
    "sagemaker.deletenotebookinstancelifecycleconfig": "sagemaker:DeleteNotebookInstanceLifecycleConfig",
    "sagemaker.deletepipeline": "sagemaker:DeletePipeline",
    "sagemaker.deleteproject": "sagemaker:DeleteProject",
    "sagemaker.deletestudiolifecycleconfig": "sagemaker:DeleteStudioLifecycleConfig",
    "sagemaker.deletetags": "sagemaker:DeleteTags",
    "sagemaker.deletetrial": "sagemaker:DeleteTrial",
    "sagemaker.deletetrialcomponent": "sagemaker:DeleteTrialComponent",
    "sagemaker.deleteuserprofile": "sagemaker:DeleteUserProfile",
    "sagemaker.deleteworkforce": "sagemaker:DeleteWorkforce",
    "sagemaker.deleteworkteam": "sagemaker:DeleteWorkteam",
    "sagemaker.deregisterdevices": "sagemaker:DeregisterDevices",
    "sagemaker.describeaction": "sagemaker:DescribeAction",
    "sagemaker.describealgorithm": "sagemaker:DescribeAlgorithm",
    "sagemaker.describeapp": "sagemaker:DescribeApp",
    "sagemaker.describeappimageconfig": "sagemaker:DescribeAppImageConfig",
    "sagemaker.describeartifact": "sagemaker:DescribeArtifact",
    "sagemaker.describeautomljob": "sagemaker:DescribeAutoMLJob",
    "sagemaker.describecoderepository": "sagemaker:DescribeCodeRepository",
    "sagemaker.describecompilationjob": "sagemaker:DescribeCompilationJob",
    "sagemaker.describecontext": "sagemaker:DescribeContext",
    "sagemaker.describedataqualityjobdefinition": "sagemaker:DescribeDataQualityJobDefinition",
    "sagemaker.describedevice": "sagemaker:DescribeDevice",
    "sagemaker.describedevicefleet": "sagemaker:DescribeDeviceFleet",
    "sagemaker.describedomain": "sagemaker:DescribeDomain",
    "sagemaker.describeedgepackagingjob": "sagemaker:DescribeEdgePackagingJob",
    "sagemaker.describeendpoint": "sagemaker:DescribeEndpoint",
    "sagemaker.describeendpointconfig": "sagemaker:DescribeEndpointConfig",
    "sagemaker.describeexperiment": "sagemaker:DescribeExperiment",
    "sagemaker.describefeaturegroup": "sagemaker:DescribeFeatureGroup",
    "sagemaker.describeflowdefinition": "sagemaker:DescribeFlowDefinition",
    "sagemaker.describehumantaskui": "sagemaker:DescribeHumanTaskUi",
    "sagemaker.describehyperparametertuningjob": "sagemaker:DescribeHyperParameterTuningJob",
    "sagemaker.describeimage": "sagemaker:DescribeImage",
    "sagemaker.describeimageversion": "sagemaker:DescribeImageVersion",
    "sagemaker.describeinferencerecommendationsjob": "sagemaker:DescribeInferenceRecommendationsJob",
    "sagemaker.describelabelingjob": "sagemaker:DescribeLabelingJob",
    "sagemaker.describelineagegroup": "sagemaker:DescribeLineageGroup",
    "sagemaker.describemodel": "sagemaker:DescribeModel",
    "sagemaker.describemodelbiasjobdefinition": "sagemaker:DescribeModelBiasJobDefinition",
    "sagemaker.describemodelexplainabilityjobdefinition": "sagemaker:DescribeModelExplainabilityJobDefinition",
    "sagemaker.describemodelpackage": "sagemaker:DescribeModelPackage",
    "sagemaker.describemodelpackagegroup": "sagemaker:DescribeModelPackageGroup",
    "sagemaker.describemodelqualityjobdefinition": "sagemaker:DescribeModelQualityJobDefinition",
    "sagemaker.describemonitoringschedule": "sagemaker:DescribeMonitoringSchedule",
    "sagemaker.describenotebookinstance": "sagemaker:DescribeNotebookInstance",
    "sagemaker.describenotebookinstancelifecycleconfig": "sagemaker:DescribeNotebookInstanceLifecycleConfig",
    "sagemaker.describepipeline": "sagemaker:DescribePipeline",
    "sagemaker.describepipelinedefinitionforexecution": "sagemaker:DescribePipelineDefinitionForExecution",
    "sagemaker.describepipelineexecution": "sagemaker:DescribePipelineExecution",
    "sagemaker.describeprocessingjob": "sagemaker:DescribeProcessingJob",
    "sagemaker.describeproject": "sagemaker:DescribeProject",
    "sagemaker.describestudiolifecycleconfig": "sagemaker:DescribeStudioLifecycleConfig",
    "sagemaker.describesubscribedworkteam": "sagemaker:DescribeSubscribedWorkteam",
    "sagemaker.describetrainingjob": "sagemaker:DescribeTrainingJob",
    "sagemaker.describetransformjob": "sagemaker:DescribeTransformJob",
    "sagemaker.describetrial": "sagemaker:DescribeTrial",
    "sagemaker.describetrialcomponent": "sagemaker:DescribeTrialComponent",
    "sagemaker.describeuserprofile": "sagemaker:DescribeUserProfile",
    "sagemaker.describeworkforce": "sagemaker:DescribeWorkforce",
    "sagemaker.describeworkteam": "sagemaker:DescribeWorkteam",
    "sagemaker.disablesagemakerservicecatalogportfolio": "sagemaker:DisableSagemakerServicecatalogPortfolio",
    "sagemaker.disassociatetrialcomponent": "sagemaker:DisassociateTrialComponent",
    "sagemaker.enablesagemakerservicecatalogportfolio": "sagemaker:EnableSagemakerServicecatalogPortfolio",
    "sagemaker.getdevicefleetreport": "sagemaker:GetDeviceFleetReport",
    "sagemaker.getlineagegrouppolicy": "sagemaker:GetLineageGroupPolicy",
    "sagemaker.getmodelpackagegrouppolicy": "sagemaker:GetModelPackageGroupPolicy",
    "sagemaker.getsagemakerservicecatalogportfoliostatus": "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
    "sagemaker.getsearchsuggestions": "sagemaker:GetSearchSuggestions",
    "sagemaker.listactions": "sagemaker:ListActions",
    "sagemaker.listalgorithms": "sagemaker:ListAlgorithms",
    "sagemaker.listappimageconfigs": "sagemaker:ListAppImageConfigs",
    "sagemaker.listapps": "sagemaker:ListApps",
    "sagemaker.listartifacts": "sagemaker:ListArtifacts",
    "sagemaker.listassociations": "sagemaker:ListAssociations",
    "sagemaker.listautomljobs": "sagemaker:ListAutoMLJobs",
    "sagemaker.listcandidatesforautomljob": "sagemaker:ListCandidatesForAutoMLJob",
    "sagemaker.listcoderepositories": "sagemaker:ListCodeRepositories",
    "sagemaker.listcompilationjobs": "sagemaker:ListCompilationJobs",
    "sagemaker.listcontexts": "sagemaker:ListContexts",
    "sagemaker.listdataqualityjobdefinitions": "sagemaker:ListDataQualityJobDefinitions",
    "sagemaker.listdevicefleets": "sagemaker:ListDeviceFleets",
    "sagemaker.listdevices": "sagemaker:ListDevices",
    "sagemaker.listdomains": "sagemaker:ListDomains",
    "sagemaker.listedgepackagingjobs": "sagemaker:ListEdgePackagingJobs",
    "sagemaker.listendpointconfigs": "sagemaker:ListEndpointConfigs",
    "sagemaker.listendpoints": "sagemaker:ListEndpoints",
    "sagemaker.listexperiments": "sagemaker:ListExperiments",
    "sagemaker.listfeaturegroups": "sagemaker:ListFeatureGroups",
    "sagemaker.listflowdefinitions": "sagemaker:ListFlowDefinitions",
    "sagemaker.listhumantaskuis": "sagemaker:ListHumanTaskUis",
    "sagemaker.listhyperparametertuningjobs": "sagemaker:ListHyperParameterTuningJobs",
    "sagemaker.listimages": "sagemaker:ListImages",
    "sagemaker.listimageversions": "sagemaker:ListImageVersions",
    "sagemaker.listinferencerecommendationsjobs": "sagemaker:ListInferenceRecommendationsJobs",
    "sagemaker.listlabelingjobs": "sagemaker:ListLabelingJobs",
    "sagemaker.listlabelingjobsforworkteam": "sagemaker:ListLabelingJobsForWorkteam",
    "sagemaker.listlineagegroups": "sagemaker:ListLineageGroups",
    "sagemaker.listmodelbiasjobdefinitions": "sagemaker:ListModelBiasJobDefinitions",
    "sagemaker.listmodelexplainabilityjobdefinitions": "sagemaker:ListModelExplainabilityJobDefinitions",
    "sagemaker.listmodelmetadata": "sagemaker:ListModelMetadata",
    "sagemaker.listmodelpackagegroups": "sagemaker:ListModelPackageGroups",
    "sagemaker.listmodelpackages": "sagemaker:ListModelPackages",
    "sagemaker.listmodelqualityjobdefinitions": "sagemaker:ListModelQualityJobDefinitions",
    "sagemaker.listmodels": "sagemaker:ListModels",
    "sagemaker.listmonitoringexecutions": "sagemaker:ListMonitoringExecutions",
    "sagemaker.listmonitoringschedules": "sagemaker:ListMonitoringSchedules",
    "sagemaker.listnotebookinstancelifecycleconfigs": "sagemaker:ListNotebookInstanceLifecycleConfigs",
    "sagemaker.listnotebookinstances": "sagemaker:ListNotebookInstances",
    "sagemaker.listpipelineexecutions": "sagemaker:ListPipelineExecutions",
    "sagemaker.listpipelineexecutionsteps": "sagemaker:ListPipelineExecutionSteps",
    "sagemaker.listpipelineparametersforexecution": "sagemaker:ListPipelineParametersForExecution",
    "sagemaker.listpipelines": "sagemaker:ListPipelines",
    "sagemaker.listprocessingjobs": "sagemaker:ListProcessingJobs",
    "sagemaker.listprojects": "sagemaker:ListProjects",
    "sagemaker.liststudiolifecycleconfigs": "sagemaker:ListStudioLifecycleConfigs",
    "sagemaker.listsubscribedworkteams": "sagemaker:ListSubscribedWorkteams",
    "sagemaker.listtags": "sagemaker:ListTags",
    "sagemaker.listtrainingjobs": "sagemaker:ListTrainingJobs",
    "sagemaker.listtrainingjobsforhyperparametertuningjob": "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
    "sagemaker.listtransformjobs": "sagemaker:ListTransformJobs",
    "sagemaker.listtrialcomponents": "sagemaker:ListTrialComponents",
    "sagemaker.listtrials": "sagemaker:ListTrials",
    "sagemaker.listuserprofiles": "sagemaker:ListUserProfiles",
    "sagemaker.listworkforces": "sagemaker:ListWorkforces",
    "sagemaker.listworkteams": "sagemaker:ListWorkteams",
    "sagemaker.putmodelpackagegrouppolicy": "sagemaker:PutModelPackageGroupPolicy",
    "sagemaker.querylineage": "sagemaker:QueryLineage",
    "sagemaker.registerdevices": "sagemaker:RegisterDevices",
    "sagemaker.renderuitemplate": "sagemaker:RenderUiTemplate",
    "sagemaker.retrypipelineexecution": "sagemaker:RetryPipelineExecution",
    "sagemaker.search": "sagemaker:Search",
    "sagemaker.sendpipelineexecutionstepfailure": "sagemaker:SendPipelineExecutionStepFailure",
    "sagemaker.sendpipelineexecutionstepsuccess": "sagemaker:SendPipelineExecutionStepSuccess",
    "sagemaker.startmonitoringschedule": "sagemaker:StartMonitoringSchedule",
    "sagemaker.startnotebookinstance": "sagemaker:StartNotebookInstance",
    "sagemaker.startpipelineexecution": "sagemaker:StartPipelineExecution",
    "sagemaker.stopautomljob": "sagemaker:StopAutoMLJob",
    "sagemaker.stopcompilationjob": "sagemaker:StopCompilationJob",
    "sagemaker.stopedgepackagingjob": "sagemaker:StopEdgePackagingJob",
    "sagemaker.stophyperparametertuningjob": "sagemaker:StopHyperParameterTuningJob",
    "sagemaker.stopinferencerecommendationsjob": "sagemaker:StopInferenceRecommendationsJob",
    "sagemaker.stoplabelingjob": "sagemaker:StopLabelingJob",
    "sagemaker.stopmonitoringschedule": "sagemaker:StopMonitoringSchedule",
    "sagemaker.stopnotebookinstance": "sagemaker:StopNotebookInstance",
    "sagemaker.stoppipelineexecution": "sagemaker:StopPipelineExecution",
    "sagemaker.stopprocessingjob": "sagemaker:StopProcessingJob",
    "sagemaker.stoptrainingjob": "sagemaker:StopTrainingJob",
    "sagemaker.stoptransformjob": "sagemaker:StopTransformJob",
    "sagemaker.updateaction": "sagemaker:UpdateAction",
    "sagemaker.updateappimageconfig": "sagemaker:UpdateAppImageConfig",
    "sagemaker.updateartifact": "sagemaker:UpdateArtifact",
    "sagemaker.updatecoderepository": "sagemaker:UpdateCodeRepository",
    "sagemaker.updatecontext": "sagemaker:UpdateContext",
    "sagemaker.updatedevicefleet": "sagemaker:UpdateDeviceFleet",
    "sagemaker.updatedevices": "sagemaker:UpdateDevices",
    "sagemaker.updatedomain": "sagemaker:UpdateDomain",
    "sagemaker.updateendpoint": "sagemaker:UpdateEndpoint",
    "sagemaker.updateendpointweightsandcapacities": "sagemaker:UpdateEndpointWeightsAndCapacities",
    "sagemaker.updateexperiment": "sagemaker:UpdateExperiment",
    "sagemaker.updateimage": "sagemaker:UpdateImage",
    "sagemaker.updatemodelpackage": "sagemaker:UpdateModelPackage",
    "sagemaker.updatemonitoringschedule": "sagemaker:UpdateMonitoringSchedule",
    "sagemaker.updatenotebookinstance": "sagemaker:UpdateNotebookInstance",
    "sagemaker.updatenotebookinstancelifecycleconfig": "sagemaker:UpdateNotebookInstanceLifecycleConfig",
    "sagemaker.updatepipeline": "sagemaker:UpdatePipeline",
    "sagemaker.updatepipelineexecution": "sagemaker:UpdatePipelineExecution",
    "sagemaker.updateproject": "sagemaker:UpdateProject",
    "sagemaker.updatetrainingjob": "sagemaker:UpdateTrainingJob",
    "sagemaker.updatetrial": "sagemaker:UpdateTrial",
    "sagemaker.updatetrialcomponent": "sagemaker:UpdateTrialComponent",
    "sagemaker.updateuserprofile": "sagemaker:UpdateUserProfile",
    "sagemaker.updateworkforce": "sagemaker:UpdateWorkforce",
    "sagemaker.updateworkteam": "sagemaker:UpdateWorkteam",
    "sagemakeredge.getdeviceregistration": "sagemaker:GetDeviceRegistration",
    "sagemakeredge.sendheartbeat": "sagemaker:SendHeartbeat",
    "sagemakerfeaturestoreruntime.batchgetrecord": "sagemaker:BatchGetRecord",
    "sagemakerfeaturestoreruntime.deleterecord": "sagemaker:DeleteRecord",
    "sagemakerfeaturestoreruntime.getrecord": "sagemaker:GetRecord",
    "sagemakerfeaturestoreruntime.putrecord": "sagemaker:PutRecord",
    "sagemakerruntime.invokeendpoint": "sagemaker:InvokeEndpoint",
    "sagemakerruntime.invokeendpointasync": "sagemaker:InvokeEndpointAsync",
    "savingsplans.createsavingsplan": "savingsplans:CreateSavingsPlan",
    "savingsplans.deletequeuedsavingsplan": "savingsplans:DeleteQueuedSavingsPlan",
    "savingsplans.describesavingsplanrates": "savingsplans:DescribeSavingsPlanRates",
    "savingsplans.describesavingsplans": "savingsplans:DescribeSavingsPlans",
    "savingsplans.describesavingsplansofferingrates": "savingsplans:DescribeSavingsPlansOfferingRates",
    "savingsplans.describesavingsplansofferings": "savingsplans:DescribeSavingsPlansOfferings",
    "savingsplans.listtagsforresource": "savingsplans:ListTagsForResource",
    "savingsplans.tagresource": "savingsplans:TagResource",
    "savingsplans.untagresource": "savingsplans:UntagResource",
    "schemas.creatediscoverer": "schemas:CreateDiscoverer",
    "schemas.createregistry": "schemas:CreateRegistry",
    "schemas.createschema": "schemas:CreateSchema",
    "schemas.deletediscoverer": "schemas:DeleteDiscoverer",
    "schemas.deleteregistry": "schemas:DeleteRegistry",
    "schemas.deleteresourcepolicy": "schemas:DeleteResourcePolicy",
    "schemas.deleteschema": "schemas:DeleteSchema",
    "schemas.deleteschemaversion": "schemas:DeleteSchemaVersion",
    "schemas.describecodebinding": "schemas:DescribeCodeBinding",
    "schemas.describediscoverer": "schemas:DescribeDiscoverer",
    "schemas.describeregistry": "schemas:DescribeRegistry",
    "schemas.describeschema": "schemas:DescribeSchema",
    "schemas.exportschema": "schemas:ExportSchema",
    "schemas.getcodebindingsource": "schemas:GetCodeBindingSource",
    "schemas.getdiscoveredschema": "schemas:GetDiscoveredSchema",
    "schemas.getresourcepolicy": "schemas:GetResourcePolicy",
    "schemas.listdiscoverers": "schemas:ListDiscoverers",
    "schemas.listregistries": "schemas:ListRegistries",
    "schemas.listschemas": "schemas:ListSchemas",
    "schemas.listschemaversions": "schemas:ListSchemaVersions",
    "schemas.listtagsforresource": "schemas:ListTagsForResource",
    "schemas.putcodebinding": "schemas:PutCodeBinding",
    "schemas.putresourcepolicy": "schemas:PutResourcePolicy",
    "schemas.searchschemas": "schemas:SearchSchemas",
    "schemas.startdiscoverer": "schemas:StartDiscoverer",
    "schemas.stopdiscoverer": "schemas:StopDiscoverer",
    "schemas.tagresource": "schemas:TagResource",
    "schemas.untagresource": "schemas:UntagResource",
    "schemas.updatediscoverer": "schemas:UpdateDiscoverer",
    "schemas.updateregistry": "schemas:UpdateRegistry",
    "schemas.updateschema": "schemas:UpdateSchema",
    "secretsmanager.cancelrotatesecret": "secretsmanager:CancelRotateSecret",
    "secretsmanager.createsecret": "secretsmanager:CreateSecret",
    "secretsmanager.deleteresourcepolicy": "secretsmanager:DeleteResourcePolicy",
    "secretsmanager.deletesecret": "secretsmanager:DeleteSecret",
    "secretsmanager.describesecret": "secretsmanager:DescribeSecret",
    "secretsmanager.getrandompassword": "secretsmanager:GetRandomPassword",
    "secretsmanager.getresourcepolicy": "secretsmanager:GetResourcePolicy",
    "secretsmanager.getsecretvalue": "secretsmanager:GetSecretValue",
    "secretsmanager.listsecrets": "secretsmanager:ListSecrets",
    "secretsmanager.listsecretversionids": "secretsmanager:ListSecretVersionIds",
    "secretsmanager.putresourcepolicy": "secretsmanager:PutResourcePolicy",
    "secretsmanager.putsecretvalue": "secretsmanager:PutSecretValue",
    "secretsmanager.removeregionsfromreplication": "secretsmanager:RemoveRegionsFromReplication",
    "secretsmanager.replicatesecrettoregions": "secretsmanager:ReplicateSecretToRegions",
    "secretsmanager.restoresecret": "secretsmanager:RestoreSecret",
    "secretsmanager.rotatesecret": "secretsmanager:RotateSecret",
    "secretsmanager.stopreplicationtoreplica": "secretsmanager:StopReplicationToReplica",
    "secretsmanager.tagresource": "secretsmanager:TagResource",
    "secretsmanager.untagresource": "secretsmanager:UntagResource",
    "secretsmanager.updatesecret": "secretsmanager:UpdateSecret",
    "secretsmanager.updatesecretversionstage": "secretsmanager:UpdateSecretVersionStage",
    "secretsmanager.validateresourcepolicy": "secretsmanager:ValidateResourcePolicy",
    "securityhub.acceptadministratorinvitation": "securityhub:AcceptAdministratorInvitation",
    "securityhub.acceptinvitation": "securityhub:AcceptInvitation",
    "securityhub.batchdisablestandards": "securityhub:BatchDisableStandards",
    "securityhub.batchenablestandards": "securityhub:BatchEnableStandards",
    "securityhub.batchimportfindings": "securityhub:BatchImportFindings",
    "securityhub.batchupdatefindings": "securityhub:BatchUpdateFindings",
    "securityhub.createactiontarget": "securityhub:CreateActionTarget",
    "securityhub.createfindingaggregator": "securityhub:CreateFindingAggregator",
    "securityhub.createinsight": "securityhub:CreateInsight",
    "securityhub.createmembers": "securityhub:CreateMembers",
    "securityhub.declineinvitations": "securityhub:DeclineInvitations",
    "securityhub.deleteactiontarget": "securityhub:DeleteActionTarget",
    "securityhub.deletefindingaggregator": "securityhub:DeleteFindingAggregator",
    "securityhub.deleteinsight": "securityhub:DeleteInsight",
    "securityhub.deleteinvitations": "securityhub:DeleteInvitations",
    "securityhub.deletemembers": "securityhub:DeleteMembers",
    "securityhub.describeactiontargets": "securityhub:DescribeActionTargets",
    "securityhub.describehub": "securityhub:DescribeHub",
    "securityhub.describeorganizationconfiguration": "securityhub:DescribeOrganizationConfiguration",
    "securityhub.describeproducts": "securityhub:DescribeProducts",
    "securityhub.describestandards": "securityhub:DescribeStandards",
    "securityhub.describestandardscontrols": "securityhub:DescribeStandardsControls",
    "securityhub.disableimportfindingsforproduct": "securityhub:DisableImportFindingsForProduct",
    "securityhub.disableorganizationadminaccount": "securityhub:DisableOrganizationAdminAccount",
    "securityhub.disablesecurityhub": "securityhub:DisableSecurityHub",
    "securityhub.disassociatefromadministratoraccount": "securityhub:DisassociateFromAdministratorAccount",
    "securityhub.disassociatefrommasteraccount": "securityhub:DisassociateFromMasterAccount",
    "securityhub.disassociatemembers": "securityhub:DisassociateMembers",
    "securityhub.enableimportfindingsforproduct": "securityhub:EnableImportFindingsForProduct",
    "securityhub.enableorganizationadminaccount": "securityhub:EnableOrganizationAdminAccount",
    "securityhub.enablesecurityhub": "securityhub:EnableSecurityHub",
    "securityhub.getadministratoraccount": "securityhub:GetAdministratorAccount",
    "securityhub.getenabledstandards": "securityhub:GetEnabledStandards",
    "securityhub.getfindingaggregator": "securityhub:GetFindingAggregator",
    "securityhub.getfindings": "securityhub:GetFindings",
    "securityhub.getinsightresults": "securityhub:GetInsightResults",
    "securityhub.getinsights": "securityhub:GetInsights",
    "securityhub.getinvitationscount": "securityhub:GetInvitationsCount",
    "securityhub.getmasteraccount": "securityhub:GetMasterAccount",
    "securityhub.getmembers": "securityhub:GetMembers",
    "securityhub.invitemembers": "securityhub:InviteMembers",
    "securityhub.listenabledproductsforimport": "securityhub:ListEnabledProductsForImport",
    "securityhub.listfindingaggregators": "securityhub:ListFindingAggregators",
    "securityhub.listinvitations": "securityhub:ListInvitations",
    "securityhub.listmembers": "securityhub:ListMembers",
    "securityhub.listorganizationadminaccounts": "securityhub:ListOrganizationAdminAccounts",
    "securityhub.listtagsforresource": "securityhub:ListTagsForResource",
    "securityhub.tagresource": "securityhub:TagResource",
    "securityhub.untagresource": "securityhub:UntagResource",
    "securityhub.updateactiontarget": "securityhub:UpdateActionTarget",
    "securityhub.updatefindingaggregator": "securityhub:UpdateFindingAggregator",
    "securityhub.updatefindings": "securityhub:UpdateFindings",
    "securityhub.updateinsight": "securityhub:UpdateInsight",
    "securityhub.updateorganizationconfiguration": "securityhub:UpdateOrganizationConfiguration",
    "securityhub.updatesecurityhubconfiguration": "securityhub:UpdateSecurityHubConfiguration",
    "securityhub.updatestandardscontrol": "securityhub:UpdateStandardsControl",
    "serverlessapplicationrepository.createapplication": "serverlessrepo:CreateApplication",
    "serverlessapplicationrepository.createapplicationversion": "serverlessrepo:CreateApplicationVersion",
    "serverlessapplicationrepository.createcloudformationchangeset": "serverlessrepo:CreateCloudFormationChangeSet",
    "serverlessapplicationrepository.createcloudformationtemplate": "serverlessrepo:CreateCloudFormationTemplate",
    "serverlessapplicationrepository.deleteapplication": "serverlessrepo:DeleteApplication",
    "serverlessapplicationrepository.getapplication": "serverlessrepo:GetApplication",
    "serverlessapplicationrepository.getapplicationpolicy": "serverlessrepo:GetApplicationPolicy",
    "serverlessapplicationrepository.getcloudformationtemplate": "serverlessrepo:GetCloudFormationTemplate",
    "serverlessapplicationrepository.listapplicationdependencies": "serverlessrepo:ListApplicationDependencies",
    "serverlessapplicationrepository.listapplications": "serverlessrepo:ListApplications",
    "serverlessapplicationrepository.listapplicationversions": "serverlessrepo:ListApplicationVersions",
    "serverlessapplicationrepository.putapplicationpolicy": "serverlessrepo:PutApplicationPolicy",
    "serverlessapplicationrepository.unshareapplication": "serverlessrepo:UnshareApplication",
    "serverlessapplicationrepository.updateapplication": "serverlessrepo:UpdateApplication",
    "servicecatalog.acceptportfolioshare": "servicecatalog:AcceptPortfolioShare",
    "servicecatalog.associatebudgetwithresource": "servicecatalog:AssociateBudgetWithResource",
    "servicecatalog.associateprincipalwithportfolio": "servicecatalog:AssociatePrincipalWithPortfolio",
    "servicecatalog.associateproductwithportfolio": "servicecatalog:AssociateProductWithPortfolio",
    "servicecatalog.associateserviceactionwithprovisioningartifact": "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
    "servicecatalog.associatetagoptionwithresource": "servicecatalog:AssociateTagOptionWithResource",
    "servicecatalog.batchassociateserviceactionwithprovisioningartifact": "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
    "servicecatalog.batchdisassociateserviceactionfromprovisioningartifact": "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
    "servicecatalog.copyproduct": "servicecatalog:CopyProduct",
    "servicecatalog.createconstraint": "servicecatalog:CreateConstraint",
    "servicecatalog.createportfolio": "servicecatalog:CreatePortfolio",
    "servicecatalog.createportfolioshare": "servicecatalog:CreatePortfolioShare",
    "servicecatalog.createproduct": "servicecatalog:CreateProduct",
    "servicecatalog.createprovisionedproductplan": "servicecatalog:CreateProvisionedProductPlan",
    "servicecatalog.createprovisioningartifact": "servicecatalog:CreateProvisioningArtifact",
    "servicecatalog.createserviceaction": "servicecatalog:CreateServiceAction",
    "servicecatalog.createtagoption": "servicecatalog:CreateTagOption",
    "servicecatalog.deleteconstraint": "servicecatalog:DeleteConstraint",
    "servicecatalog.deleteportfolio": "servicecatalog:DeletePortfolio",
    "servicecatalog.deleteportfolioshare": "servicecatalog:DeletePortfolioShare",
    "servicecatalog.deleteproduct": "servicecatalog:DeleteProduct",
    "servicecatalog.deleteprovisionedproductplan": "servicecatalog:DeleteProvisionedProductPlan",
    "servicecatalog.deleteprovisioningartifact": "servicecatalog:DeleteProvisioningArtifact",
    "servicecatalog.deleteserviceaction": "servicecatalog:DeleteServiceAction",
    "servicecatalog.deletetagoption": "servicecatalog:DeleteTagOption",
    "servicecatalog.describeconstraint": "servicecatalog:DescribeConstraint",
    "servicecatalog.describecopyproductstatus": "servicecatalog:DescribeCopyProductStatus",
    "servicecatalog.describeportfolio": "servicecatalog:DescribePortfolio",
    "servicecatalog.describeportfolioshares": "servicecatalog:DescribePortfolioShares",
    "servicecatalog.describeportfoliosharestatus": "servicecatalog:DescribePortfolioShareStatus",
    "servicecatalog.describeproduct": "servicecatalog:DescribeProduct",
    "servicecatalog.describeproductasadmin": "servicecatalog:DescribeProductAsAdmin",
    "servicecatalog.describeproductview": "servicecatalog:DescribeProductView",
    "servicecatalog.describeprovisionedproduct": "servicecatalog:DescribeProvisionedProduct",
    "servicecatalog.describeprovisionedproductplan": "servicecatalog:DescribeProvisionedProductPlan",
    "servicecatalog.describeprovisioningartifact": "servicecatalog:DescribeProvisioningArtifact",
    "servicecatalog.describeprovisioningparameters": "servicecatalog:DescribeProvisioningParameters",
    "servicecatalog.describerecord": "servicecatalog:DescribeRecord",
    "servicecatalog.describeserviceaction": "servicecatalog:DescribeServiceAction",
    "servicecatalog.describeserviceactionexecutionparameters": "servicecatalog:DescribeServiceActionExecutionParameters",
    "servicecatalog.describetagoption": "servicecatalog:DescribeTagOption",
    "servicecatalog.disableawsorganizationsaccess": "servicecatalog:DisableAWSOrganizationsAccess",
    "servicecatalog.disassociatebudgetfromresource": "servicecatalog:DisassociateBudgetFromResource",
    "servicecatalog.disassociateprincipalfromportfolio": "servicecatalog:DisassociatePrincipalFromPortfolio",
    "servicecatalog.disassociateproductfromportfolio": "servicecatalog:DisassociateProductFromPortfolio",
    "servicecatalog.disassociateserviceactionfromprovisioningartifact": "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
    "servicecatalog.disassociatetagoptionfromresource": "servicecatalog:DisassociateTagOptionFromResource",
    "servicecatalog.enableawsorganizationsaccess": "servicecatalog:EnableAWSOrganizationsAccess",
    "servicecatalog.executeprovisionedproductplan": "servicecatalog:ExecuteProvisionedProductPlan",
    "servicecatalog.executeprovisionedproductserviceaction": "servicecatalog:ExecuteProvisionedProductServiceAction",
    "servicecatalog.getawsorganizationsaccessstatus": "servicecatalog:GetAWSOrganizationsAccessStatus",
    "servicecatalog.getprovisionedproductoutputs": "servicecatalog:GetProvisionedProductOutputs",
    "servicecatalog.importasprovisionedproduct": "servicecatalog:ImportAsProvisionedProduct",
    "servicecatalog.listacceptedportfolioshares": "servicecatalog:ListAcceptedPortfolioShares",
    "servicecatalog.listbudgetsforresource": "servicecatalog:ListBudgetsForResource",
    "servicecatalog.listconstraintsforportfolio": "servicecatalog:ListConstraintsForPortfolio",
    "servicecatalog.listlaunchpaths": "servicecatalog:ListLaunchPaths",
    "servicecatalog.listorganizationportfolioaccess": "servicecatalog:ListOrganizationPortfolioAccess",
    "servicecatalog.listportfolioaccess": "servicecatalog:ListPortfolioAccess",
    "servicecatalog.listportfolios": "servicecatalog:ListPortfolios",
    "servicecatalog.listportfoliosforproduct": "servicecatalog:ListPortfoliosForProduct",
    "servicecatalog.listprincipalsforportfolio": "servicecatalog:ListPrincipalsForPortfolio",
    "servicecatalog.listprovisionedproductplans": "servicecatalog:ListProvisionedProductPlans",
    "servicecatalog.listprovisioningartifacts": "servicecatalog:ListProvisioningArtifacts",
    "servicecatalog.listprovisioningartifactsforserviceaction": "servicecatalog:ListProvisioningArtifactsForServiceAction",
    "servicecatalog.listrecordhistory": "servicecatalog:ListRecordHistory",
    "servicecatalog.listresourcesfortagoption": "servicecatalog:ListResourcesForTagOption",
    "servicecatalog.listserviceactions": "servicecatalog:ListServiceActions",
    "servicecatalog.listserviceactionsforprovisioningartifact": "servicecatalog:ListServiceActionsForProvisioningArtifact",
    "servicecatalog.liststackinstancesforprovisionedproduct": "servicecatalog:ListStackInstancesForProvisionedProduct",
    "servicecatalog.listtagoptions": "servicecatalog:ListTagOptions",
    "servicecatalog.provisionproduct": "servicecatalog:ProvisionProduct",
    "servicecatalog.rejectportfolioshare": "servicecatalog:RejectPortfolioShare",
    "servicecatalog.scanprovisionedproducts": "servicecatalog:ScanProvisionedProducts",
    "servicecatalog.searchproducts": "servicecatalog:SearchProducts",
    "servicecatalog.searchproductsasadmin": "servicecatalog:SearchProductsAsAdmin",
    "servicecatalog.searchprovisionedproducts": "servicecatalog:SearchProvisionedProducts",
    "servicecatalog.terminateprovisionedproduct": "servicecatalog:TerminateProvisionedProduct",
    "servicecatalog.updateconstraint": "servicecatalog:UpdateConstraint",
    "servicecatalog.updateportfolio": "servicecatalog:UpdatePortfolio",
    "servicecatalog.updateportfolioshare": "servicecatalog:UpdatePortfolioShare",
    "servicecatalog.updateproduct": "servicecatalog:UpdateProduct",
    "servicecatalog.updateprovisionedproduct": "servicecatalog:UpdateProvisionedProduct",
    "servicecatalog.updateprovisionedproductproperties": "servicecatalog:UpdateProvisionedProductProperties",
    "servicecatalog.updateprovisioningartifact": "servicecatalog:UpdateProvisioningArtifact",
    "servicecatalog.updateserviceaction": "servicecatalog:UpdateServiceAction",
    "servicecatalog.updatetagoption": "servicecatalog:UpdateTagOption",
    "servicecatalogappregistry.associateattributegroup": "servicecatalog:AssociateAttributeGroup",
    "servicecatalogappregistry.associateresource": "servicecatalog:AssociateResource",
    "servicecatalogappregistry.createapplication": "servicecatalog:CreateApplication",
    "servicecatalogappregistry.createattributegroup": "servicecatalog:CreateAttributeGroup",
    "servicecatalogappregistry.deleteapplication": "servicecatalog:DeleteApplication",
    "servicecatalogappregistry.deleteattributegroup": "servicecatalog:DeleteAttributeGroup",
    "servicecatalogappregistry.disassociateattributegroup": "servicecatalog:DisassociateAttributeGroup",
    "servicecatalogappregistry.disassociateresource": "servicecatalog:DisassociateResource",
    "servicecatalogappregistry.getapplication": "servicecatalog:GetApplication",
    "servicecatalogappregistry.getassociatedresource": "servicecatalog:GetAssociatedResource",
    "servicecatalogappregistry.getattributegroup": "servicecatalog:GetAttributeGroup",
    "servicecatalogappregistry.listapplications": "servicecatalog:ListApplications",
    "servicecatalogappregistry.listassociatedattributegroups": "servicecatalog:ListAssociatedAttributeGroups",
    "servicecatalogappregistry.listassociatedresources": "servicecatalog:ListAssociatedResources",
    "servicecatalogappregistry.listattributegroups": "servicecatalog:ListAttributeGroups",
    "servicecatalogappregistry.listattributegroupsforapplication": "servicecatalog:ListAttributeGroupsForApplication",
    "servicecatalogappregistry.listtagsforresource": "servicecatalog:ListTagsForResource",
    "servicecatalogappregistry.syncresource": "servicecatalog:SyncResource",
    "servicecatalogappregistry.tagresource": "servicecatalog:TagResource",
    "servicecatalogappregistry.untagresource": "servicecatalog:UntagResource",
    "servicecatalogappregistry.updateapplication": "servicecatalog:UpdateApplication",
    "servicecatalogappregistry.updateattributegroup": "servicecatalog:UpdateAttributeGroup",
    "servicediscovery.createhttpnamespace": "servicediscovery:CreateHttpNamespace",
    "servicediscovery.createprivatednsnamespace": "servicediscovery:CreatePrivateDnsNamespace",
    "servicediscovery.createpublicdnsnamespace": "servicediscovery:CreatePublicDnsNamespace",
    "servicediscovery.createservice": "servicediscovery:CreateService",
    "servicediscovery.deletenamespace": "servicediscovery:DeleteNamespace",
    "servicediscovery.deleteservice": "servicediscovery:DeleteService",
    "servicediscovery.deregisterinstance": "servicediscovery:DeregisterInstance",
    "servicediscovery.discoverinstances": "servicediscovery:DiscoverInstances",
    "servicediscovery.getinstance": "servicediscovery:GetInstance",
    "servicediscovery.getinstanceshealthstatus": "servicediscovery:GetInstancesHealthStatus",
    "servicediscovery.getnamespace": "servicediscovery:GetNamespace",
    "servicediscovery.getoperation": "servicediscovery:GetOperation",
    "servicediscovery.getservice": "servicediscovery:GetService",
    "servicediscovery.listinstances": "servicediscovery:ListInstances",
    "servicediscovery.listnamespaces": "servicediscovery:ListNamespaces",
    "servicediscovery.listoperations": "servicediscovery:ListOperations",
    "servicediscovery.listservices": "servicediscovery:ListServices",
    "servicediscovery.listtagsforresource": "servicediscovery:ListTagsForResource",
    "servicediscovery.registerinstance": "servicediscovery:RegisterInstance",
    "servicediscovery.tagresource": "servicediscovery:TagResource",
    "servicediscovery.untagresource": "servicediscovery:UntagResource",
    "servicediscovery.updatehttpnamespace": "servicediscovery:UpdateHttpNamespace",
    "servicediscovery.updateinstancecustomhealthstatus": "servicediscovery:UpdateInstanceCustomHealthStatus",
    "servicediscovery.updateprivatednsnamespace": "servicediscovery:UpdatePrivateDnsNamespace",
    "servicediscovery.updatepublicdnsnamespace": "servicediscovery:UpdatePublicDnsNamespace",
    "servicediscovery.updateservice": "servicediscovery:UpdateService",
    "servicequotas.associateservicequotatemplate": "servicequotas:AssociateServiceQuotaTemplate",
    "servicequotas.deleteservicequotaincreaserequestfromtemplate": "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
    "servicequotas.disassociateservicequotatemplate": "servicequotas:DisassociateServiceQuotaTemplate",
    "servicequotas.getassociationforservicequotatemplate": "servicequotas:GetAssociationForServiceQuotaTemplate",
    "servicequotas.getawsdefaultservicequota": "servicequotas:GetAWSDefaultServiceQuota",
    "servicequotas.getrequestedservicequotachange": "servicequotas:GetRequestedServiceQuotaChange",
    "servicequotas.getservicequota": "servicequotas:GetServiceQuota",
    "servicequotas.getservicequotaincreaserequestfromtemplate": "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
    "servicequotas.listawsdefaultservicequotas": "servicequotas:ListAWSDefaultServiceQuotas",
    "servicequotas.listrequestedservicequotachangehistory": "servicequotas:ListRequestedServiceQuotaChangeHistory",
    "servicequotas.listrequestedservicequotachangehistorybyquota": "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
    "servicequotas.listservicequotaincreaserequestsintemplate": "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
    "servicequotas.listservicequotas": "servicequotas:ListServiceQuotas",
    "servicequotas.listservices": "servicequotas:ListServices",
    "servicequotas.listtagsforresource": "servicequotas:ListTagsForResource",
    "servicequotas.putservicequotaincreaserequestintotemplate": "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
    "servicequotas.requestservicequotaincrease": "servicequotas:RequestServiceQuotaIncrease",
    "servicequotas.tagresource": "servicequotas:TagResource",
    "servicequotas.untagresource": "servicequotas:UntagResource",
    "ses.clonereceiptruleset": "ses:CloneReceiptRuleSet",
    "ses.createconfigurationset": "ses:CreateConfigurationSet",
    "ses.createconfigurationseteventdestination": "ses:CreateConfigurationSetEventDestination",
    "ses.createconfigurationsettrackingoptions": "ses:CreateConfigurationSetTrackingOptions",
    "ses.createcustomverificationemailtemplate": "ses:CreateCustomVerificationEmailTemplate",
    "ses.createreceiptfilter": "ses:CreateReceiptFilter",
    "ses.createreceiptrule": "ses:CreateReceiptRule",
    "ses.createreceiptruleset": "ses:CreateReceiptRuleSet",
    "ses.createtemplate": "ses:CreateTemplate",
    "ses.deleteconfigurationset": "ses:DeleteConfigurationSet",
    "ses.deleteconfigurationseteventdestination": "ses:DeleteConfigurationSetEventDestination",
    "ses.deleteconfigurationsettrackingoptions": "ses:DeleteConfigurationSetTrackingOptions",
    "ses.deletecustomverificationemailtemplate": "ses:DeleteCustomVerificationEmailTemplate",
    "ses.deleteidentity": "ses:DeleteIdentity",
    "ses.deleteidentitypolicy": "ses:DeleteIdentityPolicy",
    "ses.deletereceiptfilter": "ses:DeleteReceiptFilter",
    "ses.deletereceiptrule": "ses:DeleteReceiptRule",
    "ses.deletereceiptruleset": "ses:DeleteReceiptRuleSet",
    "ses.deletetemplate": "ses:DeleteTemplate",
    "ses.deleteverifiedemailaddress": "ses:DeleteVerifiedEmailAddress",
    "ses.describeactivereceiptruleset": "ses:DescribeActiveReceiptRuleSet",
    "ses.describeconfigurationset": "ses:DescribeConfigurationSet",
    "ses.describereceiptrule": "ses:DescribeReceiptRule",
    "ses.describereceiptruleset": "ses:DescribeReceiptRuleSet",
    "ses.getaccountsendingenabled": "ses:GetAccountSendingEnabled",
    "ses.getcustomverificationemailtemplate": "ses:GetCustomVerificationEmailTemplate",
    "ses.getidentitydkimattributes": "ses:GetIdentityDkimAttributes",
    "ses.getidentitymailfromdomainattributes": "ses:GetIdentityMailFromDomainAttributes",
    "ses.getidentitynotificationattributes": "ses:GetIdentityNotificationAttributes",
    "ses.getidentitypolicies": "ses:GetIdentityPolicies",
    "ses.getidentityverificationattributes": "ses:GetIdentityVerificationAttributes",
    "ses.getsendquota": "ses:GetSendQuota",
    "ses.getsendstatistics": "ses:GetSendStatistics",
    "ses.gettemplate": "ses:GetTemplate",
    "ses.listconfigurationsets": "ses:ListConfigurationSets",
    "ses.listcustomverificationemailtemplates": "ses:ListCustomVerificationEmailTemplates",
    "ses.listidentities": "ses:ListIdentities",
    "ses.listidentitypolicies": "ses:ListIdentityPolicies",
    "ses.listreceiptfilters": "ses:ListReceiptFilters",
    "ses.listreceiptrulesets": "ses:ListReceiptRuleSets",
    "ses.listtemplates": "ses:ListTemplates",
    "ses.listverifiedemailaddresses": "ses:ListVerifiedEmailAddresses",
    "ses.putconfigurationsetdeliveryoptions": "ses:PutConfigurationSetDeliveryOptions",
    "ses.putidentitypolicy": "ses:PutIdentityPolicy",
    "ses.reorderreceiptruleset": "ses:ReorderReceiptRuleSet",
    "ses.sendbounce": "ses:SendBounce",
    "ses.sendbulktemplatedemail": "ses:SendBulkTemplatedEmail",
    "ses.sendcustomverificationemail": "ses:SendCustomVerificationEmail",
    "ses.sendemail": "ses:SendEmail",
    "ses.sendrawemail": "ses:SendRawEmail",
    "ses.sendtemplatedemail": "ses:SendTemplatedEmail",
    "ses.setactivereceiptruleset": "ses:SetActiveReceiptRuleSet",
    "ses.setidentitydkimenabled": "ses:SetIdentityDkimEnabled",
    "ses.setidentityfeedbackforwardingenabled": "ses:SetIdentityFeedbackForwardingEnabled",
    "ses.setidentityheadersinnotificationsenabled": "ses:SetIdentityHeadersInNotificationsEnabled",
    "ses.setidentitymailfromdomain": "ses:SetIdentityMailFromDomain",
    "ses.setidentitynotificationtopic": "ses:SetIdentityNotificationTopic",
    "ses.setreceiptruleposition": "ses:SetReceiptRulePosition",
    "ses.testrendertemplate": "ses:TestRenderTemplate",
    "ses.updateaccountsendingenabled": "ses:UpdateAccountSendingEnabled",
    "ses.updateconfigurationseteventdestination": "ses:UpdateConfigurationSetEventDestination",
    "ses.updateconfigurationsetreputationmetricsenabled": "ses:UpdateConfigurationSetReputationMetricsEnabled",
    "ses.updateconfigurationsetsendingenabled": "ses:UpdateConfigurationSetSendingEnabled",
    "ses.updateconfigurationsettrackingoptions": "ses:UpdateConfigurationSetTrackingOptions",
    "ses.updatecustomverificationemailtemplate": "ses:UpdateCustomVerificationEmailTemplate",
    "ses.updatereceiptrule": "ses:UpdateReceiptRule",
    "ses.updatetemplate": "ses:UpdateTemplate",
    "ses.verifydomaindkim": "ses:VerifyDomainDkim",
    "ses.verifydomainidentity": "ses:VerifyDomainIdentity",
    "ses.verifyemailaddress": "ses:VerifyEmailAddress",
    "ses.verifyemailidentity": "ses:VerifyEmailIdentity",
    "sesv2.createconfigurationset": "ses:CreateConfigurationSet",
    "sesv2.createconfigurationseteventdestination": "ses:CreateConfigurationSetEventDestination",
    "sesv2.createcontact": "ses:CreateContact",
    "sesv2.createcontactlist": "ses:CreateContactList",
    "sesv2.createcustomverificationemailtemplate": "ses:CreateCustomVerificationEmailTemplate",
    "sesv2.creatededicatedippool": "ses:CreateDedicatedIpPool",
    "sesv2.createdeliverabilitytestreport": "ses:CreateDeliverabilityTestReport",
    "sesv2.createemailidentity": "ses:CreateEmailIdentity",
    "sesv2.createemailidentitypolicy": "ses:CreateEmailIdentityPolicy",
    "sesv2.createemailtemplate": "ses:CreateEmailTemplate",
    "sesv2.createimportjob": "ses:CreateImportJob",
    "sesv2.deleteconfigurationset": "ses:DeleteConfigurationSet",
    "sesv2.deleteconfigurationseteventdestination": "ses:DeleteConfigurationSetEventDestination",
    "sesv2.deletecontact": "ses:DeleteContact",
    "sesv2.deletecontactlist": "ses:DeleteContactList",
    "sesv2.deletecustomverificationemailtemplate": "ses:DeleteCustomVerificationEmailTemplate",
    "sesv2.deletededicatedippool": "ses:DeleteDedicatedIpPool",
    "sesv2.deleteemailidentity": "ses:DeleteEmailIdentity",
    "sesv2.deleteemailidentitypolicy": "ses:DeleteEmailIdentityPolicy",
    "sesv2.deleteemailtemplate": "ses:DeleteEmailTemplate",
    "sesv2.deletesuppresseddestination": "ses:DeleteSuppressedDestination",
    "sesv2.getaccount": "ses:GetAccount",
    "sesv2.getblacklistreports": "ses:GetBlacklistReports",
    "sesv2.getconfigurationset": "ses:GetConfigurationSet",
    "sesv2.getconfigurationseteventdestinations": "ses:GetConfigurationSetEventDestinations",
    "sesv2.getcontact": "ses:GetContact",
    "sesv2.getcontactlist": "ses:GetContactList",
    "sesv2.getcustomverificationemailtemplate": "ses:GetCustomVerificationEmailTemplate",
    "sesv2.getdedicatedip": "ses:GetDedicatedIp",
    "sesv2.getdedicatedips": "ses:GetDedicatedIps",
    "sesv2.getdeliverabilitydashboardoptions": "ses:GetDeliverabilityDashboardOptions",
    "sesv2.getdeliverabilitytestreport": "ses:GetDeliverabilityTestReport",
    "sesv2.getdomaindeliverabilitycampaign": "ses:GetDomainDeliverabilityCampaign",
    "sesv2.getdomainstatisticsreport": "ses:GetDomainStatisticsReport",
    "sesv2.getemailidentity": "ses:GetEmailIdentity",
    "sesv2.getemailidentitypolicies": "ses:GetEmailIdentityPolicies",
    "sesv2.getemailtemplate": "ses:GetEmailTemplate",
    "sesv2.getimportjob": "ses:GetImportJob",
    "sesv2.getsuppresseddestination": "ses:GetSuppressedDestination",
    "sesv2.listconfigurationsets": "ses:ListConfigurationSets",
    "sesv2.listcontactlists": "ses:ListContactLists",
    "sesv2.listcontacts": "ses:ListContacts",
    "sesv2.listcustomverificationemailtemplates": "ses:ListCustomVerificationEmailTemplates",
    "sesv2.listdedicatedippools": "ses:ListDedicatedIpPools",
    "sesv2.listdeliverabilitytestreports": "ses:ListDeliverabilityTestReports",
    "sesv2.listdomaindeliverabilitycampaigns": "ses:ListDomainDeliverabilityCampaigns",
    "sesv2.listemailidentities": "ses:ListEmailIdentities",
    "sesv2.listemailtemplates": "ses:ListEmailTemplates",
    "sesv2.listimportjobs": "ses:ListImportJobs",
    "sesv2.listsuppresseddestinations": "ses:ListSuppressedDestinations",
    "sesv2.listtagsforresource": "ses:ListTagsForResource",
    "sesv2.putaccountdedicatedipwarmupattributes": "ses:PutAccountDedicatedIpWarmupAttributes",
    "sesv2.putaccountdetails": "ses:PutAccountDetails",
    "sesv2.putaccountsendingattributes": "ses:PutAccountSendingAttributes",
    "sesv2.putaccountsuppressionattributes": "ses:PutAccountSuppressionAttributes",
    "sesv2.putconfigurationsetdeliveryoptions": "ses:PutConfigurationSetDeliveryOptions",
    "sesv2.putconfigurationsetreputationoptions": "ses:PutConfigurationSetReputationOptions",
    "sesv2.putconfigurationsetsendingoptions": "ses:PutConfigurationSetSendingOptions",
    "sesv2.putconfigurationsetsuppressionoptions": "ses:PutConfigurationSetSuppressionOptions",
    "sesv2.putconfigurationsettrackingoptions": "ses:PutConfigurationSetTrackingOptions",
    "sesv2.putdedicatedipinpool": "ses:PutDedicatedIpInPool",
    "sesv2.putdedicatedipwarmupattributes": "ses:PutDedicatedIpWarmupAttributes",
    "sesv2.putdeliverabilitydashboardoption": "ses:PutDeliverabilityDashboardOption",
    "sesv2.putemailidentityconfigurationsetattributes": "ses:PutEmailIdentityConfigurationSetAttributes",
    "sesv2.putemailidentitydkimattributes": "ses:PutEmailIdentityDkimAttributes",
    "sesv2.putemailidentitydkimsigningattributes": "ses:PutEmailIdentityDkimSigningAttributes",
    "sesv2.putemailidentityfeedbackattributes": "ses:PutEmailIdentityFeedbackAttributes",
    "sesv2.putemailidentitymailfromattributes": "ses:PutEmailIdentityMailFromAttributes",
    "sesv2.putsuppresseddestination": "ses:PutSuppressedDestination",
    "sesv2.sendbulkemail": "ses:SendBulkEmail",
    "sesv2.sendcustomverificationemail": "ses:SendCustomVerificationEmail",
    "sesv2.sendemail": "ses:SendEmail",
    "sesv2.tagresource": "ses:TagResource",
    "sesv2.testrenderemailtemplate": "ses:TestRenderEmailTemplate",
    "sesv2.untagresource": "ses:UntagResource",
    "sesv2.updateconfigurationseteventdestination": "ses:UpdateConfigurationSetEventDestination",
    "sesv2.updatecontact": "ses:UpdateContact",
    "sesv2.updatecontactlist": "ses:UpdateContactList",
    "sesv2.updatecustomverificationemailtemplate": "ses:UpdateCustomVerificationEmailTemplate",
    "sesv2.updateemailidentitypolicy": "ses:UpdateEmailIdentityPolicy",
    "sesv2.updateemailtemplate": "ses:UpdateEmailTemplate",
    "shield.associatedrtlogbucket": "shield:AssociateDRTLogBucket",
    "shield.associatedrtrole": "shield:AssociateDRTRole",
    "shield.associatehealthcheck": "shield:AssociateHealthCheck",
    "shield.associateproactiveengagementdetails": "shield:AssociateProactiveEngagementDetails",
    "shield.createprotection": "shield:CreateProtection",
    "shield.createprotectiongroup": "shield:CreateProtectionGroup",
    "shield.createsubscription": "shield:CreateSubscription",
    "shield.deleteprotection": "shield:DeleteProtection",
    "shield.deleteprotectiongroup": "shield:DeleteProtectionGroup",
    "shield.deletesubscription": "shield:DeleteSubscription",
    "shield.describeattack": "shield:DescribeAttack",
    "shield.describeattackstatistics": "shield:DescribeAttackStatistics",
    "shield.describedrtaccess": "shield:DescribeDRTAccess",
    "shield.describeemergencycontactsettings": "shield:DescribeEmergencyContactSettings",
    "shield.describeprotection": "shield:DescribeProtection",
    "shield.describeprotectiongroup": "shield:DescribeProtectionGroup",
    "shield.describesubscription": "shield:DescribeSubscription",
    "shield.disableapplicationlayerautomaticresponse": "shield:DisableApplicationLayerAutomaticResponse",
    "shield.disableproactiveengagement": "shield:DisableProactiveEngagement",
    "shield.disassociatedrtlogbucket": "shield:DisassociateDRTLogBucket",
    "shield.disassociatedrtrole": "shield:DisassociateDRTRole",
    "shield.disassociatehealthcheck": "shield:DisassociateHealthCheck",
    "shield.enableapplicationlayerautomaticresponse": "shield:EnableApplicationLayerAutomaticResponse",
    "shield.enableproactiveengagement": "shield:EnableProactiveEngagement",
    "shield.getsubscriptionstate": "shield:GetSubscriptionState",
    "shield.listattacks": "shield:ListAttacks",
    "shield.listprotectiongroups": "shield:ListProtectionGroups",
    "shield.listprotections": "shield:ListProtections",
    "shield.listresourcesinprotectiongroup": "shield:ListResourcesInProtectionGroup",
    "shield.listtagsforresource": "shield:ListTagsForResource",
    "shield.tagresource": "shield:TagResource",
    "shield.untagresource": "shield:UntagResource",
    "shield.updateapplicationlayerautomaticresponse": "shield:UpdateApplicationLayerAutomaticResponse",
    "shield.updateemergencycontactsettings": "shield:UpdateEmergencyContactSettings",
    "shield.updateprotectiongroup": "shield:UpdateProtectionGroup",
    "shield.updatesubscription": "shield:UpdateSubscription",
    "signer.addprofilepermission": "signer:AddProfilePermission",
    "signer.cancelsigningprofile": "signer:CancelSigningProfile",
    "signer.describesigningjob": "signer:DescribeSigningJob",
    "signer.getsigningplatform": "signer:GetSigningPlatform",
    "signer.getsigningprofile": "signer:GetSigningProfile",
    "signer.listprofilepermissions": "signer:ListProfilePermissions",
    "signer.listsigningjobs": "signer:ListSigningJobs",
    "signer.listsigningplatforms": "signer:ListSigningPlatforms",
    "signer.listsigningprofiles": "signer:ListSigningProfiles",
    "signer.listtagsforresource": "signer:ListTagsForResource",
    "signer.putsigningprofile": "signer:PutSigningProfile",
    "signer.removeprofilepermission": "signer:RemoveProfilePermission",
    "signer.revokesignature": "signer:RevokeSignature",
    "signer.revokesigningprofile": "signer:RevokeSigningProfile",
    "signer.startsigningjob": "signer:StartSigningJob",
    "signer.tagresource": "signer:TagResource",
    "signer.untagresource": "signer:UntagResource",
    "simpledb.batchdeleteattributes": "sdb:BatchDeleteAttributes",
    "simpledb.batchputattributes": "sdb:BatchPutAttributes",
    "simpledb.createdomain": "sdb:CreateDomain",
    "simpledb.deleteattributes": "sdb:DeleteAttributes",
    "simpledb.deletedomain": "sdb:DeleteDomain",
    "simpledb.domainmetadata": "sdb:DomainMetadata",
    "simpledb.getattributes": "sdb:GetAttributes",
    "simpledb.listdomains": "sdb:ListDomains",
    "simpledb.putattributes": "sdb:PutAttributes",
    "simpledb.select": "sdb:Select",
    "sms.createapp": "sms:CreateApp",
    "sms.createreplicationjob": "sms:CreateReplicationJob",
    "sms.deleteapp": "sms:DeleteApp",
    "sms.deleteapplaunchconfiguration": "sms:DeleteAppLaunchConfiguration",
    "sms.deleteappreplicationconfiguration": "sms:DeleteAppReplicationConfiguration",
    "sms.deleteappvalidationconfiguration": "sms:DeleteAppValidationConfiguration",
    "sms.deletereplicationjob": "sms:DeleteReplicationJob",
    "sms.deleteservercatalog": "sms:DeleteServerCatalog",
    "sms.disassociateconnector": "sms:DisassociateConnector",
    "sms.generatechangeset": "sms:GenerateChangeSet",
    "sms.generatetemplate": "sms:GenerateTemplate",
    "sms.getapp": "sms:GetApp",
    "sms.getapplaunchconfiguration": "sms:GetAppLaunchConfiguration",
    "sms.getappreplicationconfiguration": "sms:GetAppReplicationConfiguration",
    "sms.getappvalidationconfiguration": "sms:GetAppValidationConfiguration",
    "sms.getappvalidationoutput": "sms:GetAppValidationOutput",
    "sms.getconnectors": "sms:GetConnectors",
    "sms.getreplicationjobs": "sms:GetReplicationJobs",
    "sms.getreplicationruns": "sms:GetReplicationRuns",
    "sms.getservers": "sms:GetServers",
    "sms.importappcatalog": "sms:ImportAppCatalog",
    "sms.importservercatalog": "sms:ImportServerCatalog",
    "sms.launchapp": "sms:LaunchApp",
    "sms.listapps": "sms:ListApps",
    "sms.notifyappvalidationoutput": "sms:NotifyAppValidationOutput",
    "sms.putapplaunchconfiguration": "sms:PutAppLaunchConfiguration",
    "sms.putappreplicationconfiguration": "sms:PutAppReplicationConfiguration",
    "sms.putappvalidationconfiguration": "sms:PutAppValidationConfiguration",
    "sms.startappreplication": "sms:StartAppReplication",
    "sms.startondemandappreplication": "sms:StartOnDemandAppReplication",
    "sms.startondemandreplicationrun": "sms:StartOnDemandReplicationRun",
    "sms.stopappreplication": "sms:StopAppReplication",
    "sms.terminateapp": "sms:TerminateApp",
    "sms.updateapp": "sms:UpdateApp",
    "sms.updatereplicationjob": "sms:UpdateReplicationJob",
    "snowball.cancelcluster": "snowball:CancelCluster",
    "snowball.canceljob": "snowball:CancelJob",
    "snowball.createaddress": "snowball:CreateAddress",
    "snowball.createcluster": "snowball:CreateCluster",
    "snowball.createjob": "snowball:CreateJob",
    "snowball.createlongtermpricing": "snowball:CreateLongTermPricing",
    "snowball.createreturnshippinglabel": "snowball:CreateReturnShippingLabel",
    "snowball.describeaddress": "snowball:DescribeAddress",
    "snowball.describeaddresses": "snowball:DescribeAddresses",
    "snowball.describecluster": "snowball:DescribeCluster",
    "snowball.describejob": "snowball:DescribeJob",
    "snowball.describereturnshippinglabel": "snowball:DescribeReturnShippingLabel",
    "snowball.getjobmanifest": "snowball:GetJobManifest",
    "snowball.getjobunlockcode": "snowball:GetJobUnlockCode",
    "snowball.getsnowballusage": "snowball:GetSnowballUsage",
    "snowball.getsoftwareupdates": "snowball:GetSoftwareUpdates",
    "snowball.listclusterjobs": "snowball:ListClusterJobs",
    "snowball.listclusters": "snowball:ListClusters",
    "snowball.listcompatibleimages": "snowball:ListCompatibleImages",
    "snowball.listjobs": "snowball:ListJobs",
    "snowball.listlongtermpricing": "snowball:ListLongTermPricing",
    "snowball.updatecluster": "snowball:UpdateCluster",
    "snowball.updatejob": "snowball:UpdateJob",
    "snowball.updatejobshipmentstate": "snowball:UpdateJobShipmentState",
    "snowball.updatelongtermpricing": "snowball:UpdateLongTermPricing",
    "snowdevicemanagement.canceltask": "snow-device-management:CancelTask",
    "snowdevicemanagement.createtask": "snow-device-management:CreateTask",
    "snowdevicemanagement.describedevice": "snow-device-management:DescribeDevice",
    "snowdevicemanagement.describedeviceec2instances": "snow-device-management:DescribeDeviceEc2Instances",
    "snowdevicemanagement.describeexecution": "snow-device-management:DescribeExecution",
    "snowdevicemanagement.describetask": "snow-device-management:DescribeTask",
    "snowdevicemanagement.listdeviceresources": "snow-device-management:ListDeviceResources",
    "snowdevicemanagement.listdevices": "snow-device-management:ListDevices",
    "snowdevicemanagement.listexecutions": "snow-device-management:ListExecutions",
    "snowdevicemanagement.listtagsforresource": "snow-device-management:ListTagsForResource",
    "snowdevicemanagement.listtasks": "snow-device-management:ListTasks",
    "snowdevicemanagement.tagresource": "snow-device-management:TagResource",
    "snowdevicemanagement.untagresource": "snow-device-management:UntagResource",
    "sns.addpermission": "sns:AddPermission",
    "sns.checkifphonenumberisoptedout": "sns:CheckIfPhoneNumberIsOptedOut",
    "sns.confirmsubscription": "sns:ConfirmSubscription",
    "sns.createplatformapplication": "sns:CreatePlatformApplication",
    "sns.createplatformendpoint": "sns:CreatePlatformEndpoint",
    "sns.createsmssandboxphonenumber": "sns:CreateSMSSandboxPhoneNumber",
    "sns.createtopic": "sns:CreateTopic",
    "sns.deleteendpoint": "sns:DeleteEndpoint",
    "sns.deleteplatformapplication": "sns:DeletePlatformApplication",
    "sns.deletesmssandboxphonenumber": "sns:DeleteSMSSandboxPhoneNumber",
    "sns.deletetopic": "sns:DeleteTopic",
    "sns.getendpointattributes": "sns:GetEndpointAttributes",
    "sns.getplatformapplicationattributes": "sns:GetPlatformApplicationAttributes",
    "sns.getsmsattributes": "sns:GetSMSAttributes",
    "sns.getsmssandboxaccountstatus": "sns:GetSMSSandboxAccountStatus",
    "sns.getsubscriptionattributes": "sns:GetSubscriptionAttributes",
    "sns.gettopicattributes": "sns:GetTopicAttributes",
    "sns.listendpointsbyplatformapplication": "sns:ListEndpointsByPlatformApplication",
    "sns.listoriginationnumbers": "sns:ListOriginationNumbers",
    "sns.listphonenumbersoptedout": "sns:ListPhoneNumbersOptedOut",
    "sns.listplatformapplications": "sns:ListPlatformApplications",
    "sns.listsmssandboxphonenumbers": "sns:ListSMSSandboxPhoneNumbers",
    "sns.listsubscriptions": "sns:ListSubscriptions",
    "sns.listsubscriptionsbytopic": "sns:ListSubscriptionsByTopic",
    "sns.listtagsforresource": "sns:ListTagsForResource",
    "sns.listtopics": "sns:ListTopics",
    "sns.optinphonenumber": "sns:OptInPhoneNumber",
    "sns.publish": "sns:Publish",
    "sns.removepermission": "sns:RemovePermission",
    "sns.setendpointattributes": "sns:SetEndpointAttributes",
    "sns.setplatformapplicationattributes": "sns:SetPlatformApplicationAttributes",
    "sns.setsmsattributes": "sns:SetSMSAttributes",
    "sns.setsubscriptionattributes": "sns:SetSubscriptionAttributes",
    "sns.settopicattributes": "sns:SetTopicAttributes",
    "sns.subscribe": "sns:Subscribe",
    "sns.tagresource": "sns:TagResource",
    "sns.unsubscribe": "sns:Unsubscribe",
    "sns.untagresource": "sns:UntagResource",
    "sns.verifysmssandboxphonenumber": "sns:VerifySMSSandboxPhoneNumber",
    "sqs.addpermission": "sqs:AddPermission",
    "sqs.changemessagevisibility": "sqs:ChangeMessageVisibility",
    "sqs.changemessagevisibilitybatch": "sqs:ChangeMessageVisibilityBatch",
    "sqs.createqueue": "sqs:CreateQueue",
    "sqs.deletemessage": "sqs:DeleteMessage",
    "sqs.deletemessagebatch": "sqs:DeleteMessageBatch",
    "sqs.deletequeue": "sqs:DeleteQueue",
    "sqs.getqueueattributes": "sqs:GetQueueAttributes",
    "sqs.getqueueurl": "sqs:GetQueueUrl",
    "sqs.listdeadlettersourcequeues": "sqs:ListDeadLetterSourceQueues",
    "sqs.listqueues": "sqs:ListQueues",
    "sqs.listqueuetags": "sqs:ListQueueTags",
    "sqs.purgequeue": "sqs:PurgeQueue",
    "sqs.receivemessage": "sqs:ReceiveMessage",
    "sqs.removepermission": "sqs:RemovePermission",
    "sqs.sendmessage": "sqs:SendMessage",
    "sqs.sendmessagebatch": "sqs:SendMessage",
    "sqs.setqueueattributes": "sqs:SetQueueAttributes",
    "sqs.tagqueue": "sqs:TagQueue",
    "sqs.untagqueue": "sqs:UntagQueue",
    "ssm.addtagstoresource": "ssm:AddTagsToResource",
    "ssm.associateopsitemrelateditem": "ssm:AssociateOpsItemRelatedItem",
    "ssm.cancelcommand": "ssm:CancelCommand",
    "ssm.cancelmaintenancewindowexecution": "ssm:CancelMaintenanceWindowExecution",
    "ssm.createactivation": "ssm:CreateActivation",
    "ssm.createassociation": "ssm:CreateAssociation",
    "ssm.createassociationbatch": "ssm:CreateAssociationBatch",
    "ssm.createdocument": "ssm:CreateDocument",
    "ssm.createmaintenancewindow": "ssm:CreateMaintenanceWindow",
    "ssm.createopsitem": "ssm:CreateOpsItem",
    "ssm.createopsmetadata": "ssm:CreateOpsMetadata",
    "ssm.createpatchbaseline": "ssm:CreatePatchBaseline",
    "ssm.createresourcedatasync": "ssm:CreateResourceDataSync",
    "ssm.deleteactivation": "ssm:DeleteActivation",
    "ssm.deleteassociation": "ssm:DeleteAssociation",
    "ssm.deletedocument": "ssm:DeleteDocument",
    "ssm.deleteinventory": "ssm:DeleteInventory",
    "ssm.deletemaintenancewindow": "ssm:DeleteMaintenanceWindow",
    "ssm.deleteopsmetadata": "ssm:DeleteOpsMetadata",
    "ssm.deleteparameter": "ssm:DeleteParameter",
    "ssm.deleteparameters": "ssm:DeleteParameters",
    "ssm.deletepatchbaseline": "ssm:DeletePatchBaseline",
    "ssm.deleteresourcedatasync": "ssm:DeleteResourceDataSync",
    "ssm.deregistermanagedinstance": "ssm:DeregisterManagedInstance",
    "ssm.deregisterpatchbaselineforpatchgroup": "ssm:DeregisterPatchBaselineForPatchGroup",
    "ssm.deregistertargetfrommaintenancewindow": "ssm:DeregisterTargetFromMaintenanceWindow",
    "ssm.deregistertaskfrommaintenancewindow": "ssm:DeregisterTaskFromMaintenanceWindow",
    "ssm.describeactivations": "ssm:DescribeActivations",
    "ssm.describeassociation": "ssm:DescribeAssociation",
    "ssm.describeassociationexecutions": "ssm:DescribeAssociationExecutions",
    "ssm.describeassociationexecutiontargets": "ssm:DescribeAssociationExecutionTargets",
    "ssm.describeautomationexecutions": "ssm:DescribeAutomationExecutions",
    "ssm.describeautomationstepexecutions": "ssm:DescribeAutomationStepExecutions",
    "ssm.describeavailablepatches": "ssm:DescribeAvailablePatches",
    "ssm.describedocument": "ssm:DescribeDocument",
    "ssm.describedocumentpermission": "ssm:DescribeDocumentPermission",
    "ssm.describeeffectiveinstanceassociations": "ssm:DescribeEffectiveInstanceAssociations",
    "ssm.describeeffectivepatchesforpatchbaseline": "ssm:DescribeEffectivePatchesForPatchBaseline",
    "ssm.describeinstanceassociationsstatus": "ssm:DescribeInstanceAssociationsStatus",
    "ssm.describeinstanceinformation": "ssm:DescribeInstanceInformation",
    "ssm.describeinstancepatches": "ssm:DescribeInstancePatches",
    "ssm.describeinstancepatchstates": "ssm:DescribeInstancePatchStates",
    "ssm.describeinstancepatchstatesforpatchgroup": "ssm:DescribeInstancePatchStatesForPatchGroup",
    "ssm.describeinventorydeletions": "ssm:DescribeInventoryDeletions",
    "ssm.describemaintenancewindowexecutions": "ssm:DescribeMaintenanceWindowExecutions",
    "ssm.describemaintenancewindowexecutiontaskinvocations": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
    "ssm.describemaintenancewindowexecutiontasks": "ssm:DescribeMaintenanceWindowExecutionTasks",
    "ssm.describemaintenancewindows": "ssm:DescribeMaintenanceWindows",
    "ssm.describemaintenancewindowschedule": "ssm:DescribeMaintenanceWindowSchedule",
    "ssm.describemaintenancewindowsfortarget": "ssm:DescribeMaintenanceWindowsForTarget",
    "ssm.describemaintenancewindowtargets": "ssm:DescribeMaintenanceWindowTargets",
    "ssm.describemaintenancewindowtasks": "ssm:DescribeMaintenanceWindowTasks",
    "ssm.describeopsitems": "ssm:DescribeOpsItems",
    "ssm.describeparameters": "ssm:DescribeParameters",
    "ssm.describepatchbaselines": "ssm:DescribePatchBaselines",
    "ssm.describepatchgroups": "ssm:DescribePatchGroups",
    "ssm.describepatchgroupstate": "ssm:DescribePatchGroupState",
    "ssm.describepatchproperties": "ssm:DescribePatchProperties",
    "ssm.describesessions": "ssm:DescribeSessions",
    "ssm.disassociateopsitemrelateditem": "ssm:DisassociateOpsItemRelatedItem",
    "ssm.getautomationexecution": "ssm:GetAutomationExecution",
    "ssm.getcalendarstate": "ssm:GetCalendarState",
    "ssm.getcommandinvocation": "ssm:GetCommandInvocation",
    "ssm.getconnectionstatus": "ssm:GetConnectionStatus",
    "ssm.getdefaultpatchbaseline": "ssm:GetDefaultPatchBaseline",
    "ssm.getdeployablepatchsnapshotforinstance": "ssm:GetDeployablePatchSnapshotForInstance",
    "ssm.getdocument": "ssm:GetDocument",
    "ssm.getinventory": "ssm:GetInventory",
    "ssm.getinventoryschema": "ssm:GetInventory",
    "ssm.getmaintenancewindow": "ssm:GetMaintenanceWindow",
    "ssm.getmaintenancewindowexecution": "ssm:GetMaintenanceWindowExecution",
    "ssm.getmaintenancewindowexecutiontask": "ssm:GetMaintenanceWindowExecutionTask",
    "ssm.getmaintenancewindowexecutiontaskinvocation": "ssm:GetMaintenanceWindowExecutionTaskInvocation",
    "ssm.getmaintenancewindowtask": "ssm:GetMaintenanceWindowTask",
    "ssm.getopsitem": "ssm:GetOpsItem",
    "ssm.getopsmetadata": "ssm:GetOpsMetadata",
    "ssm.getopssummary": "ssm:GetOpsSummary",
    "ssm.getparameter": "ssm:GetParameter",
    "ssm.getparameterhistory": "ssm:GetParameterHistory",
    "ssm.getparameters": "ssm:GetParameters",
    "ssm.getparametersbypath": "ssm:GetParametersByPath",
    "ssm.getpatchbaseline": "ssm:GetPatchBaseline",
    "ssm.getpatchbaselineforpatchgroup": "ssm:GetPatchBaselineForPatchGroup",
    "ssm.getservicesetting": "ssm:GetServiceSetting",
    "ssm.labelparameterversion": "ssm:LabelParameterVersion",
    "ssm.listassociations": "ssm:ListAssociations",
    "ssm.listassociationversions": "ssm:ListAssociationVersions",
    "ssm.listcommandinvocations": "ssm:ListCommandInvocations",
    "ssm.listcommands": "ssm:ListCommands",
    "ssm.listcomplianceitems": "ssm:ListComplianceItems",
    "ssm.listcompliancesummaries": "ssm:ListComplianceSummaries",
    "ssm.listdocumentmetadatahistory": "ssm:ListDocumentMetadataHistory",
    "ssm.listdocuments": "ssm:ListDocuments",
    "ssm.listdocumentversions": "ssm:ListDocumentVersions",
    "ssm.listinventoryentries": "ssm:ListInventoryEntries",
    "ssm.listopsitemevents": "ssm:ListOpsItemEvents",
    "ssm.listopsitemrelateditems": "ssm:ListOpsItemRelatedItems",
    "ssm.listopsmetadata": "ssm:ListOpsMetadata",
    "ssm.listresourcecompliancesummaries": "ssm:ListResourceComplianceSummaries",
    "ssm.listresourcedatasync": "ssm:ListResourceDataSync",
    "ssm.listtagsforresource": "ssm:ListTagsForResource",
    "ssm.modifydocumentpermission": "ssm:ModifyDocumentPermission",
    "ssm.putcomplianceitems": "ssm:PutComplianceItems",
    "ssm.putinventory": "ssm:PutInventory",
    "ssm.putparameter": "ssm:PutParameter",
    "ssm.registerdefaultpatchbaseline": "ssm:RegisterDefaultPatchBaseline",
    "ssm.registerpatchbaselineforpatchgroup": "ssm:RegisterPatchBaselineForPatchGroup",
    "ssm.registertargetwithmaintenancewindow": "ssm:RegisterTargetWithMaintenanceWindow",
    "ssm.registertaskwithmaintenancewindow": "ssm:RegisterTaskWithMaintenanceWindow",
    "ssm.removetagsfromresource": "ssm:RemoveTagsFromResource",
    "ssm.resetservicesetting": "ssm:ResetServiceSetting",
    "ssm.resumesession": "ssm:ResumeSession",
    "ssm.sendautomationsignal": "ssm:SendAutomationSignal",
    "ssm.sendcommand": "ssm:SendCommand",
    "ssm.startassociationsonce": "ssm:StartAssociationsOnce",
    "ssm.startautomationexecution": "ssm:StartAutomationExecution",
    "ssm.startchangerequestexecution": "ssm:StartChangeRequestExecution",
    "ssm.startsession": "ssm:StartSession",
    "ssm.stopautomationexecution": "ssm:StopAutomationExecution",
    "ssm.terminatesession": "ssm:TerminateSession",
    "ssm.unlabelparameterversion": "ssm:UnlabelParameterVersion",
    "ssm.updateassociation": "ssm:UpdateAssociation",
    "ssm.updateassociationstatus": "ssm:UpdateAssociationStatus",
    "ssm.updatedocument": "ssm:UpdateDocument",
    "ssm.updatedocumentdefaultversion": "ssm:UpdateDocumentDefaultVersion",
    "ssm.updatedocumentmetadata": "ssm:UpdateDocumentMetadata",
    "ssm.updatemaintenancewindow": "ssm:UpdateMaintenanceWindow",
    "ssm.updatemaintenancewindowtarget": "ssm:UpdateMaintenanceWindowTarget",
    "ssm.updatemaintenancewindowtask": "ssm:UpdateMaintenanceWindowTask",
    "ssm.updatemanagedinstancerole": "ssm:UpdateManagedInstanceRole",
    "ssm.updateopsitem": "ssm:UpdateOpsItem",
    "ssm.updateopsmetadata": "ssm:UpdateOpsMetadata",
    "ssm.updatepatchbaseline": "ssm:UpdatePatchBaseline",
    "ssm.updateresourcedatasync": "ssm:UpdateResourceDataSync",
    "ssm.updateservicesetting": "ssm:UpdateServiceSetting",
    "ssmcontacts.acceptpage": "ssm-contacts:AcceptPage",
    "ssmcontacts.activatecontactchannel": "ssm-contacts:ActivateContactChannel",
    "ssmcontacts.createcontact": "ssm-contacts:CreateContact",
    "ssmcontacts.createcontactchannel": "ssm-contacts:CreateContactChannel",
    "ssmcontacts.deactivatecontactchannel": "ssm-contacts:DeactivateContactChannel",
    "ssmcontacts.deletecontact": "ssm-contacts:DeleteContact",
    "ssmcontacts.deletecontactchannel": "ssm-contacts:DeleteContactChannel",
    "ssmcontacts.describeengagement": "ssm-contacts:DescribeEngagement",
    "ssmcontacts.describepage": "ssm-contacts:DescribePage",
    "ssmcontacts.getcontact": "ssm-contacts:GetContact",
    "ssmcontacts.getcontactchannel": "ssm-contacts:GetContactChannel",
    "ssmcontacts.getcontactpolicy": "ssm-contacts:GetContactPolicy",
    "ssmcontacts.listcontactchannels": "ssm-contacts:ListContactChannels",
    "ssmcontacts.listcontacts": "ssm-contacts:ListContacts",
    "ssmcontacts.listengagements": "ssm-contacts:ListEngagements",
    "ssmcontacts.listpagereceipts": "ssm-contacts:ListPageReceipts",
    "ssmcontacts.listpagesbycontact": "ssm-contacts:ListPagesByContact",
    "ssmcontacts.listpagesbyengagement": "ssm-contacts:ListPagesByEngagement",
    "ssmcontacts.listtagsforresource": "ssm-contacts:ListTagsForResource",
    "ssmcontacts.putcontactpolicy": "ssm-contacts:PutContactPolicy",
    "ssmcontacts.sendactivationcode": "ssm-contacts:SendActivationCode",
    "ssmcontacts.startengagement": "ssm-contacts:StartEngagement",
    "ssmcontacts.stopengagement": "ssm-contacts:StopEngagement",
    "ssmcontacts.tagresource": "ssm-contacts:TagResource",
    "ssmcontacts.untagresource": "ssm-contacts:UntagResource",
    "ssmcontacts.updatecontact": "ssm-contacts:UpdateContact",
    "ssmcontacts.updatecontactchannel": "ssm-contacts:UpdateContactChannel",
    "ssmincidents.createreplicationset": "ssm-incidents:CreateReplicationSet",
    "ssmincidents.createresponseplan": "ssm-incidents:CreateResponsePlan",
    "ssmincidents.createtimelineevent": "ssm-incidents:CreateTimelineEvent",
    "ssmincidents.deleteincidentrecord": "ssm-incidents:DeleteIncidentRecord",
    "ssmincidents.deletereplicationset": "ssm-incidents:DeleteReplicationSet",
    "ssmincidents.deleteresourcepolicy": "ssm-incidents:DeleteResourcePolicy",
    "ssmincidents.deleteresponseplan": "ssm-incidents:DeleteResponsePlan",
    "ssmincidents.deletetimelineevent": "ssm-incidents:DeleteTimelineEvent",
    "ssmincidents.getincidentrecord": "ssm-incidents:GetIncidentRecord",
    "ssmincidents.getreplicationset": "ssm-incidents:GetReplicationSet",
    "ssmincidents.getresourcepolicies": "ssm-incidents:GetResourcePolicies",
    "ssmincidents.getresponseplan": "ssm-incidents:GetResponsePlan",
    "ssmincidents.gettimelineevent": "ssm-incidents:GetTimelineEvent",
    "ssmincidents.listincidentrecords": "ssm-incidents:ListIncidentRecords",
    "ssmincidents.listrelateditems": "ssm-incidents:ListRelatedItems",
    "ssmincidents.listreplicationsets": "ssm-incidents:ListReplicationSets",
    "ssmincidents.listresponseplans": "ssm-incidents:ListResponsePlans",
    "ssmincidents.listtagsforresource": "ssm-incidents:ListTagsForResource",
    "ssmincidents.listtimelineevents": "ssm-incidents:ListTimelineEvents",
    "ssmincidents.putresourcepolicy": "ssm-incidents:PutResourcePolicy",
    "ssmincidents.startincident": "ssm-incidents:StartIncident",
    "ssmincidents.tagresource": "ssm-incidents:TagResource",
    "ssmincidents.untagresource": "ssm-incidents:UntagResource",
    "ssmincidents.updatedeletionprotection": "ssm-incidents:UpdateDeletionProtection",
    "ssmincidents.updateincidentrecord": "ssm-incidents:UpdateIncidentRecord",
    "ssmincidents.updaterelateditems": "ssm-incidents:UpdateRelatedItems",
    "ssmincidents.updatereplicationset": "ssm-incidents:UpdateReplicationSet",
    "ssmincidents.updateresponseplan": "ssm-incidents:UpdateResponsePlan",
    "ssmincidents.updatetimelineevent": "ssm-incidents:UpdateTimelineEvent",
    "ssoadmin.attachmanagedpolicytopermissionset": "sso:AttachManagedPolicyToPermissionSet",
    "ssoadmin.createaccountassignment": "sso:CreateAccountAssignment",
    "ssoadmin.createinstanceaccesscontrolattributeconfiguration": "sso:CreateInstanceAccessControlAttributeConfiguration",
    "ssoadmin.createpermissionset": "sso:CreatePermissionSet",
    "ssoadmin.deleteaccountassignment": "sso:DeleteAccountAssignment",
    "ssoadmin.deleteinlinepolicyfrompermissionset": "sso:DeleteInlinePolicyFromPermissionSet",
    "ssoadmin.deleteinstanceaccesscontrolattributeconfiguration": "sso:DeleteInstanceAccessControlAttributeConfiguration",
    "ssoadmin.deletepermissionset": "sso:DeletePermissionSet",
    "ssoadmin.describeaccountassignmentcreationstatus": "sso:DescribeAccountAssignmentCreationStatus",
    "ssoadmin.describeaccountassignmentdeletionstatus": "sso:DescribeAccountAssignmentDeletionStatus",
    "ssoadmin.describeinstanceaccesscontrolattributeconfiguration": "sso:DescribeInstanceAccessControlAttributeConfiguration",
    "ssoadmin.describepermissionset": "sso:DescribePermissionSet",
    "ssoadmin.describepermissionsetprovisioningstatus": "sso:DescribePermissionSetProvisioningStatus",
    "ssoadmin.detachmanagedpolicyfrompermissionset": "sso:DetachManagedPolicyFromPermissionSet",
    "ssoadmin.getinlinepolicyforpermissionset": "sso:GetInlinePolicyForPermissionSet",
    "ssoadmin.listaccountassignmentcreationstatus": "sso:ListAccountAssignmentCreationStatus",
    "ssoadmin.listaccountassignmentdeletionstatus": "sso:ListAccountAssignmentDeletionStatus",
    "ssoadmin.listaccountassignments": "sso:ListAccountAssignments",
    "ssoadmin.listaccountsforprovisionedpermissionset": "sso:ListAccountsForProvisionedPermissionSet",
    "ssoadmin.listinstances": "sso:ListInstances",
    "ssoadmin.listmanagedpoliciesinpermissionset": "sso:ListManagedPoliciesInPermissionSet",
    "ssoadmin.listpermissionsetprovisioningstatus": "sso:ListPermissionSetProvisioningStatus",
    "ssoadmin.listpermissionsets": "sso:ListPermissionSets",
    "ssoadmin.listpermissionsetsprovisionedtoaccount": "sso:ListPermissionSetsProvisionedToAccount",
    "ssoadmin.listtagsforresource": "sso:ListTagsForResource",
    "ssoadmin.provisionpermissionset": "sso:ProvisionPermissionSet",
    "ssoadmin.putinlinepolicytopermissionset": "sso:PutInlinePolicyToPermissionSet",
    "ssoadmin.tagresource": "sso:TagResource",
    "ssoadmin.untagresource": "sso:UntagResource",
    "ssoadmin.updateinstanceaccesscontrolattributeconfiguration": "sso:UpdateInstanceAccessControlAttributeConfiguration",
    "ssoadmin.updatepermissionset": "sso:UpdatePermissionSet",
    "stepfunctions.createactivity": "states:CreateActivity",
    "stepfunctions.createstatemachine": "states:CreateStateMachine",
    "stepfunctions.deleteactivity": "states:DeleteActivity",
    "stepfunctions.deletestatemachine": "states:DeleteStateMachine",
    "stepfunctions.describeactivity": "states:DescribeActivity",
    "stepfunctions.describeexecution": "states:DescribeExecution",
    "stepfunctions.describestatemachine": "states:DescribeStateMachine",
    "stepfunctions.describestatemachineforexecution": "states:DescribeStateMachineForExecution",
    "stepfunctions.getactivitytask": "states:GetActivityTask",
    "stepfunctions.getexecutionhistory": "states:GetExecutionHistory",
    "stepfunctions.listactivities": "states:ListActivities",
    "stepfunctions.listexecutions": "states:ListExecutions",
    "stepfunctions.liststatemachines": "states:ListStateMachines",
    "stepfunctions.listtagsforresource": "states:ListTagsForResource",
    "stepfunctions.sendtaskfailure": "states:SendTaskFailure",
    "stepfunctions.sendtaskheartbeat": "states:SendTaskHeartbeat",
    "stepfunctions.sendtasksuccess": "states:SendTaskSuccess",
    "stepfunctions.startexecution": "states:StartExecution",
    "stepfunctions.startsyncexecution": "states:StartSyncExecution",
    "stepfunctions.stopexecution": "states:StopExecution",
    "stepfunctions.tagresource": "states:TagResource",
    "stepfunctions.untagresource": "states:UntagResource",
    "stepfunctions.updatestatemachine": "states:UpdateStateMachine",
    "storagegateway.activategateway": "storagegateway:ActivateGateway",
    "storagegateway.addcache": "storagegateway:AddCache",
    "storagegateway.addtagstoresource": "storagegateway:AddTagsToResource",
    "storagegateway.adduploadbuffer": "storagegateway:AddUploadBuffer",
    "storagegateway.addworkingstorage": "storagegateway:AddWorkingStorage",
    "storagegateway.assigntapepool": "storagegateway:AssignTapePool",
    "storagegateway.associatefilesystem": "storagegateway:AssociateFileSystem",
    "storagegateway.attachvolume": "storagegateway:AttachVolume",
    "storagegateway.cancelarchival": "storagegateway:CancelArchival",
    "storagegateway.cancelretrieval": "storagegateway:CancelRetrieval",
    "storagegateway.createcachediscsivolume": "storagegateway:CreateCachediSCSIVolume",
    "storagegateway.createnfsfileshare": "storagegateway:CreateNFSFileShare",
    "storagegateway.createsmbfileshare": "storagegateway:CreateSMBFileShare",
    "storagegateway.createsnapshot": "storagegateway:CreateSnapshot",
    "storagegateway.createsnapshotfromvolumerecoverypoint": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
    "storagegateway.createstorediscsivolume": "storagegateway:CreateStorediSCSIVolume",
    "storagegateway.createtapepool": "storagegateway:CreateTapePool",
    "storagegateway.createtapes": "storagegateway:CreateTapes",
    "storagegateway.createtapewithbarcode": "storagegateway:CreateTapeWithBarcode",
    "storagegateway.deleteautomatictapecreationpolicy": "storagegateway:DeleteAutomaticTapeCreationPolicy",
    "storagegateway.deletebandwidthratelimit": "storagegateway:DeleteBandwidthRateLimit",
    "storagegateway.deletechapcredentials": "storagegateway:DeleteChapCredentials",
    "storagegateway.deletefileshare": "storagegateway:DeleteFileShare",
    "storagegateway.deletegateway": "storagegateway:DeleteGateway",
    "storagegateway.deletesnapshotschedule": "storagegateway:DeleteSnapshotSchedule",
    "storagegateway.deletetape": "storagegateway:DeleteTape",
    "storagegateway.deletetapearchive": "storagegateway:DeleteTapeArchive",
    "storagegateway.deletetapepool": "storagegateway:DeleteTapePool",
    "storagegateway.deletevolume": "storagegateway:DeleteVolume",
    "storagegateway.describeavailabilitymonitortest": "storagegateway:DescribeAvailabilityMonitorTest",
    "storagegateway.describebandwidthratelimit": "storagegateway:DescribeBandwidthRateLimit",
    "storagegateway.describebandwidthratelimitschedule": "storagegateway:DescribeBandwidthRateLimitSchedule",
    "storagegateway.describecache": "storagegateway:DescribeCache",
    "storagegateway.describecachediscsivolumes": "storagegateway:DescribeCachediSCSIVolumes",
    "storagegateway.describechapcredentials": "storagegateway:DescribeChapCredentials",
    "storagegateway.describefilesystemassociations": "storagegateway:DescribeFileSystemAssociations",
    "storagegateway.describegatewayinformation": "storagegateway:DescribeGatewayInformation",
    "storagegateway.describemaintenancestarttime": "storagegateway:DescribeMaintenanceStartTime",
    "storagegateway.describenfsfileshares": "storagegateway:DescribeNFSFileShares",
    "storagegateway.describesmbfileshares": "storagegateway:DescribeSMBFileShares",
    "storagegateway.describesmbsettings": "storagegateway:DescribeSMBSettings",
    "storagegateway.describesnapshotschedule": "storagegateway:DescribeSnapshotSchedule",
    "storagegateway.describestorediscsivolumes": "storagegateway:DescribeStorediSCSIVolumes",
    "storagegateway.describetapearchives": "storagegateway:DescribeTapeArchives",
    "storagegateway.describetaperecoverypoints": "storagegateway:DescribeTapeRecoveryPoints",
    "storagegateway.describetapes": "storagegateway:DescribeTapes",
    "storagegateway.describeuploadbuffer": "storagegateway:DescribeUploadBuffer",
    "storagegateway.describevtldevices": "storagegateway:DescribeVTLDevices",
    "storagegateway.describeworkingstorage": "storagegateway:DescribeWorkingStorage",
    "storagegateway.detachvolume": "storagegateway:DetachVolume",
    "storagegateway.disablegateway": "storagegateway:DisableGateway",
    "storagegateway.disassociatefilesystem": "storagegateway:DisassociateFileSystem",
    "storagegateway.joindomain": "storagegateway:JoinDomain",
    "storagegateway.listautomatictapecreationpolicies": "storagegateway:ListAutomaticTapeCreationPolicies",
    "storagegateway.listfileshares": "storagegateway:ListFileShares",
    "storagegateway.listfilesystemassociations": "storagegateway:ListFileSystemAssociations",
    "storagegateway.listgateways": "storagegateway:ListGateways",
    "storagegateway.listlocaldisks": "storagegateway:ListLocalDisks",
    "storagegateway.listtagsforresource": "storagegateway:ListTagsForResource",
    "storagegateway.listtapepools": "storagegateway:ListTapePools",
    "storagegateway.listtapes": "storagegateway:ListTapes",
    "storagegateway.listvolumeinitiators": "storagegateway:ListVolumeInitiators",
    "storagegateway.listvolumerecoverypoints": "storagegateway:ListVolumeRecoveryPoints",
    "storagegateway.listvolumes": "storagegateway:ListVolumes",
    "storagegateway.notifywhenuploaded": "storagegateway:NotifyWhenUploaded",
    "storagegateway.refreshcache": "storagegateway:RefreshCache",
    "storagegateway.removetagsfromresource": "storagegateway:RemoveTagsFromResource",
    "storagegateway.resetcache": "storagegateway:ResetCache",
    "storagegateway.retrievetapearchive": "storagegateway:RetrieveTapeArchive",
    "storagegateway.retrievetaperecoverypoint": "storagegateway:RetrieveTapeRecoveryPoint",
    "storagegateway.setlocalconsolepassword": "storagegateway:SetLocalConsolePassword",
    "storagegateway.setsmbguestpassword": "storagegateway:SetSMBGuestPassword",
    "storagegateway.shutdowngateway": "storagegateway:ShutdownGateway",
    "storagegateway.startavailabilitymonitortest": "storagegateway:StartAvailabilityMonitorTest",
    "storagegateway.startgateway": "storagegateway:StartGateway",
    "storagegateway.updateautomatictapecreationpolicy": "storagegateway:UpdateAutomaticTapeCreationPolicy",
    "storagegateway.updatebandwidthratelimit": "storagegateway:UpdateBandwidthRateLimit",
    "storagegateway.updatebandwidthratelimitschedule": "storagegateway:UpdateBandwidthRateLimitSchedule",
    "storagegateway.updatechapcredentials": "storagegateway:UpdateChapCredentials",
    "storagegateway.updatefilesystemassociation": "storagegateway:UpdateFileSystemAssociation",
    "storagegateway.updategatewayinformation": "storagegateway:UpdateGatewayInformation",
    "storagegateway.updategatewaysoftwarenow": "storagegateway:UpdateGatewaySoftwareNow",
    "storagegateway.updatemaintenancestarttime": "storagegateway:UpdateMaintenanceStartTime",
    "storagegateway.updatenfsfileshare": "storagegateway:UpdateNFSFileShare",
    "storagegateway.updatesmbfileshare": "storagegateway:UpdateSMBFileShare",
    "storagegateway.updatesmbfilesharevisibility": "storagegateway:UpdateSMBFileShareVisibility",
    "storagegateway.updatesmblocalgroups": "storagegateway:UpdateSMBLocalGroups",
    "storagegateway.updatesmbsecuritystrategy": "storagegateway:UpdateSMBSecurityStrategy",
    "storagegateway.updatesnapshotschedule": "storagegateway:UpdateSnapshotSchedule",
    "storagegateway.updatevtldevicetype": "storagegateway:UpdateVTLDeviceType",
    "sts.assumerole": "sts:AssumeRole",
    "sts.assumerolewithsaml": "sts:AssumeRoleWithSAML",
    "sts.assumerolewithwebidentity": "sts:AssumeRoleWithWebIdentity",
    "sts.decodeauthorizationmessage": "sts:DecodeAuthorizationMessage",
    "sts.getaccesskeyinfo": "sts:GetAccessKeyInfo",
    "sts.getcalleridentity": "sts:GetCallerIdentity",
    "sts.getfederationtoken": "sts:GetFederationToken",
    "sts.getsessiontoken": "sts:GetSessionToken",
    "support.addattachmentstoset": "support:AddAttachmentsToSet",
    "support.addcommunicationtocase": "support:AddCommunicationToCase",
    "support.createcase": "support:CreateCase",
    "support.describeattachment": "support:DescribeAttachment",
    "support.describecases": "support:DescribeCases",
    "support.describecommunications": "support:DescribeCommunications",
    "support.describeservices": "support:DescribeServices",
    "support.describeseveritylevels": "support:DescribeSeverityLevels",
    "support.describetrustedadvisorcheckrefreshstatuses": "support:DescribeTrustedAdvisorCheckRefreshStatuses",
    "support.describetrustedadvisorcheckresult": "support:DescribeTrustedAdvisorCheckResult",
    "support.describetrustedadvisorchecks": "support:DescribeTrustedAdvisorChecks",
    "support.describetrustedadvisorchecksummaries": "support:DescribeTrustedAdvisorCheckSummaries",
    "support.refreshtrustedadvisorcheck": "support:RefreshTrustedAdvisorCheck",
    "support.resolvecase": "support:ResolveCase",
    "swf.countclosedworkflowexecutions": "swf:CountClosedWorkflowExecutions",
    "swf.countopenworkflowexecutions": "swf:CountOpenWorkflowExecutions",
    "swf.countpendingactivitytasks": "swf:CountPendingActivityTasks",
    "swf.countpendingdecisiontasks": "swf:CountPendingDecisionTasks",
    "swf.deprecateactivitytype": "swf:DeprecateActivityType",
    "swf.deprecatedomain": "swf:DeprecateDomain",
    "swf.deprecateworkflowtype": "swf:DeprecateWorkflowType",
    "swf.describeactivitytype": "swf:DescribeActivityType",
    "swf.describedomain": "swf:DescribeDomain",
    "swf.describeworkflowexecution": "swf:DescribeWorkflowExecution",
    "swf.describeworkflowtype": "swf:DescribeWorkflowType",
    "swf.getworkflowexecutionhistory": "swf:GetWorkflowExecutionHistory",
    "swf.listactivitytypes": "swf:ListActivityTypes",
    "swf.listclosedworkflowexecutions": "swf:ListClosedWorkflowExecutions",
    "swf.listdomains": "swf:ListDomains",
    "swf.listopenworkflowexecutions": "swf:ListOpenWorkflowExecutions",
    "swf.listtagsforresource": "swf:ListTagsForResource",
    "swf.listworkflowtypes": "swf:ListWorkflowTypes",
    "swf.pollforactivitytask": "swf:PollForActivityTask",
    "swf.pollfordecisiontask": "swf:PollForDecisionTask",
    "swf.recordactivitytaskheartbeat": "swf:RecordActivityTaskHeartbeat",
    "swf.registeractivitytype": "swf:RegisterActivityType",
    "swf.registerdomain": "swf:RegisterDomain",
    "swf.registerworkflowtype": "swf:RegisterWorkflowType",
    "swf.requestcancelworkflowexecution": "swf:RequestCancelWorkflowExecution",
    "swf.respondactivitytaskcanceled": "swf:RespondActivityTaskCanceled",
    "swf.respondactivitytaskcompleted": "swf:RespondActivityTaskCompleted",
    "swf.respondactivitytaskfailed": "swf:RespondActivityTaskFailed",
    "swf.responddecisiontaskcompleted": "swf:RespondDecisionTaskCompleted",
    "swf.signalworkflowexecution": "swf:SignalWorkflowExecution",
    "swf.startworkflowexecution": "swf:StartWorkflowExecution",
    "swf.tagresource": "swf:TagResource",
    "swf.terminateworkflowexecution": "swf:TerminateWorkflowExecution",
    "swf.undeprecateactivitytype": "swf:UndeprecateActivityType",
    "swf.undeprecatedomain": "swf:UndeprecateDomain",
    "swf.undeprecateworkflowtype": "swf:UndeprecateWorkflowType",
    "swf.untagresource": "swf:UntagResource",
    "synthetics.createcanary": "synthetics:CreateCanary",
    "synthetics.deletecanary": "synthetics:DeleteCanary",
    "synthetics.describecanaries": "synthetics:DescribeCanaries",
    "synthetics.describecanarieslastrun": "synthetics:DescribeCanariesLastRun",
    "synthetics.describeruntimeversions": "synthetics:DescribeRuntimeVersions",
    "synthetics.getcanary": "synthetics:GetCanary",
    "synthetics.getcanaryruns": "synthetics:GetCanaryRuns",
    "synthetics.listtagsforresource": "synthetics:ListTagsForResource",
    "synthetics.startcanary": "synthetics:StartCanary",
    "synthetics.stopcanary": "synthetics:StopCanary",
    "synthetics.tagresource": "synthetics:TagResource",
    "synthetics.untagresource": "synthetics:UntagResource",
    "synthetics.updatecanary": "synthetics:UpdateCanary",
    "textract.analyzedocument": "textract:AnalyzeDocument",
    "textract.analyzeexpense": "textract:AnalyzeExpense",
    "textract.analyzeid": "textract:AnalyzeID",
    "textract.detectdocumenttext": "textract:DetectDocumentText",
    "textract.getdocumentanalysis": "textract:GetDocumentAnalysis",
    "textract.getdocumenttextdetection": "textract:GetDocumentTextDetection",
    "textract.getexpenseanalysis": "textract:GetExpenseAnalysis",
    "textract.startdocumentanalysis": "textract:StartDocumentAnalysis",
    "textract.startdocumenttextdetection": "textract:StartDocumentTextDetection",
    "textract.startexpenseanalysis": "textract:StartExpenseAnalysis",
    "timestreamquery.cancelquery": "timestream:CancelQuery",
    "timestreamquery.createscheduledquery": "timestream:CreateScheduledQuery",
    "timestreamquery.deletescheduledquery": "timestream:DeleteScheduledQuery",
    "timestreamquery.describeendpoints": "timestream:DescribeEndpoints",
    "timestreamquery.describescheduledquery": "timestream:DescribeScheduledQuery",
    "timestreamquery.executescheduledquery": "timestream:ExecuteScheduledQuery",
    "timestreamquery.listscheduledqueries": "timestream:ListScheduledQueries",
    "timestreamquery.listtagsforresource": "timestream:ListTagsForResource",
    "timestreamquery.preparequery": "timestream:PrepareQuery",
    "timestreamquery.query": "timestream:Select",
    "timestreamquery.tagresource": "timestream:TagResource",
    "timestreamquery.untagresource": "timestream:UntagResource",
    "timestreamquery.updatescheduledquery": "timestream:UpdateScheduledQuery",
    "timestreamwrite.createdatabase": "timestream:CreateDatabase",
    "timestreamwrite.createtable": "timestream:CreateTable",
    "timestreamwrite.deletedatabase": "timestream:DeleteDatabase",
    "timestreamwrite.deletetable": "timestream:DeleteTable",
    "timestreamwrite.describedatabase": "timestream:DescribeDatabase",
    "timestreamwrite.describeendpoints": "timestream:DescribeEndpoints",
    "timestreamwrite.describetable": "timestream:DescribeTable",
    "timestreamwrite.listdatabases": "timestream:ListDatabases",
    "timestreamwrite.listtables": "timestream:ListTables",
    "timestreamwrite.listtagsforresource": "timestream:ListTagsForResource",
    "timestreamwrite.tagresource": "timestream:TagResource",
    "timestreamwrite.untagresource": "timestream:UntagResource",
    "timestreamwrite.updatedatabase": "timestream:UpdateDatabase",
    "timestreamwrite.updatetable": "timestream:UpdateTable",
    "timestreamwrite.writerecords": "timestream:WriteRecords",
    "transcribeservice.createcallanalyticscategory": "transcribe:CreateCallAnalyticsCategory",
    "transcribeservice.createlanguagemodel": "transcribe:CreateLanguageModel",
    "transcribeservice.createmedicalvocabulary": "transcribe:CreateMedicalVocabulary",
    "transcribeservice.createvocabulary": "transcribe:CreateVocabulary",
    "transcribeservice.createvocabularyfilter": "transcribe:CreateVocabularyFilter",
    "transcribeservice.deletecallanalyticscategory": "transcribe:DeleteCallAnalyticsCategory",
    "transcribeservice.deletecallanalyticsjob": "transcribe:DeleteCallAnalyticsJob",
    "transcribeservice.deletelanguagemodel": "transcribe:DeleteLanguageModel",
    "transcribeservice.deletemedicaltranscriptionjob": "transcribe:DeleteMedicalTranscriptionJob",
    "transcribeservice.deletemedicalvocabulary": "transcribe:DeleteMedicalVocabulary",
    "transcribeservice.deletetranscriptionjob": "transcribe:DeleteTranscriptionJob",
    "transcribeservice.deletevocabulary": "transcribe:DeleteVocabulary",
    "transcribeservice.deletevocabularyfilter": "transcribe:DeleteVocabularyFilter",
    "transcribeservice.describelanguagemodel": "transcribe:DescribeLanguageModel",
    "transcribeservice.getcallanalyticscategory": "transcribe:GetCallAnalyticsCategory",
    "transcribeservice.getcallanalyticsjob": "transcribe:GetCallAnalyticsJob",
    "transcribeservice.getmedicaltranscriptionjob": "transcribe:GetMedicalTranscriptionJob",
    "transcribeservice.getmedicalvocabulary": "transcribe:GetMedicalVocabulary",
    "transcribeservice.gettranscriptionjob": "transcribe:GetTranscriptionJob",
    "transcribeservice.getvocabulary": "transcribe:GetVocabulary",
    "transcribeservice.getvocabularyfilter": "transcribe:GetVocabularyFilter",
    "transcribeservice.listcallanalyticscategories": "transcribe:ListCallAnalyticsCategories",
    "transcribeservice.listcallanalyticsjobs": "transcribe:ListCallAnalyticsJobs",
    "transcribeservice.listlanguagemodels": "transcribe:ListLanguageModels",
    "transcribeservice.listmedicaltranscriptionjobs": "transcribe:ListMedicalTranscriptionJobs",
    "transcribeservice.listmedicalvocabularies": "transcribe:ListMedicalVocabularies",
    "transcribeservice.listtagsforresource": "transcribe:ListTagsForResource",
    "transcribeservice.listtranscriptionjobs": "transcribe:ListTranscriptionJobs",
    "transcribeservice.listvocabularies": "transcribe:ListVocabularies",
    "transcribeservice.listvocabularyfilters": "transcribe:ListVocabularyFilters",
    "transcribeservice.startcallanalyticsjob": "transcribe:StartCallAnalyticsJob",
    "transcribeservice.startmedicaltranscriptionjob": "transcribe:StartMedicalTranscriptionJob",
    "transcribeservice.starttranscriptionjob": "transcribe:StartTranscriptionJob",
    "transcribeservice.tagresource": "transcribe:TagResource",
    "transcribeservice.untagresource": "transcribe:UntagResource",
    "transcribeservice.updatecallanalyticscategory": "transcribe:UpdateCallAnalyticsCategory",
    "transcribeservice.updatemedicalvocabulary": "transcribe:UpdateMedicalVocabulary",
    "transcribeservice.updatevocabulary": "transcribe:UpdateVocabulary",
    "transcribeservice.updatevocabularyfilter": "transcribe:UpdateVocabularyFilter",
    "transfer.createaccess": "transfer:CreateAccess",
    "transfer.createserver": "transfer:CreateServer",
    "transfer.createuser": "transfer:CreateUser",
    "transfer.createworkflow": "transfer:CreateWorkflow",
    "transfer.deleteaccess": "transfer:DeleteAccess",
    "transfer.deleteserver": "transfer:DeleteServer",
    "transfer.deletesshpublickey": "transfer:DeleteSshPublicKey",
    "transfer.deleteuser": "transfer:DeleteUser",
    "transfer.deleteworkflow": "transfer:DeleteWorkflow",
    "transfer.describeaccess": "transfer:DescribeAccess",
    "transfer.describeexecution": "transfer:DescribeExecution",
    "transfer.describesecuritypolicy": "transfer:DescribeSecurityPolicy",
    "transfer.describeserver": "transfer:DescribeServer",
    "transfer.describeuser": "transfer:DescribeUser",
    "transfer.describeworkflow": "transfer:DescribeWorkflow",
    "transfer.importsshpublickey": "transfer:ImportSshPublicKey",
    "transfer.listaccesses": "transfer:ListAccesses",
    "transfer.listexecutions": "transfer:ListExecutions",
    "transfer.listsecuritypolicies": "transfer:ListSecurityPolicies",
    "transfer.listservers": "transfer:ListServers",
    "transfer.listtagsforresource": "transfer:ListTagsForResource",
    "transfer.listusers": "transfer:ListUsers",
    "transfer.listworkflows": "transfer:ListWorkflows",
    "transfer.sendworkflowstepstate": "transfer:SendWorkflowStepState",
    "transfer.startserver": "transfer:StartServer",
    "transfer.stopserver": "transfer:StopServer",
    "transfer.tagresource": "transfer:TagResource",
    "transfer.testidentityprovider": "transfer:TestIdentityProvider",
    "transfer.untagresource": "transfer:UntagResource",
    "transfer.updateaccess": "transfer:UpdateAccess",
    "transfer.updateserver": "transfer:UpdateServer",
    "transfer.updateuser": "transfer:UpdateUser",
    "translate.createparalleldata": "translate:CreateParallelData",
    "translate.deleteparalleldata": "translate:DeleteParallelData",
    "translate.deleteterminology": "translate:DeleteTerminology",
    "translate.describetexttranslationjob": "translate:DescribeTextTranslationJob",
    "translate.getparalleldata": "translate:GetParallelData",
    "translate.getterminology": "translate:GetTerminology",
    "translate.importterminology": "translate:ImportTerminology",
    "translate.listparalleldata": "translate:ListParallelData",
    "translate.listterminologies": "translate:ListTerminologies",
    "translate.listtexttranslationjobs": "translate:ListTextTranslationJobs",
    "translate.starttexttranslationjob": "translate:StartTextTranslationJob",
    "translate.stoptexttranslationjob": "translate:StopTextTranslationJob",
    "translate.translatetext": "translate:TranslateText",
    "translate.updateparalleldata": "translate:UpdateParallelData",
    "voiceid.createdomain": "voiceid:CreateDomain",
    "voiceid.deletedomain": "voiceid:DeleteDomain",
    "voiceid.deletefraudster": "voiceid:DeleteFraudster",
    "voiceid.deletespeaker": "voiceid:DeleteSpeaker",
    "voiceid.describedomain": "voiceid:DescribeDomain",
    "voiceid.describefraudster": "voiceid:DescribeFraudster",
    "voiceid.describefraudsterregistrationjob": "voiceid:DescribeFraudsterRegistrationJob",
    "voiceid.describespeaker": "voiceid:DescribeSpeaker",
    "voiceid.describespeakerenrollmentjob": "voiceid:DescribeSpeakerEnrollmentJob",
    "voiceid.evaluatesession": "voiceid:EvaluateSession",
    "voiceid.listdomains": "voiceid:ListDomains",
    "voiceid.listfraudsterregistrationjobs": "voiceid:ListFraudsterRegistrationJobs",
    "voiceid.listspeakerenrollmentjobs": "voiceid:ListSpeakerEnrollmentJobs",
    "voiceid.listspeakers": "voiceid:ListSpeakers",
    "voiceid.listtagsforresource": "voiceid:ListTagsForResource",
    "voiceid.optoutspeaker": "voiceid:OptOutSpeaker",
    "voiceid.startfraudsterregistrationjob": "voiceid:StartFraudsterRegistrationJob",
    "voiceid.startspeakerenrollmentjob": "voiceid:StartSpeakerEnrollmentJob",
    "voiceid.tagresource": "voiceid:TagResource",
    "voiceid.untagresource": "voiceid:UntagResource",
    "voiceid.updatedomain": "voiceid:UpdateDomain",
    "waf.createbytematchset": "waf:CreateByteMatchSet",
    "waf.creategeomatchset": "waf:CreateGeoMatchSet",
    "waf.createipset": "waf:CreateIPSet",
    "waf.createratebasedrule": "waf:CreateRateBasedRule",
    "waf.createregexmatchset": "waf:CreateRegexMatchSet",
    "waf.createregexpatternset": "waf:CreateRegexPatternSet",
    "waf.createrule": "waf:CreateRule",
    "waf.createrulegroup": "waf:CreateRuleGroup",
    "waf.createsizeconstraintset": "waf:CreateSizeConstraintSet",
    "waf.createsqlinjectionmatchset": "waf:CreateSqlInjectionMatchSet",
    "waf.createwebacl": "waf:CreateWebACL",
    "waf.createwebaclmigrationstack": "waf:CreateWebACLMigrationStack",
    "waf.createxssmatchset": "waf:CreateXssMatchSet",
    "waf.deletebytematchset": "waf:DeleteByteMatchSet",
    "waf.deletegeomatchset": "waf:DeleteGeoMatchSet",
    "waf.deleteipset": "waf:DeleteIPSet",
    "waf.deleteloggingconfiguration": "waf:DeleteLoggingConfiguration",
    "waf.deletepermissionpolicy": "waf:DeletePermissionPolicy",
    "waf.deleteratebasedrule": "waf:DeleteRateBasedRule",
    "waf.deleteregexmatchset": "waf:DeleteRegexMatchSet",
    "waf.deleteregexpatternset": "waf:DeleteRegexPatternSet",
    "waf.deleterule": "waf:DeleteRule",
    "waf.deleterulegroup": "waf:DeleteRuleGroup",
    "waf.deletesizeconstraintset": "waf:DeleteSizeConstraintSet",
    "waf.deletesqlinjectionmatchset": "waf:DeleteSqlInjectionMatchSet",
    "waf.deletewebacl": "waf:DeleteWebACL",
    "waf.deletexssmatchset": "waf:DeleteXssMatchSet",
    "waf.getbytematchset": "waf:GetByteMatchSet",
    "waf.getchangetoken": "waf:GetChangeToken",
    "waf.getchangetokenstatus": "waf:GetChangeTokenStatus",
    "waf.getgeomatchset": "waf:GetGeoMatchSet",
    "waf.getipset": "waf:GetIPSet",
    "waf.getloggingconfiguration": "waf:GetLoggingConfiguration",
    "waf.getpermissionpolicy": "waf:GetPermissionPolicy",
    "waf.getratebasedrule": "waf:GetRateBasedRule",
    "waf.getratebasedrulemanagedkeys": "waf:GetRateBasedRuleManagedKeys",
    "waf.getregexmatchset": "waf:GetRegexMatchSet",
    "waf.getregexpatternset": "waf:GetRegexPatternSet",
    "waf.getrule": "waf:GetRule",
    "waf.getrulegroup": "waf:GetRuleGroup",
    "waf.getsampledrequests": "waf:GetSampledRequests",
    "waf.getsizeconstraintset": "waf:GetSizeConstraintSet",
    "waf.getsqlinjectionmatchset": "waf:GetSqlInjectionMatchSet",
    "waf.getwebacl": "waf:GetWebACL",
    "waf.getxssmatchset": "waf:GetXssMatchSet",
    "waf.listactivatedrulesinrulegroup": "waf:ListActivatedRulesInRuleGroup",
    "waf.listbytematchsets": "waf:ListByteMatchSets",
    "waf.listgeomatchsets": "waf:ListGeoMatchSets",
    "waf.listipsets": "waf:ListIPSets",
    "waf.listloggingconfigurations": "waf:ListLoggingConfigurations",
    "waf.listratebasedrules": "waf:ListRateBasedRules",
    "waf.listregexmatchsets": "waf:ListRegexMatchSets",
    "waf.listregexpatternsets": "waf:ListRegexPatternSets",
    "waf.listrulegroups": "waf:ListRuleGroups",
    "waf.listrules": "waf:ListRules",
    "waf.listsizeconstraintsets": "waf:ListSizeConstraintSets",
    "waf.listsqlinjectionmatchsets": "waf:ListSqlInjectionMatchSets",
    "waf.listsubscribedrulegroups": "waf:ListSubscribedRuleGroups",
    "waf.listtagsforresource": "waf:ListTagsForResource",
    "waf.listwebacls": "waf:ListWebACLs",
    "waf.listxssmatchsets": "waf:ListXssMatchSets",
    "waf.putloggingconfiguration": "waf:PutLoggingConfiguration",
    "waf.putpermissionpolicy": "waf:PutPermissionPolicy",
    "waf.tagresource": "waf:TagResource",
    "waf.untagresource": "waf:UntagResource",
    "waf.updatebytematchset": "waf:UpdateByteMatchSet",
    "waf.updategeomatchset": "waf:UpdateGeoMatchSet",
    "waf.updateipset": "waf:UpdateIPSet",
    "waf.updateratebasedrule": "waf:UpdateRateBasedRule",
    "waf.updateregexmatchset": "waf:UpdateRegexMatchSet",
    "waf.updateregexpatternset": "waf:UpdateRegexPatternSet",
    "waf.updaterule": "waf:UpdateRule",
    "waf.updaterulegroup": "waf:UpdateRuleGroup",
    "waf.updatesizeconstraintset": "waf:UpdateSizeConstraintSet",
    "waf.updatesqlinjectionmatchset": "waf:UpdateSqlInjectionMatchSet",
    "waf.updatewebacl": "waf:UpdateWebACL",
    "waf.updatexssmatchset": "waf:UpdateXssMatchSet",
    "wafregional.associatewebacl": "waf-regional:AssociateWebACL",
    "wafregional.createbytematchset": "waf-regional:CreateByteMatchSet",
    "wafregional.creategeomatchset": "waf-regional:CreateGeoMatchSet",
    "wafregional.createipset": "waf-regional:CreateIPSet",
    "wafregional.createratebasedrule": "waf-regional:CreateRateBasedRule",
    "wafregional.createregexmatchset": "waf-regional:CreateRegexMatchSet",
    "wafregional.createregexpatternset": "waf-regional:CreateRegexPatternSet",
    "wafregional.createrule": "waf-regional:CreateRule",
    "wafregional.createrulegroup": "waf-regional:CreateRuleGroup",
    "wafregional.createsizeconstraintset": "waf-regional:CreateSizeConstraintSet",
    "wafregional.createsqlinjectionmatchset": "waf-regional:CreateSqlInjectionMatchSet",
    "wafregional.createwebacl": "waf-regional:CreateWebACL",
    "wafregional.createwebaclmigrationstack": "waf-regional:CreateWebACLMigrationStack",
    "wafregional.createxssmatchset": "waf-regional:CreateXssMatchSet",
    "wafregional.deletebytematchset": "waf-regional:DeleteByteMatchSet",
    "wafregional.deletegeomatchset": "waf-regional:DeleteGeoMatchSet",
    "wafregional.deleteipset": "waf-regional:DeleteIPSet",
    "wafregional.deleteloggingconfiguration": "waf-regional:DeleteLoggingConfiguration",
    "wafregional.deletepermissionpolicy": "waf-regional:DeletePermissionPolicy",
    "wafregional.deleteratebasedrule": "waf-regional:DeleteRateBasedRule",
    "wafregional.deleteregexmatchset": "waf-regional:DeleteRegexMatchSet",
    "wafregional.deleteregexpatternset": "waf-regional:DeleteRegexPatternSet",
    "wafregional.deleterule": "waf-regional:DeleteRule",
    "wafregional.deleterulegroup": "waf-regional:DeleteRuleGroup",
    "wafregional.deletesizeconstraintset": "waf-regional:DeleteSizeConstraintSet",
    "wafregional.deletesqlinjectionmatchset": "waf-regional:DeleteSqlInjectionMatchSet",
    "wafregional.deletewebacl": "waf-regional:DeleteWebACL",
    "wafregional.deletexssmatchset": "waf-regional:DeleteXssMatchSet",
    "wafregional.disassociatewebacl": "waf-regional:DisassociateWebACL",
    "wafregional.getbytematchset": "waf-regional:GetByteMatchSet",
    "wafregional.getchangetoken": "waf-regional:GetChangeToken",
    "wafregional.getchangetokenstatus": "waf-regional:GetChangeTokenStatus",
    "wafregional.getgeomatchset": "waf-regional:GetGeoMatchSet",
    "wafregional.getipset": "waf-regional:GetIPSet",
    "wafregional.getloggingconfiguration": "waf-regional:GetLoggingConfiguration",
    "wafregional.getpermissionpolicy": "waf-regional:GetPermissionPolicy",
    "wafregional.getratebasedrule": "waf-regional:GetRateBasedRule",
    "wafregional.getratebasedrulemanagedkeys": "waf-regional:GetRateBasedRuleManagedKeys",
    "wafregional.getregexmatchset": "waf-regional:GetRegexMatchSet",
    "wafregional.getregexpatternset": "waf-regional:GetRegexPatternSet",
    "wafregional.getrule": "waf-regional:GetRule",
    "wafregional.getrulegroup": "waf-regional:GetRuleGroup",
    "wafregional.getsampledrequests": "waf-regional:GetSampledRequests",
    "wafregional.getsizeconstraintset": "waf-regional:GetSizeConstraintSet",
    "wafregional.getsqlinjectionmatchset": "waf-regional:GetSqlInjectionMatchSet",
    "wafregional.getwebacl": "waf-regional:GetWebACL",
    "wafregional.getwebaclforresource": "waf-regional:GetWebACLForResource",
    "wafregional.getxssmatchset": "waf-regional:GetXssMatchSet",
    "wafregional.listactivatedrulesinrulegroup": "waf-regional:ListActivatedRulesInRuleGroup",
    "wafregional.listbytematchsets": "waf-regional:ListByteMatchSets",
    "wafregional.listgeomatchsets": "waf-regional:ListGeoMatchSets",
    "wafregional.listipsets": "waf-regional:ListIPSets",
    "wafregional.listloggingconfigurations": "waf-regional:ListLoggingConfigurations",
    "wafregional.listratebasedrules": "waf-regional:ListRateBasedRules",
    "wafregional.listregexmatchsets": "waf-regional:ListRegexMatchSets",
    "wafregional.listregexpatternsets": "waf-regional:ListRegexPatternSets",
    "wafregional.listresourcesforwebacl": "waf-regional:ListResourcesForWebACL",
    "wafregional.listrulegroups": "waf-regional:ListRuleGroups",
    "wafregional.listrules": "waf-regional:ListRules",
    "wafregional.listsizeconstraintsets": "waf-regional:ListSizeConstraintSets",
    "wafregional.listsqlinjectionmatchsets": "waf-regional:ListSqlInjectionMatchSets",
    "wafregional.listsubscribedrulegroups": "waf-regional:ListSubscribedRuleGroups",
    "wafregional.listtagsforresource": "waf-regional:ListTagsForResource",
    "wafregional.listwebacls": "waf-regional:ListWebACLs",
    "wafregional.listxssmatchsets": "waf-regional:ListXssMatchSets",
    "wafregional.putloggingconfiguration": "waf-regional:PutLoggingConfiguration",
    "wafregional.putpermissionpolicy": "waf-regional:PutPermissionPolicy",
    "wafregional.tagresource": "waf-regional:TagResource",
    "wafregional.untagresource": "waf-regional:UntagResource",
    "wafregional.updatebytematchset": "waf-regional:UpdateByteMatchSet",
    "wafregional.updategeomatchset": "waf-regional:UpdateGeoMatchSet",
    "wafregional.updateipset": "waf-regional:UpdateIPSet",
    "wafregional.updateratebasedrule": "waf-regional:UpdateRateBasedRule",
    "wafregional.updateregexmatchset": "waf-regional:UpdateRegexMatchSet",
    "wafregional.updateregexpatternset": "waf-regional:UpdateRegexPatternSet",
    "wafregional.updaterule": "waf-regional:UpdateRule",
    "wafregional.updaterulegroup": "waf-regional:UpdateRuleGroup",
    "wafregional.updatesizeconstraintset": "waf-regional:UpdateSizeConstraintSet",
    "wafregional.updatesqlinjectionmatchset": "waf-regional:UpdateSqlInjectionMatchSet",
    "wafregional.updatewebacl": "waf-regional:UpdateWebACL",
    "wafregional.updatexssmatchset": "waf-regional:UpdateXssMatchSet",
    "wafv2.associatewebacl": "wafv2:AssociateWebACL",
    "wafv2.checkcapacity": "wafv2:CheckCapacity",
    "wafv2.createipset": "wafv2:CreateIPSet",
    "wafv2.createregexpatternset": "wafv2:CreateRegexPatternSet",
    "wafv2.createrulegroup": "wafv2:CreateRuleGroup",
    "wafv2.createwebacl": "wafv2:CreateWebACL",
    "wafv2.deletefirewallmanagerrulegroups": "wafv2:DeleteFirewallManagerRuleGroups",
    "wafv2.deleteipset": "wafv2:DeleteIPSet",
    "wafv2.deleteloggingconfiguration": "wafv2:DeleteLoggingConfiguration",
    "wafv2.deletepermissionpolicy": "wafv2:DeletePermissionPolicy",
    "wafv2.deleteregexpatternset": "wafv2:DeleteRegexPatternSet",
    "wafv2.deleterulegroup": "wafv2:DeleteRuleGroup",
    "wafv2.deletewebacl": "wafv2:DeleteWebACL",
    "wafv2.describemanagedrulegroup": "wafv2:DescribeManagedRuleGroup",
    "wafv2.disassociatewebacl": "wafv2:DisassociateWebACL",
    "wafv2.generatemobilesdkreleaseurl": "wafv2:GenerateMobileSdkReleaseUrl",
    "wafv2.getipset": "wafv2:GetIPSet",
    "wafv2.getloggingconfiguration": "wafv2:GetLoggingConfiguration",
    "wafv2.getmanagedruleset": "wafv2:GetManagedRuleSet",
    "wafv2.getmobilesdkrelease": "wafv2:GetMobileSdkRelease",
    "wafv2.getpermissionpolicy": "wafv2:GetPermissionPolicy",
    "wafv2.getratebasedstatementmanagedkeys": "wafv2:GetRateBasedStatementManagedKeys",
    "wafv2.getregexpatternset": "wafv2:GetRegexPatternSet",
    "wafv2.getrulegroup": "wafv2:GetRuleGroup",
    "wafv2.getsampledrequests": "wafv2:GetSampledRequests",
    "wafv2.getwebacl": "wafv2:GetWebACL",
    "wafv2.getwebaclforresource": "wafv2:GetWebACLForResource",
    "wafv2.listavailablemanagedrulegroups": "wafv2:ListAvailableManagedRuleGroups",
    "wafv2.listavailablemanagedrulegroupversions": "wafv2:ListAvailableManagedRuleGroupVersions",
    "wafv2.listipsets": "wafv2:ListIPSets",
    "wafv2.listloggingconfigurations": "wafv2:ListLoggingConfigurations",
    "wafv2.listmanagedrulesets": "wafv2:ListManagedRuleSets",
    "wafv2.listmobilesdkreleases": "wafv2:ListMobileSdkReleases",
    "wafv2.listregexpatternsets": "wafv2:ListRegexPatternSets",
    "wafv2.listresourcesforwebacl": "wafv2:ListResourcesForWebACL",
    "wafv2.listrulegroups": "wafv2:ListRuleGroups",
    "wafv2.listtagsforresource": "wafv2:ListTagsForResource",
    "wafv2.listwebacls": "wafv2:ListWebACLs",
    "wafv2.putloggingconfiguration": "wafv2:PutLoggingConfiguration",
    "wafv2.putmanagedrulesetversions": "wafv2:PutManagedRuleSetVersions",
    "wafv2.putpermissionpolicy": "wafv2:PutPermissionPolicy",
    "wafv2.tagresource": "wafv2:TagResource",
    "wafv2.untagresource": "wafv2:UntagResource",
    "wafv2.updateipset": "wafv2:UpdateIPSet",
    "wafv2.updatemanagedrulesetversionexpirydate": "wafv2:UpdateManagedRuleSetVersionExpiryDate",
    "wafv2.updateregexpatternset": "wafv2:UpdateRegexPatternSet",
    "wafv2.updaterulegroup": "wafv2:UpdateRuleGroup",
    "wafv2.updatewebacl": "wafv2:UpdateWebACL",
    "wellarchitected.associatelenses": "wellarchitected:AssociateLenses",
    "wellarchitected.createlensshare": "wellarchitected:CreateLensShare",
    "wellarchitected.createlensversion": "wellarchitected:CreateLensVersion",
    "wellarchitected.createmilestone": "wellarchitected:CreateMilestone",
    "wellarchitected.createworkload": "wellarchitected:CreateWorkload",
    "wellarchitected.createworkloadshare": "wellarchitected:CreateWorkloadShare",
    "wellarchitected.deletelens": "wellarchitected:DeleteLens",
    "wellarchitected.deletelensshare": "wellarchitected:DeleteLensShare",
    "wellarchitected.deleteworkload": "wellarchitected:DeleteWorkload",
    "wellarchitected.deleteworkloadshare": "wellarchitected:DeleteWorkloadShare",
    "wellarchitected.disassociatelenses": "wellarchitected:DisassociateLenses",
    "wellarchitected.exportlens": "wellarchitected:ExportLens",
    "wellarchitected.getanswer": "wellarchitected:GetAnswer",
    "wellarchitected.getlens": "wellarchitected:GetLens",
    "wellarchitected.getlensreview": "wellarchitected:GetLensReview",
    "wellarchitected.getlensreviewreport": "wellarchitected:GetLensReviewReport",
    "wellarchitected.getlensversiondifference": "wellarchitected:GetLensVersionDifference",
    "wellarchitected.getmilestone": "wellarchitected:GetMilestone",
    "wellarchitected.getworkload": "wellarchitected:GetWorkload",
    "wellarchitected.importlens": "wellarchitected:ImportLens",
    "wellarchitected.listanswers": "wellarchitected:ListAnswers",
    "wellarchitected.listlenses": "wellarchitected:ListLenses",
    "wellarchitected.listlensreviewimprovements": "wellarchitected:ListLensReviewImprovements",
    "wellarchitected.listlensreviews": "wellarchitected:ListLensReviews",
    "wellarchitected.listlensshares": "wellarchitected:ListLensShares",
    "wellarchitected.listmilestones": "wellarchitected:ListMilestones",
    "wellarchitected.listnotifications": "wellarchitected:ListNotifications",
    "wellarchitected.listshareinvitations": "wellarchitected:ListShareInvitations",
    "wellarchitected.listtagsforresource": "wellarchitected:ListTagsForResource",
    "wellarchitected.listworkloads": "wellarchitected:ListWorkloads",
    "wellarchitected.listworkloadshares": "wellarchitected:ListWorkloadShares",
    "wellarchitected.tagresource": "wellarchitected:TagResource",
    "wellarchitected.untagresource": "wellarchitected:UntagResource",
    "wellarchitected.updateanswer": "wellarchitected:UpdateAnswer",
    "wellarchitected.updatelensreview": "wellarchitected:UpdateLensReview",
    "wellarchitected.updateshareinvitation": "wellarchitected:UpdateShareInvitation",
    "wellarchitected.updateworkload": "wellarchitected:UpdateWorkload",
    "wellarchitected.updateworkloadshare": "wellarchitected:UpdateWorkloadShare",
    "wellarchitected.upgradelensreview": "wellarchitected:UpgradeLensReview",
    "wisdom.createassistant": "wisdom:CreateAssistant",
    "wisdom.createassistantassociation": "wisdom:CreateAssistantAssociation",
    "wisdom.createcontent": "wisdom:CreateContent",
    "wisdom.createknowledgebase": "wisdom:CreateKnowledgeBase",
    "wisdom.createsession": "wisdom:CreateSession",
    "wisdom.deleteassistant": "wisdom:DeleteAssistant",
    "wisdom.deleteassistantassociation": "wisdom:DeleteAssistantAssociation",
    "wisdom.deletecontent": "wisdom:DeleteContent",
    "wisdom.deleteknowledgebase": "wisdom:DeleteKnowledgeBase",
    "wisdom.getassistant": "wisdom:GetAssistant",
    "wisdom.getassistantassociation": "wisdom:GetAssistantAssociation",
    "wisdom.getcontent": "wisdom:GetContent",
    "wisdom.getcontentsummary": "wisdom:GetContentSummary",
    "wisdom.getknowledgebase": "wisdom:GetKnowledgeBase",
    "wisdom.getrecommendations": "wisdom:GetRecommendations",
    "wisdom.getsession": "wisdom:GetSession",
    "wisdom.listassistantassociations": "wisdom:ListAssistantAssociations",
    "wisdom.listassistants": "wisdom:ListAssistants",
    "wisdom.listcontents": "wisdom:ListContents",
    "wisdom.listknowledgebases": "wisdom:ListKnowledgeBases",
    "wisdom.listtagsforresource": "wisdom:ListTagsForResource",
    "wisdom.notifyrecommendationsreceived": "wisdom:NotifyRecommendationsReceived",
    "wisdom.queryassistant": "wisdom:QueryAssistant",
    "wisdom.removeknowledgebasetemplateuri": "wisdom:RemoveKnowledgeBaseTemplateUri",
    "wisdom.searchcontent": "wisdom:SearchContent",
    "wisdom.searchsessions": "wisdom:SearchSessions",
    "wisdom.startcontentupload": "wisdom:StartContentUpload",
    "wisdom.tagresource": "wisdom:TagResource",
    "wisdom.untagresource": "wisdom:UntagResource",
    "wisdom.updatecontent": "wisdom:UpdateContent",
    "wisdom.updateknowledgebasetemplateuri": "wisdom:UpdateKnowledgeBaseTemplateUri",
    "workdocs.abortdocumentversionupload": "workdocs:AbortDocumentVersionUpload",
    "workdocs.activateuser": "workdocs:ActivateUser",
    "workdocs.addresourcepermissions": "workdocs:AddResourcePermissions",
    "workdocs.createcomment": "workdocs:CreateComment",
    "workdocs.createcustommetadata": "workdocs:CreateCustomMetadata",
    "workdocs.createfolder": "workdocs:CreateFolder",
    "workdocs.createlabels": "workdocs:CreateLabels",
    "workdocs.createnotificationsubscription": "workdocs:CreateNotificationSubscription",
    "workdocs.createuser": "workdocs:CreateUser",
    "workdocs.deactivateuser": "workdocs:DeactivateUser",
    "workdocs.deletecomment": "workdocs:DeleteComment",
    "workdocs.deletecustommetadata": "workdocs:DeleteCustomMetadata",
    "workdocs.deletedocument": "workdocs:DeleteDocument",
    "workdocs.deletefolder": "workdocs:DeleteFolder",
    "workdocs.deletefoldercontents": "workdocs:DeleteFolderContents",
    "workdocs.deletelabels": "workdocs:DeleteLabels",
    "workdocs.deletenotificationsubscription": "workdocs:DeleteNotificationSubscription",
    "workdocs.deleteuser": "workdocs:DeleteUser",
    "workdocs.describeactivities": "workdocs:DescribeActivities",
    "workdocs.describecomments": "workdocs:DescribeComments",
    "workdocs.describedocumentversions": "workdocs:DescribeDocumentVersions",
    "workdocs.describefoldercontents": "workdocs:DescribeFolderContents",
    "workdocs.describegroups": "workdocs:DescribeGroups",
    "workdocs.describenotificationsubscriptions": "workdocs:DescribeNotificationSubscriptions",
    "workdocs.describeresourcepermissions": "workdocs:DescribeResourcePermissions",
    "workdocs.describerootfolders": "workdocs:DescribeRootFolders",
    "workdocs.describeusers": "workdocs:DescribeUsers",
    "workdocs.getcurrentuser": "workdocs:GetCurrentUser",
    "workdocs.getdocument": "workdocs:GetDocument",
    "workdocs.getdocumentpath": "workdocs:GetDocumentPath",
    "workdocs.getdocumentversion": "workdocs:GetDocumentVersion",
    "workdocs.getfolder": "workdocs:GetFolder",
    "workdocs.getfolderpath": "workdocs:GetFolderPath",
    "workdocs.getresources": "workdocs:GetResources",
    "workdocs.initiatedocumentversionupload": "workdocs:InitiateDocumentVersionUpload",
    "workdocs.removeallresourcepermissions": "workdocs:RemoveAllResourcePermissions",
    "workdocs.removeresourcepermission": "workdocs:RemoveResourcePermission",
    "workdocs.updatedocument": "workdocs:UpdateDocument",
    "workdocs.updatedocumentversion": "workdocs:UpdateDocumentVersion",
    "workdocs.updatefolder": "workdocs:UpdateFolder",
    "workdocs.updateuser": "workdocs:UpdateUser",
    "worklink.associatedomain": "worklink:AssociateDomain",
    "worklink.associatewebsiteauthorizationprovider": "worklink:AssociateWebsiteAuthorizationProvider",
    "worklink.associatewebsitecertificateauthority": "worklink:AssociateWebsiteCertificateAuthority",
    "worklink.createfleet": "worklink:CreateFleet",
    "worklink.deletefleet": "worklink:DeleteFleet",
    "worklink.describeauditstreamconfiguration": "worklink:DescribeAuditStreamConfiguration",
    "worklink.describecompanynetworkconfiguration": "worklink:DescribeCompanyNetworkConfiguration",
    "worklink.describedevice": "worklink:DescribeDevice",
    "worklink.describedevicepolicyconfiguration": "worklink:DescribeDevicePolicyConfiguration",
    "worklink.describedomain": "worklink:DescribeDomain",
    "worklink.describefleetmetadata": "worklink:DescribeFleetMetadata",
    "worklink.describeidentityproviderconfiguration": "worklink:DescribeIdentityProviderConfiguration",
    "worklink.describewebsitecertificateauthority": "worklink:DescribeWebsiteCertificateAuthority",
    "worklink.disassociatedomain": "worklink:DisassociateDomain",
    "worklink.disassociatewebsiteauthorizationprovider": "worklink:DisassociateWebsiteAuthorizationProvider",
    "worklink.disassociatewebsitecertificateauthority": "worklink:DisassociateWebsiteCertificateAuthority",
    "worklink.listdevices": "worklink:ListDevices",
    "worklink.listdomains": "worklink:ListDomains",
    "worklink.listfleets": "worklink:ListFleets",
    "worklink.listtagsforresource": "worklink:ListTagsForResource",
    "worklink.listwebsiteauthorizationproviders": "worklink:ListWebsiteAuthorizationProviders",
    "worklink.listwebsitecertificateauthorities": "worklink:ListWebsiteCertificateAuthorities",
    "worklink.restoredomainaccess": "worklink:RestoreDomainAccess",
    "worklink.revokedomainaccess": "worklink:RevokeDomainAccess",
    "worklink.signoutuser": "worklink:SignOutUser",
    "worklink.tagresource": "worklink:TagResource",
    "worklink.untagresource": "worklink:UntagResource",
    "worklink.updateauditstreamconfiguration": "worklink:UpdateAuditStreamConfiguration",
    "worklink.updatecompanynetworkconfiguration": "worklink:UpdateCompanyNetworkConfiguration",
    "worklink.updatedevicepolicyconfiguration": "worklink:UpdateDevicePolicyConfiguration",
    "worklink.updatedomainmetadata": "worklink:UpdateDomainMetadata",
    "worklink.updatefleetmetadata": "worklink:UpdateFleetMetadata",
    "worklink.updateidentityproviderconfiguration": "worklink:UpdateIdentityProviderConfiguration",
    "workmail.associatedelegatetoresource": "workmail:AssociateDelegateToResource",
    "workmail.associatemembertogroup": "workmail:AssociateMemberToGroup",
    "workmail.cancelmailboxexportjob": "workmail:CancelMailboxExportJob",
    "workmail.createalias": "workmail:CreateAlias",
    "workmail.creategroup": "workmail:CreateGroup",
    "workmail.createmobiledeviceaccessrule": "workmail:CreateMobileDeviceAccessRule",
    "workmail.createorganization": "workmail:CreateOrganization",
    "workmail.createresource": "workmail:CreateResource",
    "workmail.createuser": "workmail:CreateUser",
    "workmail.deleteaccesscontrolrule": "workmail:DeleteAccessControlRule",
    "workmail.deletealias": "workmail:DeleteAlias",
    "workmail.deleteemailmonitoringconfiguration": "workmail:DeleteEmailMonitoringConfiguration",
    "workmail.deletegroup": "workmail:DeleteGroup",
    "workmail.deletemailboxpermissions": "workmail:DeleteMailboxPermissions",
    "workmail.deletemobiledeviceaccessoverride": "workmail:DeleteMobileDeviceAccessOverride",
    "workmail.deletemobiledeviceaccessrule": "workmail:DeleteMobileDeviceAccessRule",
    "workmail.deleteorganization": "workmail:DeleteOrganization",
    "workmail.deleteresource": "workmail:DeleteResource",
    "workmail.deleteretentionpolicy": "workmail:DeleteRetentionPolicy",
    "workmail.deleteuser": "workmail:DeleteUser",
    "workmail.deregisterfromworkmail": "workmail:DeregisterFromWorkMail",
    "workmail.deregistermaildomain": "workmail:DeregisterMailDomain",
    "workmail.describeemailmonitoringconfiguration": "workmail:DescribeEmailMonitoringConfiguration",
    "workmail.describegroup": "workmail:DescribeGroup",
    "workmail.describeinbounddmarcsettings": "workmail:DescribeInboundDmarcSettings",
    "workmail.describemailboxexportjob": "workmail:DescribeMailboxExportJob",
    "workmail.describeorganization": "workmail:DescribeOrganization",
    "workmail.describeresource": "workmail:DescribeResource",
    "workmail.describeuser": "workmail:DescribeUser",
    "workmail.disassociatedelegatefromresource": "workmail:DisassociateDelegateFromResource",
    "workmail.disassociatememberfromgroup": "workmail:DisassociateMemberFromGroup",
    "workmail.getaccesscontroleffect": "workmail:GetAccessControlEffect",
    "workmail.getdefaultretentionpolicy": "workmail:GetDefaultRetentionPolicy",
    "workmail.getmailboxdetails": "workmail:GetMailboxDetails",
    "workmail.getmaildomain": "workmail:GetMailDomain",
    "workmail.getmobiledeviceaccesseffect": "workmail:GetMobileDeviceAccessEffect",
    "workmail.getmobiledeviceaccessoverride": "workmail:GetMobileDeviceAccessOverride",
    "workmail.listaccesscontrolrules": "workmail:ListAccessControlRules",
    "workmail.listaliases": "workmail:ListAliases",
    "workmail.listgroupmembers": "workmail:ListGroupMembers",
    "workmail.listgroups": "workmail:ListGroups",
    "workmail.listmailboxexportjobs": "workmail:ListMailboxExportJobs",
    "workmail.listmailboxpermissions": "workmail:ListMailboxPermissions",
    "workmail.listmaildomains": "workmail:ListMailDomains",
    "workmail.listmobiledeviceaccessoverrides": "workmail:ListMobileDeviceAccessOverrides",
    "workmail.listmobiledeviceaccessrules": "workmail:ListMobileDeviceAccessRules",
    "workmail.listorganizations": "workmail:ListOrganizations",
    "workmail.listresourcedelegates": "workmail:ListResourceDelegates",
    "workmail.listresources": "workmail:ListResources",
    "workmail.listtagsforresource": "workmail:ListTagsForResource",
    "workmail.listusers": "workmail:ListUsers",
    "workmail.putaccesscontrolrule": "workmail:PutAccessControlRule",
    "workmail.putemailmonitoringconfiguration": "workmail:PutEmailMonitoringConfiguration",
    "workmail.putinbounddmarcsettings": "workmail:PutInboundDmarcSettings",
    "workmail.putmailboxpermissions": "workmail:PutMailboxPermissions",
    "workmail.putmobiledeviceaccessoverride": "workmail:PutMobileDeviceAccessOverride",
    "workmail.putretentionpolicy": "workmail:PutRetentionPolicy",
    "workmail.registermaildomain": "workmail:RegisterMailDomain",
    "workmail.registertoworkmail": "workmail:RegisterToWorkMail",
    "workmail.resetpassword": "workmail:ResetPassword",
    "workmail.startmailboxexportjob": "workmail:StartMailboxExportJob",
    "workmail.tagresource": "workmail:TagResource",
    "workmail.untagresource": "workmail:UntagResource",
    "workmail.updatedefaultmaildomain": "workmail:UpdateDefaultMailDomain",
    "workmail.updatemailboxquota": "workmail:UpdateMailboxQuota",
    "workmail.updatemobiledeviceaccessrule": "workmail:UpdateMobileDeviceAccessRule",
    "workmail.updateprimaryemailaddress": "workmail:UpdatePrimaryEmailAddress",
    "workmail.updateresource": "workmail:UpdateResource",
    "workmailmessageflow.getrawmessagecontent": "workmailmessageflow:GetRawMessageContent",
    "workmailmessageflow.putrawmessagecontent": "workmailmessageflow:PutRawMessageContent",
    "workspaces.associateconnectionalias": "workspaces:AssociateConnectionAlias",
    "workspaces.associateipgroups": "workspaces:AssociateIpGroups",
    "workspaces.authorizeiprules": "workspaces:AuthorizeIpRules",
    "workspaces.copyworkspaceimage": "workspaces:CopyWorkspaceImage",
    "workspaces.createconnectclientaddin": "workspaces:CreateConnectClientAddIn",
    "workspaces.createconnectionalias": "workspaces:CreateConnectionAlias",
    "workspaces.createipgroup": "workspaces:CreateIpGroup",
    "workspaces.createtags": "workspaces:CreateTags",
    "workspaces.createupdatedworkspaceimage": "workspaces:CreateUpdatedWorkspaceImage",
    "workspaces.createworkspacebundle": "workspaces:CreateWorkspaceBundle",
    "workspaces.createworkspaces": "workspaces:CreateWorkspaces",
    "workspaces.deleteclientbranding": "workspaces:DeleteClientBranding",
    "workspaces.deleteconnectclientaddin": "workspaces:DeleteConnectClientAddIn",
    "workspaces.deleteconnectionalias": "workspaces:DeleteConnectionAlias",
    "workspaces.deleteipgroup": "workspaces:DeleteIpGroup",
    "workspaces.deletetags": "workspaces:DeleteTags",
    "workspaces.deleteworkspacebundle": "workspaces:DeleteWorkspaceBundle",
    "workspaces.deleteworkspaceimage": "workspaces:DeleteWorkspaceImage",
    "workspaces.deregisterworkspacedirectory": "workspaces:DeregisterWorkspaceDirectory",
    "workspaces.describeaccount": "workspaces:DescribeAccount",
    "workspaces.describeaccountmodifications": "workspaces:DescribeAccountModifications",
    "workspaces.describeclientbranding": "workspaces:DescribeClientBranding",
    "workspaces.describeclientproperties": "workspaces:DescribeClientProperties",
    "workspaces.describeconnectclientaddins": "workspaces:DescribeConnectClientAddIns",
    "workspaces.describeconnectionaliases": "workspaces:DescribeConnectionAliases",
    "workspaces.describeconnectionaliaspermissions": "workspaces:DescribeConnectionAliasPermissions",
    "workspaces.describeipgroups": "workspaces:DescribeIpGroups",
    "workspaces.describetags": "workspaces:DescribeTags",
    "workspaces.describeworkspacebundles": "workspaces:DescribeWorkspaceBundles",
    "workspaces.describeworkspacedirectories": "workspaces:DescribeWorkspaceDirectories",
    "workspaces.describeworkspaceimagepermissions": "workspaces:DescribeWorkspaceImagePermissions",
    "workspaces.describeworkspaceimages": "workspaces:DescribeWorkspaceImages",
    "workspaces.describeworkspaces": "workspaces:DescribeWorkspaces",
    "workspaces.describeworkspacesconnectionstatus": "workspaces:DescribeWorkspacesConnectionStatus",
    "workspaces.describeworkspacesnapshots": "workspaces:DescribeWorkspaceSnapshots",
    "workspaces.disassociateconnectionalias": "workspaces:DisassociateConnectionAlias",
    "workspaces.disassociateipgroups": "workspaces:DisassociateIpGroups",
    "workspaces.importclientbranding": "workspaces:ImportClientBranding",
    "workspaces.importworkspaceimage": "workspaces:ImportWorkspaceImage",
    "workspaces.listavailablemanagementcidrranges": "workspaces:ListAvailableManagementCidrRanges",
    "workspaces.migrateworkspace": "workspaces:MigrateWorkspace",
    "workspaces.modifyaccount": "workspaces:ModifyAccount",
    "workspaces.modifyclientproperties": "workspaces:ModifyClientProperties",
    "workspaces.modifyselfservicepermissions": "workspaces:ModifySelfservicePermissions",
    "workspaces.modifyworkspaceaccessproperties": "workspaces:ModifyWorkspaceAccessProperties",
    "workspaces.modifyworkspacecreationproperties": "workspaces:ModifyWorkspaceCreationProperties",
    "workspaces.modifyworkspaceproperties": "workspaces:ModifyWorkspaceProperties",
    "workspaces.modifyworkspacestate": "workspaces:ModifyWorkspaceState",
    "workspaces.rebootworkspaces": "workspaces:RebootWorkspaces",
    "workspaces.rebuildworkspaces": "workspaces:RebuildWorkspaces",
    "workspaces.registerworkspacedirectory": "workspaces:RegisterWorkspaceDirectory",
    "workspaces.restoreworkspace": "workspaces:RestoreWorkspace",
    "workspaces.revokeiprules": "workspaces:RevokeIpRules",
    "workspaces.startworkspaces": "workspaces:StartWorkspaces",
    "workspaces.stopworkspaces": "workspaces:StopWorkspaces",
    "workspaces.terminateworkspaces": "workspaces:TerminateWorkspaces",
    "workspaces.updateconnectclientaddin": "workspaces:UpdateConnectClientAddIn",
    "workspaces.updateconnectionaliaspermission": "workspaces:UpdateConnectionAliasPermission",
    "workspaces.updaterulesofipgroup": "workspaces:UpdateRulesOfIpGroup",
    "workspaces.updateworkspacebundle": "workspaces:UpdateWorkspaceBundle",
    "workspaces.updateworkspaceimagepermission": "workspaces:UpdateWorkspaceImagePermission",
    "workspacesweb.associatebrowsersettings": "workspaces-web:AssociateBrowserSettings",
    "workspacesweb.associatenetworksettings": "workspaces-web:AssociateNetworkSettings",
    "workspacesweb.associatetruststore": "workspaces-web:AssociateTrustStore",
    "workspacesweb.associateusersettings": "workspaces-web:AssociateUserSettings",
    "workspacesweb.createbrowsersettings": "workspaces-web:CreateBrowserSettings",
    "workspacesweb.createidentityprovider": "workspaces-web:CreateIdentityProvider",
    "workspacesweb.createnetworksettings": "workspaces-web:CreateNetworkSettings",
    "workspacesweb.createportal": "workspaces-web:CreatePortal",
    "workspacesweb.createtruststore": "workspaces-web:CreateTrustStore",
    "workspacesweb.createusersettings": "workspaces-web:CreateUserSettings",
    "workspacesweb.deletebrowsersettings": "workspaces-web:DeleteBrowserSettings",
    "workspacesweb.deleteidentityprovider": "workspaces-web:DeleteIdentityProvider",
    "workspacesweb.deletenetworksettings": "workspaces-web:DeleteNetworkSettings",
    "workspacesweb.deleteportal": "workspaces-web:DeletePortal",
    "workspacesweb.deletetruststore": "workspaces-web:DeleteTrustStore",
    "workspacesweb.deleteusersettings": "workspaces-web:DeleteUserSettings",
    "workspacesweb.disassociatebrowsersettings": "workspaces-web:DisassociateBrowserSettings",
    "workspacesweb.disassociatenetworksettings": "workspaces-web:DisassociateNetworkSettings",
    "workspacesweb.disassociatetruststore": "workspaces-web:DisassociateTrustStore",
    "workspacesweb.disassociateusersettings": "workspaces-web:DisassociateUserSettings",
    "workspacesweb.getbrowsersettings": "workspaces-web:GetBrowserSettings",
    "workspacesweb.getidentityprovider": "workspaces-web:GetIdentityProvider",
    "workspacesweb.getnetworksettings": "workspaces-web:GetNetworkSettings",
    "workspacesweb.getportal": "workspaces-web:GetPortal",
    "workspacesweb.getportalserviceprovidermetadata": "workspaces-web:GetPortalServiceProviderMetadata",
    "workspacesweb.gettruststore": "workspaces-web:GetTrustStore",
    "workspacesweb.gettruststorecertificate": "workspaces-web:GetTrustStoreCertificate",
    "workspacesweb.getusersettings": "workspaces-web:GetUserSettings",
    "workspacesweb.listbrowsersettings": "workspaces-web:ListBrowserSettings",
    "workspacesweb.listidentityproviders": "workspaces-web:ListIdentityProviders",
    "workspacesweb.listnetworksettings": "workspaces-web:ListNetworkSettings",
    "workspacesweb.listportals": "workspaces-web:ListPortals",
    "workspacesweb.listtagsforresource": "workspaces-web:ListTagsForResource",
    "workspacesweb.listtruststorecertificates": "workspaces-web:ListTrustStoreCertificates",
    "workspacesweb.listtruststores": "workspaces-web:ListTrustStores",
    "workspacesweb.listusersettings": "workspaces-web:ListUserSettings",
    "workspacesweb.tagresource": "workspaces-web:TagResource",
    "workspacesweb.untagresource": "workspaces-web:UntagResource",
    "workspacesweb.updatebrowsersettings": "workspaces-web:UpdateBrowserSettings",
    "workspacesweb.updateidentityprovider": "workspaces-web:UpdateIdentityProvider",
    "workspacesweb.updatenetworksettings": "workspaces-web:UpdateNetworkSettings",
    "workspacesweb.updateportal": "workspaces-web:UpdatePortal",
    "workspacesweb.updatetruststore": "workspaces-web:UpdateTrustStore",
    "workspacesweb.updateusersettings": "workspaces-web:UpdateUserSettings",
    "xray.batchgettraces": "xray:BatchGetTraces",
    "xray.creategroup": "xray:CreateGroup",
    "xray.createsamplingrule": "xray:CreateSamplingRule",
    "xray.deletegroup": "xray:DeleteGroup",
    "xray.deletesamplingrule": "xray:DeleteSamplingRule",
    "xray.getencryptionconfig": "xray:GetEncryptionConfig",
    "xray.getgroup": "xray:GetGroup",
    "xray.getgroups": "xray:GetGroups",
    "xray.getinsight": "xray:GetInsight",
    "xray.getinsightevents": "xray:GetInsightEvents",
    "xray.getinsightimpactgraph": "xray:GetInsightImpactGraph",
    "xray.getinsightsummaries": "xray:GetInsightSummaries",
    "xray.getsamplingrules": "xray:GetSamplingRules",
    "xray.getsamplingstatisticsummaries": "xray:GetSamplingStatisticSummaries",
    "xray.getsamplingtargets": "xray:GetSamplingTargets",
    "xray.getservicegraph": "xray:GetServiceGraph",
    "xray.gettimeseriesservicestatistics": "xray:GetTimeSeriesServiceStatistics",
    "xray.gettracegraph": "xray:GetTraceGraph",
    "xray.gettracesummaries": "xray:GetTraceSummaries",
    "xray.listtagsforresource": "xray:ListTagsForResource",
    "xray.putencryptionconfig": "xray:PutEncryptionConfig",
    "xray.puttelemetryrecords": "xray:PutTelemetryRecords",
    "xray.puttracesegments": "xray:PutTraceSegments",
    "xray.tagresource": "xray:TagResource",
    "xray.untagresource": "xray:UntagResource",
    "xray.updategroup": "xray:UpdateGroup",
    "xray.updatesamplingrule": "xray:UpdateSamplingRule"
}