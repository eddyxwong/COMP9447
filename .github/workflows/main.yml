# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job_1:
    name: Set-up Github Actions
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed

      - name: Installing All Dependancies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install e .

      - name: Run Simple Test
        run: python ./tests/test_GenerateIAMPolicy.py

      - name: Simple Policy Testing Generation
        run: |
          python ./astStaticAnalysis/astBoto3.py ./astStaticAnalysis/astTest.py > policy.txt
      
      #Upload for future artifact use (Git diff?)
      - name: Upload policy as a artifact
        uses: actions/upload-artifact@v3
        with:
          name: policy
          path: policy.txt

  job_2:
    name: Display Policy
    needs: job_1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2

      - name: Download policy generated from job 1
        uses: actions/download-artifact@v3
        with:
          name: policy
      - shell: bash
        run: |
          value=`cat policy.txt`
          echo The result is $value
          "hello" > generated.txt
          git add .
          git commit -m "generated"
          git push


      